<?xml version="1.0"?>
<doc>
    <assembly>
        <name>log4net.2.0.8.0.Fakes</name>
    </assembly>
    <members>
        <member name="T:log4net.Appender.Fakes.ShimAdoNetAppender">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Appender.AdoNetAppender</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAdoNetAppender.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAdoNetAppender.#ctor(log4net.Appender.AdoNetAppender)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.ActivateOptions">
            <summary>Establecer el shim de AdoNetAppender.ActivateOptions()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.AddParameterAdoNetAppenderParameter">
            <summary>Establecer el shim de AdoNetAppender.AddParameter(AdoNetAppenderParameter parameter)</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimAdoNetAppender.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.AllInstances.ActivateOptions">
            <summary>Establecer el shim de AdoNetAppender.ActivateOptions()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.AllInstances.AddParameterAdoNetAppenderParameter">
            <summary>Establecer el shim de AdoNetAppender.AddParameter(AdoNetAppenderParameter parameter)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.AllInstances.AppSettingsKeyGet">
            <summary>Establecer el shim de AdoNetAppender.get_AppSettingsKey()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.AllInstances.AppSettingsKeySetString">
            <summary>Establecer el shim de AdoNetAppender.set_AppSettingsKey(String value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.AllInstances.CommandTextGet">
            <summary>Establecer el shim de AdoNetAppender.get_CommandText()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.AllInstances.CommandTextSetString">
            <summary>Establecer el shim de AdoNetAppender.set_CommandText(String value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.AllInstances.CommandTypeGet">
            <summary>Establecer el shim de AdoNetAppender.get_CommandType()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.AllInstances.CommandTypeSetCommandType">
            <summary>Establecer el shim de AdoNetAppender.set_CommandType(CommandType value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.AllInstances.ConnectionGet">
            <summary>Establecer el shim de AdoNetAppender.get_Connection()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.AllInstances.ConnectionSetIDbConnection">
            <summary>Establecer el shim de AdoNetAppender.set_Connection(IDbConnection value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.AllInstances.ConnectionStringGet">
            <summary>Establecer el shim de AdoNetAppender.get_ConnectionString()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.AllInstances.ConnectionStringNameGet">
            <summary>Establecer el shim de AdoNetAppender.get_ConnectionStringName()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.AllInstances.ConnectionStringNameSetString">
            <summary>Establecer el shim de AdoNetAppender.set_ConnectionStringName(String value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.AllInstances.ConnectionStringSetString">
            <summary>Establecer el shim de AdoNetAppender.set_ConnectionString(String value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.AllInstances.ConnectionTypeGet">
            <summary>Establecer el shim de AdoNetAppender.get_ConnectionType()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.AllInstances.ConnectionTypeSetString">
            <summary>Establecer el shim de AdoNetAppender.set_ConnectionType(String value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.AllInstances.CreateConnectionTypeString">
            <summary>Establecer el shim de AdoNetAppender.CreateConnection(Type connectionType, String connectionString)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.AllInstances.DiposeConnection">
            <summary>Establecer el shim de AdoNetAppender.DiposeConnection()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.AllInstances.GetLogStatementLoggingEvent">
            <summary>Establecer el shim de AdoNetAppender.GetLogStatement(LoggingEvent logEvent)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.AllInstances.InitializeDatabaseConnection">
            <summary>Establecer el shim de AdoNetAppender.InitializeDatabaseConnection()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.AllInstances.OnClose">
            <summary>Establecer el shim de AdoNetAppender.OnClose()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.AllInstances.ReconnectOnErrorGet">
            <summary>Establecer el shim de AdoNetAppender.get_ReconnectOnError()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.AllInstances.ReconnectOnErrorSetBoolean">
            <summary>Establecer el shim de AdoNetAppender.set_ReconnectOnError(Boolean value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.AllInstances.ResolveConnectionStringStringOut">
            <summary>Establecer el shim de AdoNetAppender.ResolveConnectionString(String&amp; connectionStringContext)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.AllInstances.ResolveConnectionType">
            <summary>Establecer el shim de AdoNetAppender.ResolveConnectionType()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.AllInstances.SecurityContextGet">
            <summary>Establecer el shim de AdoNetAppender.get_SecurityContext()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.AllInstances.SecurityContextSetSecurityContext">
            <summary>Establecer el shim de AdoNetAppender.set_SecurityContext(SecurityContext value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.AllInstances.SendBufferIDbTransactionLoggingEventArray">
            <summary>Establecer el shim de AdoNetAppender.SendBuffer(IDbTransaction dbTran, LoggingEvent[] events)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.AllInstances.SendBufferLoggingEventArray">
            <summary>Establecer el shim de AdoNetAppender.SendBuffer(LoggingEvent[] events)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.AllInstances.UseTransactionsGet">
            <summary>Establecer el shim de AdoNetAppender.get_UseTransactions()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.AllInstances.UseTransactionsSetBoolean">
            <summary>Establecer el shim de AdoNetAppender.set_UseTransactions(Boolean value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.AppSettingsKeyGet">
            <summary>Establecer el shim de AdoNetAppender.get_AppSettingsKey()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.AppSettingsKeySetString">
            <summary>Establecer el shim de AdoNetAppender.set_AppSettingsKey(String value)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAdoNetAppender.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAdoNetAppender.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAdoNetAppender.Bind(log4net.Appender.IAppender)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAdoNetAppender.Bind(log4net.Appender.IBulkAppender)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAdoNetAppender.Bind(log4net.Appender.IFlushable)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAdoNetAppender.Bind(log4net.Core.IOptionHandler)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.CommandTextGet">
            <summary>Establecer el shim de AdoNetAppender.get_CommandText()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.CommandTextSetString">
            <summary>Establecer el shim de AdoNetAppender.set_CommandText(String value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.CommandTypeGet">
            <summary>Establecer el shim de AdoNetAppender.get_CommandType()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.CommandTypeSetCommandType">
            <summary>Establecer el shim de AdoNetAppender.set_CommandType(CommandType value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.ConnectionGet">
            <summary>Establecer el shim de AdoNetAppender.get_Connection()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.ConnectionSetIDbConnection">
            <summary>Establecer el shim de AdoNetAppender.set_Connection(IDbConnection value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.ConnectionStringGet">
            <summary>Establecer el shim de AdoNetAppender.get_ConnectionString()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.ConnectionStringNameGet">
            <summary>Establecer el shim de AdoNetAppender.get_ConnectionStringName()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.ConnectionStringNameSetString">
            <summary>Establecer el shim de AdoNetAppender.set_ConnectionStringName(String value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.ConnectionStringSetString">
            <summary>Establecer el shim de AdoNetAppender.set_ConnectionString(String value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.ConnectionTypeGet">
            <summary>Establecer el shim de AdoNetAppender.get_ConnectionType()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.ConnectionTypeSetString">
            <summary>Establecer el shim de AdoNetAppender.set_ConnectionType(String value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.Constructor">
            <summary>Establecer el shim de AdoNetAppender.AdoNetAppender()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.CreateConnectionTypeString">
            <summary>Establecer el shim de AdoNetAppender.CreateConnection(Type connectionType, String connectionString)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.DiposeConnection">
            <summary>Establecer el shim de AdoNetAppender.DiposeConnection()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.GetLogStatementLoggingEvent">
            <summary>Establecer el shim de AdoNetAppender.GetLogStatement(LoggingEvent logEvent)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.InitializeDatabaseConnection">
            <summary>Establecer el shim de AdoNetAppender.InitializeDatabaseConnection()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.OnClose">
            <summary>Establecer el shim de AdoNetAppender.OnClose()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.ReconnectOnErrorGet">
            <summary>Establecer el shim de AdoNetAppender.get_ReconnectOnError()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.ReconnectOnErrorSetBoolean">
            <summary>Establecer el shim de AdoNetAppender.set_ReconnectOnError(Boolean value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.ResolveConnectionStringStringOut">
            <summary>Establecer el shim de AdoNetAppender.ResolveConnectionString(String&amp; connectionStringContext)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.ResolveConnectionType">
            <summary>Establecer el shim de AdoNetAppender.ResolveConnectionType()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.SecurityContextGet">
            <summary>Establecer el shim de AdoNetAppender.get_SecurityContext()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.SecurityContextSetSecurityContext">
            <summary>Establecer el shim de AdoNetAppender.set_SecurityContext(SecurityContext value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.SendBufferIDbTransactionLoggingEventArray">
            <summary>Establecer el shim de AdoNetAppender.SendBuffer(IDbTransaction dbTran, LoggingEvent[] events)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.SendBufferLoggingEventArray">
            <summary>Establecer el shim de AdoNetAppender.SendBuffer(LoggingEvent[] events)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.StaticConstructor">
            <summary>Establecer el shim de AdoNetAppender.AdoNetAppender()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.UseTransactionsGet">
            <summary>Establecer el shim de AdoNetAppender.get_UseTransactions()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppender.UseTransactionsSetBoolean">
            <summary>Establecer el shim de AdoNetAppender.set_UseTransactions(Boolean value)</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimAdoNetAppenderParameter">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Appender.AdoNetAppenderParameter</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAdoNetAppenderParameter.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAdoNetAppenderParameter.#ctor(log4net.Appender.AdoNetAppenderParameter)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimAdoNetAppenderParameter.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppenderParameter.AllInstances.DbTypeGet">
            <summary>Establecer el shim de AdoNetAppenderParameter.get_DbType()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppenderParameter.AllInstances.DbTypeSetDbType">
            <summary>Establecer el shim de AdoNetAppenderParameter.set_DbType(DbType value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppenderParameter.AllInstances.FormatValueIDbCommandLoggingEvent">
            <summary>Establecer el shim de AdoNetAppenderParameter.FormatValue(IDbCommand command, LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppenderParameter.AllInstances.LayoutGet">
            <summary>Establecer el shim de AdoNetAppenderParameter.get_Layout()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppenderParameter.AllInstances.LayoutSetIRawLayout">
            <summary>Establecer el shim de AdoNetAppenderParameter.set_Layout(IRawLayout value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppenderParameter.AllInstances.ParameterNameGet">
            <summary>Establecer el shim de AdoNetAppenderParameter.get_ParameterName()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppenderParameter.AllInstances.ParameterNameSetString">
            <summary>Establecer el shim de AdoNetAppenderParameter.set_ParameterName(String value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppenderParameter.AllInstances.PrecisionGet">
            <summary>Establecer el shim de AdoNetAppenderParameter.get_Precision()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppenderParameter.AllInstances.PrecisionSetByte">
            <summary>Establecer el shim de AdoNetAppenderParameter.set_Precision(Byte value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppenderParameter.AllInstances.PrepareIDbCommand">
            <summary>Establecer el shim de AdoNetAppenderParameter.Prepare(IDbCommand command)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppenderParameter.AllInstances.ScaleGet">
            <summary>Establecer el shim de AdoNetAppenderParameter.get_Scale()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppenderParameter.AllInstances.ScaleSetByte">
            <summary>Establecer el shim de AdoNetAppenderParameter.set_Scale(Byte value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppenderParameter.AllInstances.SizeGet">
            <summary>Establecer el shim de AdoNetAppenderParameter.get_Size()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppenderParameter.AllInstances.SizeSetInt32">
            <summary>Establecer el shim de AdoNetAppenderParameter.set_Size(Int32 value)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAdoNetAppenderParameter.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAdoNetAppenderParameter.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppenderParameter.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppenderParameter.Constructor">
            <summary>Establecer el shim de AdoNetAppenderParameter.AdoNetAppenderParameter()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppenderParameter.DbTypeGet">
            <summary>Establecer el shim de AdoNetAppenderParameter.get_DbType()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppenderParameter.DbTypeSetDbType">
            <summary>Establecer el shim de AdoNetAppenderParameter.set_DbType(DbType value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppenderParameter.FormatValueIDbCommandLoggingEvent">
            <summary>Establecer el shim de AdoNetAppenderParameter.FormatValue(IDbCommand command, LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppenderParameter.LayoutGet">
            <summary>Establecer el shim de AdoNetAppenderParameter.get_Layout()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppenderParameter.LayoutSetIRawLayout">
            <summary>Establecer el shim de AdoNetAppenderParameter.set_Layout(IRawLayout value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppenderParameter.ParameterNameGet">
            <summary>Establecer el shim de AdoNetAppenderParameter.get_ParameterName()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppenderParameter.ParameterNameSetString">
            <summary>Establecer el shim de AdoNetAppenderParameter.set_ParameterName(String value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppenderParameter.PrecisionGet">
            <summary>Establecer el shim de AdoNetAppenderParameter.get_Precision()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppenderParameter.PrecisionSetByte">
            <summary>Establecer el shim de AdoNetAppenderParameter.set_Precision(Byte value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppenderParameter.PrepareIDbCommand">
            <summary>Establecer el shim de AdoNetAppenderParameter.Prepare(IDbCommand command)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppenderParameter.ScaleGet">
            <summary>Establecer el shim de AdoNetAppenderParameter.get_Scale()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppenderParameter.ScaleSetByte">
            <summary>Establecer el shim de AdoNetAppenderParameter.set_Scale(Byte value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppenderParameter.SizeGet">
            <summary>Establecer el shim de AdoNetAppenderParameter.get_Size()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAdoNetAppenderParameter.SizeSetInt32">
            <summary>Establecer el shim de AdoNetAppenderParameter.set_Size(Int32 value)</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Appender.AnsiColorTerminalAppender</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.#ctor(log4net.Appender.AnsiColorTerminalAppender)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.ActivateOptions">
            <summary>Establecer el shim de AnsiColorTerminalAppender.ActivateOptions()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.AddMappingAnsiColorTerminalAppenderLevelColors">
            <summary>Establecer el shim de AnsiColorTerminalAppender.AddMapping(LevelColors mapping)</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.AllInstances.ActivateOptions">
            <summary>Establecer el shim de AnsiColorTerminalAppender.ActivateOptions()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.AllInstances.AddMappingAnsiColorTerminalAppenderLevelColors">
            <summary>Establecer el shim de AnsiColorTerminalAppender.AddMapping(LevelColors mapping)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.AllInstances.AppendLoggingEvent">
            <summary>Establecer el shim de AnsiColorTerminalAppender.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.AllInstances.RequiresLayoutGet">
            <summary>Establecer el shim de AnsiColorTerminalAppender.get_RequiresLayout()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.AllInstances.TargetGet">
            <summary>Establecer el shim de AnsiColorTerminalAppender.get_Target()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.AllInstances.TargetSetString">
            <summary>Establecer el shim de AnsiColorTerminalAppender.set_Target(String value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.AppendLoggingEvent">
            <summary>Establecer el shim de AnsiColorTerminalAppender.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.Bind(log4net.Appender.IAppender)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.Bind(log4net.Appender.IBulkAppender)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.Bind(log4net.Appender.IFlushable)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.Bind(log4net.Core.IOptionHandler)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.Constructor">
            <summary>Establecer el shim de AnsiColorTerminalAppender.AnsiColorTerminalAppender()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.RequiresLayoutGet">
            <summary>Establecer el shim de AnsiColorTerminalAppender.get_RequiresLayout()</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.ShimLevelColors">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Appender.AnsiColorTerminalAppender+LevelColors</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.ShimLevelColors.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.ShimLevelColors.#ctor(log4net.Appender.AnsiColorTerminalAppender.LevelColors)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.ShimLevelColors.ActivateOptions">
            <summary>Establecer el shim de LevelColors.ActivateOptions()</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.ShimLevelColors.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.ShimLevelColors.AllInstances.ActivateOptions">
            <summary>Establecer el shim de LevelColors.ActivateOptions()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.ShimLevelColors.AllInstances.AttributesGet">
            <summary>Establecer el shim de LevelColors.get_Attributes()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.ShimLevelColors.AllInstances.AttributesSetAnsiColorTerminalAppenderAnsiAttributes">
            <summary>Establecer el shim de LevelColors.set_Attributes(AnsiAttributes value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.ShimLevelColors.AllInstances.BackColorGet">
            <summary>Establecer el shim de LevelColors.get_BackColor()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.ShimLevelColors.AllInstances.BackColorSetAnsiColorTerminalAppenderAnsiColor">
            <summary>Establecer el shim de LevelColors.set_BackColor(AnsiColor value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.ShimLevelColors.AllInstances.CombinedColorGet">
            <summary>Establecer el shim de LevelColors.get_CombinedColor()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.ShimLevelColors.AllInstances.ForeColorGet">
            <summary>Establecer el shim de LevelColors.get_ForeColor()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.ShimLevelColors.AllInstances.ForeColorSetAnsiColorTerminalAppenderAnsiColor">
            <summary>Establecer el shim de LevelColors.set_ForeColor(AnsiColor value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.ShimLevelColors.AttributesGet">
            <summary>Establecer el shim de LevelColors.get_Attributes()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.ShimLevelColors.AttributesSetAnsiColorTerminalAppenderAnsiAttributes">
            <summary>Establecer el shim de LevelColors.set_Attributes(AnsiAttributes value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.ShimLevelColors.BackColorGet">
            <summary>Establecer el shim de LevelColors.get_BackColor()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.ShimLevelColors.BackColorSetAnsiColorTerminalAppenderAnsiColor">
            <summary>Establecer el shim de LevelColors.set_BackColor(AnsiColor value)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.ShimLevelColors.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.ShimLevelColors.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.ShimLevelColors.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.ShimLevelColors.Bind(log4net.Core.IOptionHandler)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.ShimLevelColors.CombinedColorGet">
            <summary>Establecer el shim de LevelColors.get_CombinedColor()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.ShimLevelColors.Constructor">
            <summary>Establecer el shim de LevelColors.LevelColors()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.ShimLevelColors.ForeColorGet">
            <summary>Establecer el shim de LevelColors.get_ForeColor()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.ShimLevelColors.ForeColorSetAnsiColorTerminalAppenderAnsiColor">
            <summary>Establecer el shim de LevelColors.set_ForeColor(AnsiColor value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.TargetGet">
            <summary>Establecer el shim de AnsiColorTerminalAppender.get_Target()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAnsiColorTerminalAppender.TargetSetString">
            <summary>Establecer el shim de AnsiColorTerminalAppender.set_Target(String value)</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimAppenderCollection">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Appender.AppenderCollection</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAppenderCollection.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAppenderCollection.#ctor(log4net.Appender.AppenderCollection)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.AddIAppender">
            <summary>Establecer el shim de AppenderCollection.Add(IAppender item)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.AddRangeAppenderCollection">
            <summary>Establecer el shim de AppenderCollection.AddRange(AppenderCollection x)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.AddRangeIAppenderArray">
            <summary>Establecer el shim de AppenderCollection.AddRange(IAppender[] x)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.AddRangeICollection">
            <summary>Establecer el shim de AppenderCollection.AddRange(ICollection col)</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimAppenderCollection.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.AllInstances.AddIAppender">
            <summary>Establecer el shim de AppenderCollection.Add(IAppender item)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.AllInstances.AddRangeAppenderCollection">
            <summary>Establecer el shim de AppenderCollection.AddRange(AppenderCollection x)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.AllInstances.AddRangeIAppenderArray">
            <summary>Establecer el shim de AppenderCollection.AddRange(IAppender[] x)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.AllInstances.AddRangeICollection">
            <summary>Establecer el shim de AppenderCollection.AddRange(ICollection col)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.AllInstances.CapacityGet">
            <summary>Establecer el shim de AppenderCollection.get_Capacity()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.AllInstances.CapacitySetInt32">
            <summary>Establecer el shim de AppenderCollection.set_Capacity(Int32 value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.AllInstances.Clear">
            <summary>Establecer el shim de AppenderCollection.Clear()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.AllInstances.Clone">
            <summary>Establecer el shim de AppenderCollection.Clone()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.AllInstances.ContainsIAppender">
            <summary>Establecer el shim de AppenderCollection.Contains(IAppender item)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.AllInstances.CopyToIAppenderArray">
            <summary>Establecer el shim de AppenderCollection.CopyTo(IAppender[] array)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.AllInstances.CopyToIAppenderArrayInt32">
            <summary>Establecer el shim de AppenderCollection.CopyTo(IAppender[] array, Int32 start)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.AllInstances.CountGet">
            <summary>Establecer el shim de AppenderCollection.get_Count()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.AllInstances.EnsureCapacityInt32">
            <summary>Establecer el shim de AppenderCollection.EnsureCapacity(Int32 min)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.AllInstances.GetEnumerator">
            <summary>Establecer el shim de AppenderCollection.GetEnumerator()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.AllInstances.IndexOfIAppender">
            <summary>Establecer el shim de AppenderCollection.IndexOf(IAppender item)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.AllInstances.InsertInt32IAppender">
            <summary>Establecer el shim de AppenderCollection.Insert(Int32 index, IAppender item)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.AllInstances.IsFixedSizeGet">
            <summary>Establecer el shim de AppenderCollection.get_IsFixedSize()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.AllInstances.IsReadOnlyGet">
            <summary>Establecer el shim de AppenderCollection.get_IsReadOnly()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.AllInstances.IsSynchronizedGet">
            <summary>Establecer el shim de AppenderCollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.AllInstances.ItemGetInt32">
            <summary>Establecer el shim de AppenderCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.AllInstances.ItemSetInt32IAppender">
            <summary>Establecer el shim de AppenderCollection.set_Item(Int32 index, IAppender value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.AllInstances.ItemSystemCollectionsIListgetInt32">
            <summary>Establecer el shim de AppenderCollection.System.Collections.IList.get_Item(Int32 i)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.AllInstances.ItemSystemCollectionsIListsetInt32Object">
            <summary>Establecer el shim de AppenderCollection.System.Collections.IList.set_Item(Int32 i, Object value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.AllInstances.RemoveAtInt32">
            <summary>Establecer el shim de AppenderCollection.RemoveAt(Int32 index)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.AllInstances.RemoveIAppender">
            <summary>Establecer el shim de AppenderCollection.Remove(IAppender item)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.AllInstances.SyncRootGet">
            <summary>Establecer el shim de AppenderCollection.get_SyncRoot()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.AllInstances.SystemCollectionsICollectionCopyToArrayInt32">
            <summary>Establecer el shim de AppenderCollection.System.Collections.ICollection.CopyTo(Array array, Int32 start)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Establecer el shim de AppenderCollection.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.AllInstances.SystemCollectionsIListAddObject">
            <summary>Establecer el shim de AppenderCollection.System.Collections.IList.Add(Object x)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.AllInstances.SystemCollectionsIListContainsObject">
            <summary>Establecer el shim de AppenderCollection.System.Collections.IList.Contains(Object x)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.AllInstances.SystemCollectionsIListIndexOfObject">
            <summary>Establecer el shim de AppenderCollection.System.Collections.IList.IndexOf(Object x)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.AllInstances.SystemCollectionsIListInsertInt32Object">
            <summary>Establecer el shim de AppenderCollection.System.Collections.IList.Insert(Int32 pos, Object x)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.AllInstances.SystemCollectionsIListRemoveAtInt32">
            <summary>Establecer el shim de AppenderCollection.System.Collections.IList.RemoveAt(Int32 pos)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.AllInstances.SystemCollectionsIListRemoveObject">
            <summary>Establecer el shim de AppenderCollection.System.Collections.IList.Remove(Object x)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.AllInstances.ToArray">
            <summary>Establecer el shim de AppenderCollection.ToArray()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.AllInstances.TrimToSize">
            <summary>Establecer el shim de AppenderCollection.TrimToSize()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.AllInstances.ValidateIndexInt32">
            <summary>Establecer el shim de AppenderCollection.ValidateIndex(Int32 i)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.AllInstances.ValidateIndexInt32Boolean">
            <summary>Establecer el shim de AppenderCollection.ValidateIndex(Int32 i, Boolean allowEqualEnd)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAppenderCollection.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAppenderCollection.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAppenderCollection.Bind(System.ICloneable)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAppenderCollection.Bind(System.Collections.ICollection)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAppenderCollection.Bind(System.Collections.IEnumerable)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAppenderCollection.Bind(System.Collections.IList)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.CapacityGet">
            <summary>Establecer el shim de AppenderCollection.get_Capacity()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.CapacitySetInt32">
            <summary>Establecer el shim de AppenderCollection.set_Capacity(Int32 value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.Clear">
            <summary>Establecer el shim de AppenderCollection.Clear()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.Clone">
            <summary>Establecer el shim de AppenderCollection.Clone()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.Constructor">
            <summary>Establecer el shim de AppenderCollection.AppenderCollection()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.ConstructorAppenderCollection">
            <summary>Establecer el shim de AppenderCollection.AppenderCollection(AppenderCollection c)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.ConstructorIAppenderArray">
            <summary>Establecer el shim de AppenderCollection.AppenderCollection(IAppender[] a)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.ConstructorICollection">
            <summary>Establecer el shim de AppenderCollection.AppenderCollection(ICollection col)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.ConstructorInt32">
            <summary>Establecer el shim de AppenderCollection.AppenderCollection(Int32 capacity)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.ContainsIAppender">
            <summary>Establecer el shim de AppenderCollection.Contains(IAppender item)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.CopyToIAppenderArray">
            <summary>Establecer el shim de AppenderCollection.CopyTo(IAppender[] array)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.CopyToIAppenderArrayInt32">
            <summary>Establecer el shim de AppenderCollection.CopyTo(IAppender[] array, Int32 start)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.CountGet">
            <summary>Establecer el shim de AppenderCollection.get_Count()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.EnsureCapacityInt32">
            <summary>Establecer el shim de AppenderCollection.EnsureCapacity(Int32 min)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.GetEnumerator">
            <summary>Establecer el shim de AppenderCollection.GetEnumerator()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.IndexOfIAppender">
            <summary>Establecer el shim de AppenderCollection.IndexOf(IAppender item)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.InsertInt32IAppender">
            <summary>Establecer el shim de AppenderCollection.Insert(Int32 index, IAppender item)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.IsFixedSizeGet">
            <summary>Establecer el shim de AppenderCollection.get_IsFixedSize()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.IsReadOnlyGet">
            <summary>Establecer el shim de AppenderCollection.get_IsReadOnly()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.IsSynchronizedGet">
            <summary>Establecer el shim de AppenderCollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.ItemGetInt32">
            <summary>Establecer el shim de AppenderCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.ItemSetInt32IAppender">
            <summary>Establecer el shim de AppenderCollection.set_Item(Int32 index, IAppender value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.ItemSystemCollectionsIListgetInt32">
            <summary>Establecer el shim de AppenderCollection.System.Collections.IList.get_Item(Int32 i)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.ItemSystemCollectionsIListsetInt32Object">
            <summary>Establecer el shim de AppenderCollection.System.Collections.IList.set_Item(Int32 i, Object value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.ReadOnlyAppenderCollection">
            <summary>Establecer el shim de AppenderCollection.ReadOnly(AppenderCollection list)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.RemoveAtInt32">
            <summary>Establecer el shim de AppenderCollection.RemoveAt(Int32 index)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.RemoveIAppender">
            <summary>Establecer el shim de AppenderCollection.Remove(IAppender item)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.StaticConstructor">
            <summary>Establecer el shim de AppenderCollection.AppenderCollection()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.SyncRootGet">
            <summary>Establecer el shim de AppenderCollection.get_SyncRoot()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.SystemCollectionsICollectionCopyToArrayInt32">
            <summary>Establecer el shim de AppenderCollection.System.Collections.ICollection.CopyTo(Array array, Int32 start)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Establecer el shim de AppenderCollection.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.SystemCollectionsIListAddObject">
            <summary>Establecer el shim de AppenderCollection.System.Collections.IList.Add(Object x)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.SystemCollectionsIListContainsObject">
            <summary>Establecer el shim de AppenderCollection.System.Collections.IList.Contains(Object x)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.SystemCollectionsIListIndexOfObject">
            <summary>Establecer el shim de AppenderCollection.System.Collections.IList.IndexOf(Object x)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.SystemCollectionsIListInsertInt32Object">
            <summary>Establecer el shim de AppenderCollection.System.Collections.IList.Insert(Int32 pos, Object x)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.SystemCollectionsIListRemoveAtInt32">
            <summary>Establecer el shim de AppenderCollection.System.Collections.IList.RemoveAt(Int32 pos)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.SystemCollectionsIListRemoveObject">
            <summary>Establecer el shim de AppenderCollection.System.Collections.IList.Remove(Object x)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.ToArray">
            <summary>Establecer el shim de AppenderCollection.ToArray()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.TrimToSize">
            <summary>Establecer el shim de AppenderCollection.TrimToSize()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.ValidateIndexInt32">
            <summary>Establecer el shim de AppenderCollection.ValidateIndex(Int32 i)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderCollection.ValidateIndexInt32Boolean">
            <summary>Establecer el shim de AppenderCollection.ValidateIndex(Int32 i, Boolean allowEqualEnd)</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimAppenderSkeleton">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Appender.AppenderSkeleton</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAppenderSkeleton.#ctor(log4net.Appender.AppenderSkeleton)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.ActivateOptions">
            <summary>Establecer el shim de AppenderSkeleton.ActivateOptions()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.AddFilterIFilter">
            <summary>Establecer el shim de AppenderSkeleton.AddFilter(IFilter filter)</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimAppenderSkeleton.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.AllInstances.ActivateOptions">
            <summary>Establecer el shim de AppenderSkeleton.ActivateOptions()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.AllInstances.AddFilterIFilter">
            <summary>Establecer el shim de AppenderSkeleton.AddFilter(IFilter filter)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.AllInstances.AppendLoggingEventArray">
            <summary>Establecer el shim de AppenderSkeleton.Append(LoggingEvent[] loggingEvents)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.AllInstances.ClearFilters">
            <summary>Establecer el shim de AppenderSkeleton.ClearFilters()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.AllInstances.Close">
            <summary>Establecer el shim de AppenderSkeleton.Close()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.AllInstances.DoAppendLoggingEvent">
            <summary>Establecer el shim de AppenderSkeleton.DoAppend(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.AllInstances.DoAppendLoggingEventArray">
            <summary>Establecer el shim de AppenderSkeleton.DoAppend(LoggingEvent[] loggingEvents)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.AllInstances.ErrorHandlerGet">
            <summary>Establecer el shim de AppenderSkeleton.get_ErrorHandler()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.AllInstances.ErrorHandlerSetIErrorHandler">
            <summary>Establecer el shim de AppenderSkeleton.set_ErrorHandler(IErrorHandler value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.AllInstances.FilterEventLoggingEvent">
            <summary>Establecer el shim de AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.AllInstances.FilterHeadGet">
            <summary>Establecer el shim de AppenderSkeleton.get_FilterHead()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.AllInstances.FlushInt32">
            <summary>Establecer el shim de AppenderSkeleton.Flush(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.AllInstances.IsAsSevereAsThresholdLevel">
            <summary>Establecer el shim de AppenderSkeleton.IsAsSevereAsThreshold(Level level)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.AllInstances.LayoutGet">
            <summary>Establecer el shim de AppenderSkeleton.get_Layout()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.AllInstances.LayoutSetILayout">
            <summary>Establecer el shim de AppenderSkeleton.set_Layout(ILayout value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.AllInstances.NameGet">
            <summary>Establecer el shim de AppenderSkeleton.get_Name()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.AllInstances.NameSetString">
            <summary>Establecer el shim de AppenderSkeleton.set_Name(String value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.AllInstances.OnClose">
            <summary>Establecer el shim de AppenderSkeleton.OnClose()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.AllInstances.PreAppendCheck">
            <summary>Establecer el shim de AppenderSkeleton.PreAppendCheck()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.AllInstances.RenderLoggingEventLoggingEvent">
            <summary>Establecer el shim de AppenderSkeleton.RenderLoggingEvent(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.AllInstances.RenderLoggingEventTextWriterLoggingEvent">
            <summary>Establecer el shim de AppenderSkeleton.RenderLoggingEvent(TextWriter writer, LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.AllInstances.RequiresLayoutGet">
            <summary>Establecer el shim de AppenderSkeleton.get_RequiresLayout()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.AllInstances.ThresholdGet">
            <summary>Establecer el shim de AppenderSkeleton.get_Threshold()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.AllInstances.ThresholdSetLevel">
            <summary>Establecer el shim de AppenderSkeleton.set_Threshold(Level value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.AppendLoggingEventArray">
            <summary>Establecer el shim de AppenderSkeleton.Append(LoggingEvent[] loggingEvents)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAppenderSkeleton.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAppenderSkeleton.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAppenderSkeleton.Bind(log4net.Appender.IAppender)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAppenderSkeleton.Bind(log4net.Appender.IBulkAppender)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAppenderSkeleton.Bind(log4net.Appender.IFlushable)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAppenderSkeleton.Bind(log4net.Core.IOptionHandler)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.ClearFilters">
            <summary>Establecer el shim de AppenderSkeleton.ClearFilters()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.Close">
            <summary>Establecer el shim de AppenderSkeleton.Close()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.Constructor">
            <summary>Establecer el shim de AppenderSkeleton.AppenderSkeleton()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.DoAppendLoggingEvent">
            <summary>Establecer el shim de AppenderSkeleton.DoAppend(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.DoAppendLoggingEventArray">
            <summary>Establecer el shim de AppenderSkeleton.DoAppend(LoggingEvent[] loggingEvents)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.ErrorHandlerGet">
            <summary>Establecer el shim de AppenderSkeleton.get_ErrorHandler()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.ErrorHandlerSetIErrorHandler">
            <summary>Establecer el shim de AppenderSkeleton.set_ErrorHandler(IErrorHandler value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.FilterEventLoggingEvent">
            <summary>Establecer el shim de AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.FilterHeadGet">
            <summary>Establecer el shim de AppenderSkeleton.get_FilterHead()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.FlushInt32">
            <summary>Establecer el shim de AppenderSkeleton.Flush(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.IsAsSevereAsThresholdLevel">
            <summary>Establecer el shim de AppenderSkeleton.IsAsSevereAsThreshold(Level level)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.LayoutGet">
            <summary>Establecer el shim de AppenderSkeleton.get_Layout()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.LayoutSetILayout">
            <summary>Establecer el shim de AppenderSkeleton.set_Layout(ILayout value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.NameGet">
            <summary>Establecer el shim de AppenderSkeleton.get_Name()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.NameSetString">
            <summary>Establecer el shim de AppenderSkeleton.set_Name(String value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.OnClose">
            <summary>Establecer el shim de AppenderSkeleton.OnClose()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.PreAppendCheck">
            <summary>Establecer el shim de AppenderSkeleton.PreAppendCheck()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.RenderLoggingEventLoggingEvent">
            <summary>Establecer el shim de AppenderSkeleton.RenderLoggingEvent(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.RenderLoggingEventTextWriterLoggingEvent">
            <summary>Establecer el shim de AppenderSkeleton.RenderLoggingEvent(TextWriter writer, LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.RequiresLayoutGet">
            <summary>Establecer el shim de AppenderSkeleton.get_RequiresLayout()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.StaticConstructor">
            <summary>Establecer el shim de AppenderSkeleton.AppenderSkeleton()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.ThresholdGet">
            <summary>Establecer el shim de AppenderSkeleton.get_Threshold()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAppenderSkeleton.ThresholdSetLevel">
            <summary>Establecer el shim de AppenderSkeleton.set_Threshold(Level value)</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimAspNetTraceAppender">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Appender.AspNetTraceAppender</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAspNetTraceAppender.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAspNetTraceAppender.#ctor(log4net.Appender.AspNetTraceAppender)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimAspNetTraceAppender.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAspNetTraceAppender.AllInstances.AppendLoggingEvent">
            <summary>Establecer el shim de AspNetTraceAppender.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAspNetTraceAppender.AllInstances.CategoryGet">
            <summary>Establecer el shim de AspNetTraceAppender.get_Category()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAspNetTraceAppender.AllInstances.CategorySetPatternLayout">
            <summary>Establecer el shim de AspNetTraceAppender.set_Category(PatternLayout value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAspNetTraceAppender.AllInstances.RequiresLayoutGet">
            <summary>Establecer el shim de AspNetTraceAppender.get_RequiresLayout()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAspNetTraceAppender.AppendLoggingEvent">
            <summary>Establecer el shim de AspNetTraceAppender.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAspNetTraceAppender.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAspNetTraceAppender.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAspNetTraceAppender.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAspNetTraceAppender.Bind(log4net.Appender.IAppender)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAspNetTraceAppender.Bind(log4net.Appender.IBulkAppender)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAspNetTraceAppender.Bind(log4net.Appender.IFlushable)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimAspNetTraceAppender.Bind(log4net.Core.IOptionHandler)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAspNetTraceAppender.CategoryGet">
            <summary>Establecer el shim de AspNetTraceAppender.get_Category()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAspNetTraceAppender.CategorySetPatternLayout">
            <summary>Establecer el shim de AspNetTraceAppender.set_Category(PatternLayout value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAspNetTraceAppender.Constructor">
            <summary>Establecer el shim de AspNetTraceAppender.AspNetTraceAppender()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimAspNetTraceAppender.RequiresLayoutGet">
            <summary>Establecer el shim de AspNetTraceAppender.get_RequiresLayout()</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Appender.BufferingAppenderSkeleton</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.#ctor(log4net.Appender.BufferingAppenderSkeleton)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.ActivateOptions">
            <summary>Establecer el shim de BufferingAppenderSkeleton.ActivateOptions()</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.AllInstances.ActivateOptions">
            <summary>Establecer el shim de BufferingAppenderSkeleton.ActivateOptions()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.AllInstances.AppendLoggingEvent">
            <summary>Establecer el shim de BufferingAppenderSkeleton.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.AllInstances.BufferSizeGet">
            <summary>Establecer el shim de BufferingAppenderSkeleton.get_BufferSize()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.AllInstances.BufferSizeSetInt32">
            <summary>Establecer el shim de BufferingAppenderSkeleton.set_BufferSize(Int32 value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.AllInstances.EvaluatorGet">
            <summary>Establecer el shim de BufferingAppenderSkeleton.get_Evaluator()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.AllInstances.EvaluatorSetITriggeringEventEvaluator">
            <summary>Establecer el shim de BufferingAppenderSkeleton.set_Evaluator(ITriggeringEventEvaluator value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.AllInstances.FixGet">
            <summary>Establecer el shim de BufferingAppenderSkeleton.get_Fix()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.AllInstances.FixSetFixFlags">
            <summary>Establecer el shim de BufferingAppenderSkeleton.set_Fix(FixFlags value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.AllInstances.Flush">
            <summary>Establecer el shim de BufferingAppenderSkeleton.Flush()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.AllInstances.FlushBoolean">
            <summary>Establecer el shim de BufferingAppenderSkeleton.Flush(Boolean flushLossyBuffer)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.AllInstances.FlushInt32">
            <summary>Establecer el shim de BufferingAppenderSkeleton.Flush(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.AllInstances.LossyEvaluatorGet">
            <summary>Establecer el shim de BufferingAppenderSkeleton.get_LossyEvaluator()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.AllInstances.LossyEvaluatorSetITriggeringEventEvaluator">
            <summary>Establecer el shim de BufferingAppenderSkeleton.set_LossyEvaluator(ITriggeringEventEvaluator value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.AllInstances.LossyGet">
            <summary>Establecer el shim de BufferingAppenderSkeleton.get_Lossy()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.AllInstances.LossySetBoolean">
            <summary>Establecer el shim de BufferingAppenderSkeleton.set_Lossy(Boolean value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.AllInstances.OnClose">
            <summary>Establecer el shim de BufferingAppenderSkeleton.OnClose()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.AllInstances.OnlyFixPartialEventDataGet">
            <summary>Establecer el shim de BufferingAppenderSkeleton.get_OnlyFixPartialEventData()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.AllInstances.OnlyFixPartialEventDataSetBoolean">
            <summary>Establecer el shim de BufferingAppenderSkeleton.set_OnlyFixPartialEventData(Boolean value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.AllInstances.SendFromBufferLoggingEventCyclicBuffer">
            <summary>Establecer el shim de BufferingAppenderSkeleton.SendFromBuffer(LoggingEvent firstLoggingEvent, CyclicBuffer buffer)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.AppendLoggingEvent">
            <summary>Establecer el shim de BufferingAppenderSkeleton.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.Bind(log4net.Appender.IAppender)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.Bind(log4net.Appender.IBulkAppender)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.Bind(log4net.Appender.IFlushable)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.Bind(log4net.Core.IOptionHandler)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.BufferSizeGet">
            <summary>Establecer el shim de BufferingAppenderSkeleton.get_BufferSize()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.BufferSizeSetInt32">
            <summary>Establecer el shim de BufferingAppenderSkeleton.set_BufferSize(Int32 value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.Constructor">
            <summary>Establecer el shim de BufferingAppenderSkeleton.BufferingAppenderSkeleton()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.ConstructorBoolean">
            <summary>Establecer el shim de BufferingAppenderSkeleton.BufferingAppenderSkeleton(Boolean eventMustBeFixed)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.EvaluatorGet">
            <summary>Establecer el shim de BufferingAppenderSkeleton.get_Evaluator()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.EvaluatorSetITriggeringEventEvaluator">
            <summary>Establecer el shim de BufferingAppenderSkeleton.set_Evaluator(ITriggeringEventEvaluator value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.FixGet">
            <summary>Establecer el shim de BufferingAppenderSkeleton.get_Fix()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.FixSetFixFlags">
            <summary>Establecer el shim de BufferingAppenderSkeleton.set_Fix(FixFlags value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.Flush">
            <summary>Establecer el shim de BufferingAppenderSkeleton.Flush()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.FlushBoolean">
            <summary>Establecer el shim de BufferingAppenderSkeleton.Flush(Boolean flushLossyBuffer)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.FlushInt32">
            <summary>Establecer el shim de BufferingAppenderSkeleton.Flush(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.LossyEvaluatorGet">
            <summary>Establecer el shim de BufferingAppenderSkeleton.get_LossyEvaluator()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.LossyEvaluatorSetITriggeringEventEvaluator">
            <summary>Establecer el shim de BufferingAppenderSkeleton.set_LossyEvaluator(ITriggeringEventEvaluator value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.LossyGet">
            <summary>Establecer el shim de BufferingAppenderSkeleton.get_Lossy()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.LossySetBoolean">
            <summary>Establecer el shim de BufferingAppenderSkeleton.set_Lossy(Boolean value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.OnClose">
            <summary>Establecer el shim de BufferingAppenderSkeleton.OnClose()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.OnlyFixPartialEventDataGet">
            <summary>Establecer el shim de BufferingAppenderSkeleton.get_OnlyFixPartialEventData()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.OnlyFixPartialEventDataSetBoolean">
            <summary>Establecer el shim de BufferingAppenderSkeleton.set_OnlyFixPartialEventData(Boolean value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingAppenderSkeleton.SendFromBufferLoggingEventCyclicBuffer">
            <summary>Establecer el shim de BufferingAppenderSkeleton.SendFromBuffer(LoggingEvent firstLoggingEvent, CyclicBuffer buffer)</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimBufferingForwardingAppender">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Appender.BufferingForwardingAppender</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimBufferingForwardingAppender.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimBufferingForwardingAppender.#ctor(log4net.Appender.BufferingForwardingAppender)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingForwardingAppender.AddAppenderIAppender">
            <summary>Establecer el shim de BufferingForwardingAppender.AddAppender(IAppender newAppender)</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimBufferingForwardingAppender.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingForwardingAppender.AllInstances.AddAppenderIAppender">
            <summary>Establecer el shim de BufferingForwardingAppender.AddAppender(IAppender newAppender)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingForwardingAppender.AllInstances.AppendersGet">
            <summary>Establecer el shim de BufferingForwardingAppender.get_Appenders()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingForwardingAppender.AllInstances.GetAppenderString">
            <summary>Establecer el shim de BufferingForwardingAppender.GetAppender(String name)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingForwardingAppender.AllInstances.OnClose">
            <summary>Establecer el shim de BufferingForwardingAppender.OnClose()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingForwardingAppender.AllInstances.RemoveAllAppenders">
            <summary>Establecer el shim de BufferingForwardingAppender.RemoveAllAppenders()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingForwardingAppender.AllInstances.RemoveAppenderIAppender">
            <summary>Establecer el shim de BufferingForwardingAppender.RemoveAppender(IAppender appender)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingForwardingAppender.AllInstances.RemoveAppenderString">
            <summary>Establecer el shim de BufferingForwardingAppender.RemoveAppender(String name)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingForwardingAppender.AllInstances.SendBufferLoggingEventArray">
            <summary>Establecer el shim de BufferingForwardingAppender.SendBuffer(LoggingEvent[] events)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingForwardingAppender.AppendersGet">
            <summary>Establecer el shim de BufferingForwardingAppender.get_Appenders()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimBufferingForwardingAppender.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimBufferingForwardingAppender.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingForwardingAppender.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimBufferingForwardingAppender.Bind(log4net.Appender.IAppender)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimBufferingForwardingAppender.Bind(log4net.Appender.IBulkAppender)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimBufferingForwardingAppender.Bind(log4net.Appender.IFlushable)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimBufferingForwardingAppender.Bind(log4net.Core.IAppenderAttachable)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimBufferingForwardingAppender.Bind(log4net.Core.IOptionHandler)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingForwardingAppender.Constructor">
            <summary>Establecer el shim de BufferingForwardingAppender.BufferingForwardingAppender()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingForwardingAppender.GetAppenderString">
            <summary>Establecer el shim de BufferingForwardingAppender.GetAppender(String name)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingForwardingAppender.OnClose">
            <summary>Establecer el shim de BufferingForwardingAppender.OnClose()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingForwardingAppender.RemoveAllAppenders">
            <summary>Establecer el shim de BufferingForwardingAppender.RemoveAllAppenders()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingForwardingAppender.RemoveAppenderIAppender">
            <summary>Establecer el shim de BufferingForwardingAppender.RemoveAppender(IAppender appender)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingForwardingAppender.RemoveAppenderString">
            <summary>Establecer el shim de BufferingForwardingAppender.RemoveAppender(String name)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimBufferingForwardingAppender.SendBufferLoggingEventArray">
            <summary>Establecer el shim de BufferingForwardingAppender.SendBuffer(LoggingEvent[] events)</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimColoredConsoleAppender">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Appender.ColoredConsoleAppender</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimColoredConsoleAppender.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimColoredConsoleAppender.#ctor(log4net.Appender.ColoredConsoleAppender)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimColoredConsoleAppender.ActivateOptions">
            <summary>Establecer el shim de ColoredConsoleAppender.ActivateOptions()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimColoredConsoleAppender.AddMappingColoredConsoleAppenderLevelColors">
            <summary>Establecer el shim de ColoredConsoleAppender.AddMapping(LevelColors mapping)</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimColoredConsoleAppender.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimColoredConsoleAppender.AllInstances.ActivateOptions">
            <summary>Establecer el shim de ColoredConsoleAppender.ActivateOptions()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimColoredConsoleAppender.AllInstances.AddMappingColoredConsoleAppenderLevelColors">
            <summary>Establecer el shim de ColoredConsoleAppender.AddMapping(LevelColors mapping)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimColoredConsoleAppender.AllInstances.AppendLoggingEvent">
            <summary>Establecer el shim de ColoredConsoleAppender.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimColoredConsoleAppender.AllInstances.RequiresLayoutGet">
            <summary>Establecer el shim de ColoredConsoleAppender.get_RequiresLayout()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimColoredConsoleAppender.AllInstances.TargetGet">
            <summary>Establecer el shim de ColoredConsoleAppender.get_Target()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimColoredConsoleAppender.AllInstances.TargetSetString">
            <summary>Establecer el shim de ColoredConsoleAppender.set_Target(String value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimColoredConsoleAppender.AppendLoggingEvent">
            <summary>Establecer el shim de ColoredConsoleAppender.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimColoredConsoleAppender.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimColoredConsoleAppender.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimColoredConsoleAppender.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimColoredConsoleAppender.Bind(log4net.Appender.IAppender)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimColoredConsoleAppender.Bind(log4net.Appender.IBulkAppender)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimColoredConsoleAppender.Bind(log4net.Appender.IFlushable)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimColoredConsoleAppender.Bind(log4net.Core.IOptionHandler)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimColoredConsoleAppender.Constructor">
            <summary>Establecer el shim de ColoredConsoleAppender.ColoredConsoleAppender()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimColoredConsoleAppender.ConstructorILayout">
            <summary>Establecer el shim de ColoredConsoleAppender.ColoredConsoleAppender(ILayout layout)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimColoredConsoleAppender.ConstructorILayoutBoolean">
            <summary>Establecer el shim de ColoredConsoleAppender.ColoredConsoleAppender(ILayout layout, Boolean writeToErrorStream)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimColoredConsoleAppender.RequiresLayoutGet">
            <summary>Establecer el shim de ColoredConsoleAppender.get_RequiresLayout()</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimColoredConsoleAppender.ShimLevelColors">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Appender.ColoredConsoleAppender+LevelColors</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimColoredConsoleAppender.ShimLevelColors.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimColoredConsoleAppender.ShimLevelColors.#ctor(log4net.Appender.ColoredConsoleAppender.LevelColors)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimColoredConsoleAppender.ShimLevelColors.ActivateOptions">
            <summary>Establecer el shim de LevelColors.ActivateOptions()</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimColoredConsoleAppender.ShimLevelColors.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimColoredConsoleAppender.ShimLevelColors.AllInstances.ActivateOptions">
            <summary>Establecer el shim de LevelColors.ActivateOptions()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimColoredConsoleAppender.ShimLevelColors.AllInstances.BackColorGet">
            <summary>Establecer el shim de LevelColors.get_BackColor()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimColoredConsoleAppender.ShimLevelColors.AllInstances.BackColorSetColoredConsoleAppenderColors">
            <summary>Establecer el shim de LevelColors.set_BackColor(Colors value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimColoredConsoleAppender.ShimLevelColors.AllInstances.CombinedColorGet">
            <summary>Establecer el shim de LevelColors.get_CombinedColor()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimColoredConsoleAppender.ShimLevelColors.AllInstances.ForeColorGet">
            <summary>Establecer el shim de LevelColors.get_ForeColor()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimColoredConsoleAppender.ShimLevelColors.AllInstances.ForeColorSetColoredConsoleAppenderColors">
            <summary>Establecer el shim de LevelColors.set_ForeColor(Colors value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimColoredConsoleAppender.ShimLevelColors.BackColorGet">
            <summary>Establecer el shim de LevelColors.get_BackColor()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimColoredConsoleAppender.ShimLevelColors.BackColorSetColoredConsoleAppenderColors">
            <summary>Establecer el shim de LevelColors.set_BackColor(Colors value)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimColoredConsoleAppender.ShimLevelColors.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimColoredConsoleAppender.ShimLevelColors.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimColoredConsoleAppender.ShimLevelColors.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimColoredConsoleAppender.ShimLevelColors.Bind(log4net.Core.IOptionHandler)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimColoredConsoleAppender.ShimLevelColors.CombinedColorGet">
            <summary>Establecer el shim de LevelColors.get_CombinedColor()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimColoredConsoleAppender.ShimLevelColors.Constructor">
            <summary>Establecer el shim de LevelColors.LevelColors()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimColoredConsoleAppender.ShimLevelColors.ForeColorGet">
            <summary>Establecer el shim de LevelColors.get_ForeColor()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimColoredConsoleAppender.ShimLevelColors.ForeColorSetColoredConsoleAppenderColors">
            <summary>Establecer el shim de LevelColors.set_ForeColor(Colors value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimColoredConsoleAppender.StaticConstructor">
            <summary>Establecer el shim de ColoredConsoleAppender.ColoredConsoleAppender()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimColoredConsoleAppender.TargetGet">
            <summary>Establecer el shim de ColoredConsoleAppender.get_Target()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimColoredConsoleAppender.TargetSetString">
            <summary>Establecer el shim de ColoredConsoleAppender.set_Target(String value)</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimConsoleAppender">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Appender.ConsoleAppender</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimConsoleAppender.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimConsoleAppender.#ctor(log4net.Appender.ConsoleAppender)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimConsoleAppender.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimConsoleAppender.AllInstances.AppendLoggingEvent">
            <summary>Establecer el shim de ConsoleAppender.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimConsoleAppender.AllInstances.RequiresLayoutGet">
            <summary>Establecer el shim de ConsoleAppender.get_RequiresLayout()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimConsoleAppender.AllInstances.TargetGet">
            <summary>Establecer el shim de ConsoleAppender.get_Target()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimConsoleAppender.AllInstances.TargetSetString">
            <summary>Establecer el shim de ConsoleAppender.set_Target(String value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimConsoleAppender.AppendLoggingEvent">
            <summary>Establecer el shim de ConsoleAppender.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimConsoleAppender.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimConsoleAppender.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimConsoleAppender.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimConsoleAppender.Bind(log4net.Appender.IAppender)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimConsoleAppender.Bind(log4net.Appender.IBulkAppender)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimConsoleAppender.Bind(log4net.Appender.IFlushable)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimConsoleAppender.Bind(log4net.Core.IOptionHandler)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimConsoleAppender.Constructor">
            <summary>Establecer el shim de ConsoleAppender.ConsoleAppender()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimConsoleAppender.ConstructorILayout">
            <summary>Establecer el shim de ConsoleAppender.ConsoleAppender(ILayout layout)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimConsoleAppender.ConstructorILayoutBoolean">
            <summary>Establecer el shim de ConsoleAppender.ConsoleAppender(ILayout layout, Boolean writeToErrorStream)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimConsoleAppender.RequiresLayoutGet">
            <summary>Establecer el shim de ConsoleAppender.get_RequiresLayout()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimConsoleAppender.TargetGet">
            <summary>Establecer el shim de ConsoleAppender.get_Target()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimConsoleAppender.TargetSetString">
            <summary>Establecer el shim de ConsoleAppender.set_Target(String value)</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimDebugAppender">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Appender.DebugAppender</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimDebugAppender.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimDebugAppender.#ctor(log4net.Appender.DebugAppender)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimDebugAppender.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimDebugAppender.AllInstances.AppendLoggingEvent">
            <summary>Establecer el shim de DebugAppender.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimDebugAppender.AllInstances.CategoryGet">
            <summary>Establecer el shim de DebugAppender.get_Category()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimDebugAppender.AllInstances.CategorySetPatternLayout">
            <summary>Establecer el shim de DebugAppender.set_Category(PatternLayout value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimDebugAppender.AllInstances.FlushInt32">
            <summary>Establecer el shim de DebugAppender.Flush(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimDebugAppender.AllInstances.ImmediateFlushGet">
            <summary>Establecer el shim de DebugAppender.get_ImmediateFlush()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimDebugAppender.AllInstances.ImmediateFlushSetBoolean">
            <summary>Establecer el shim de DebugAppender.set_ImmediateFlush(Boolean value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimDebugAppender.AllInstances.RequiresLayoutGet">
            <summary>Establecer el shim de DebugAppender.get_RequiresLayout()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimDebugAppender.AppendLoggingEvent">
            <summary>Establecer el shim de DebugAppender.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimDebugAppender.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimDebugAppender.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimDebugAppender.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimDebugAppender.Bind(log4net.Appender.IAppender)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimDebugAppender.Bind(log4net.Appender.IBulkAppender)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimDebugAppender.Bind(log4net.Appender.IFlushable)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimDebugAppender.Bind(log4net.Core.IOptionHandler)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimDebugAppender.CategoryGet">
            <summary>Establecer el shim de DebugAppender.get_Category()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimDebugAppender.CategorySetPatternLayout">
            <summary>Establecer el shim de DebugAppender.set_Category(PatternLayout value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimDebugAppender.Constructor">
            <summary>Establecer el shim de DebugAppender.DebugAppender()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimDebugAppender.ConstructorILayout">
            <summary>Establecer el shim de DebugAppender.DebugAppender(ILayout layout)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimDebugAppender.FlushInt32">
            <summary>Establecer el shim de DebugAppender.Flush(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimDebugAppender.ImmediateFlushGet">
            <summary>Establecer el shim de DebugAppender.get_ImmediateFlush()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimDebugAppender.ImmediateFlushSetBoolean">
            <summary>Establecer el shim de DebugAppender.set_ImmediateFlush(Boolean value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimDebugAppender.RequiresLayoutGet">
            <summary>Establecer el shim de DebugAppender.get_RequiresLayout()</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimEventLogAppender">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Appender.EventLogAppender</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimEventLogAppender.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimEventLogAppender.#ctor(log4net.Appender.EventLogAppender)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimEventLogAppender.ActivateOptions">
            <summary>Establecer el shim de EventLogAppender.ActivateOptions()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimEventLogAppender.AddMappingEventLogAppenderLevel2EventLogEntryType">
            <summary>Establecer el shim de EventLogAppender.AddMapping(Level2EventLogEntryType mapping)</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimEventLogAppender.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimEventLogAppender.AllInstances.ActivateOptions">
            <summary>Establecer el shim de EventLogAppender.ActivateOptions()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimEventLogAppender.AllInstances.AddMappingEventLogAppenderLevel2EventLogEntryType">
            <summary>Establecer el shim de EventLogAppender.AddMapping(Level2EventLogEntryType mapping)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimEventLogAppender.AllInstances.AppendLoggingEvent">
            <summary>Establecer el shim de EventLogAppender.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimEventLogAppender.AllInstances.ApplicationNameGet">
            <summary>Establecer el shim de EventLogAppender.get_ApplicationName()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimEventLogAppender.AllInstances.ApplicationNameSetString">
            <summary>Establecer el shim de EventLogAppender.set_ApplicationName(String value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimEventLogAppender.AllInstances.CategoryGet">
            <summary>Establecer el shim de EventLogAppender.get_Category()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimEventLogAppender.AllInstances.CategorySetInt16">
            <summary>Establecer el shim de EventLogAppender.set_Category(Int16 value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimEventLogAppender.AllInstances.EventIdGet">
            <summary>Establecer el shim de EventLogAppender.get_EventId()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimEventLogAppender.AllInstances.EventIdSetInt32">
            <summary>Establecer el shim de EventLogAppender.set_EventId(Int32 value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimEventLogAppender.AllInstances.GetEntryTypeLevel">
            <summary>Establecer el shim de EventLogAppender.GetEntryType(Level level)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimEventLogAppender.AllInstances.LogNameGet">
            <summary>Establecer el shim de EventLogAppender.get_LogName()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimEventLogAppender.AllInstances.LogNameSetString">
            <summary>Establecer el shim de EventLogAppender.set_LogName(String value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimEventLogAppender.AllInstances.MachineNameGet">
            <summary>Establecer el shim de EventLogAppender.get_MachineName()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimEventLogAppender.AllInstances.MachineNameSetString">
            <summary>Establecer el shim de EventLogAppender.set_MachineName(String value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimEventLogAppender.AllInstances.RequiresLayoutGet">
            <summary>Establecer el shim de EventLogAppender.get_RequiresLayout()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimEventLogAppender.AllInstances.SecurityContextGet">
            <summary>Establecer el shim de EventLogAppender.get_SecurityContext()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimEventLogAppender.AllInstances.SecurityContextSetSecurityContext">
            <summary>Establecer el shim de EventLogAppender.set_SecurityContext(SecurityContext value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimEventLogAppender.AppendLoggingEvent">
            <summary>Establecer el shim de EventLogAppender.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimEventLogAppender.ApplicationNameGet">
            <summary>Establecer el shim de EventLogAppender.get_ApplicationName()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimEventLogAppender.ApplicationNameSetString">
            <summary>Establecer el shim de EventLogAppender.set_ApplicationName(String value)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimEventLogAppender.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimEventLogAppender.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimEventLogAppender.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimEventLogAppender.Bind(log4net.Appender.IAppender)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimEventLogAppender.Bind(log4net.Appender.IBulkAppender)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimEventLogAppender.Bind(log4net.Appender.IFlushable)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimEventLogAppender.Bind(log4net.Core.IOptionHandler)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimEventLogAppender.CategoryGet">
            <summary>Establecer el shim de EventLogAppender.get_Category()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimEventLogAppender.CategorySetInt16">
            <summary>Establecer el shim de EventLogAppender.set_Category(Int16 value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimEventLogAppender.Constructor">
            <summary>Establecer el shim de EventLogAppender.EventLogAppender()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimEventLogAppender.ConstructorILayout">
            <summary>Establecer el shim de EventLogAppender.EventLogAppender(ILayout layout)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimEventLogAppender.CreateEventSourceStringStringString">
            <summary>Establecer el shim de EventLogAppender.CreateEventSource(String source, String logName, String machineName)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimEventLogAppender.EventIdGet">
            <summary>Establecer el shim de EventLogAppender.get_EventId()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimEventLogAppender.EventIdSetInt32">
            <summary>Establecer el shim de EventLogAppender.set_EventId(Int32 value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimEventLogAppender.GetEntryTypeLevel">
            <summary>Establecer el shim de EventLogAppender.GetEntryType(Level level)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimEventLogAppender.GetMaxEventLogMessageSize">
            <summary>Establecer el shim de EventLogAppender.GetMaxEventLogMessageSize()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimEventLogAppender.LogNameGet">
            <summary>Establecer el shim de EventLogAppender.get_LogName()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimEventLogAppender.LogNameSetString">
            <summary>Establecer el shim de EventLogAppender.set_LogName(String value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimEventLogAppender.MachineNameGet">
            <summary>Establecer el shim de EventLogAppender.get_MachineName()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimEventLogAppender.MachineNameSetString">
            <summary>Establecer el shim de EventLogAppender.set_MachineName(String value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimEventLogAppender.RequiresLayoutGet">
            <summary>Establecer el shim de EventLogAppender.get_RequiresLayout()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimEventLogAppender.SecurityContextGet">
            <summary>Establecer el shim de EventLogAppender.get_SecurityContext()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimEventLogAppender.SecurityContextSetSecurityContext">
            <summary>Establecer el shim de EventLogAppender.set_SecurityContext(SecurityContext value)</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimEventLogAppender.ShimLevel2EventLogEntryType">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Appender.EventLogAppender+Level2EventLogEntryType</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimEventLogAppender.ShimLevel2EventLogEntryType.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimEventLogAppender.ShimLevel2EventLogEntryType.#ctor(log4net.Appender.EventLogAppender.Level2EventLogEntryType)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimEventLogAppender.ShimLevel2EventLogEntryType.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimEventLogAppender.ShimLevel2EventLogEntryType.AllInstances.EventLogEntryTypeGet">
            <summary>Establecer el shim de Level2EventLogEntryType.get_EventLogEntryType()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimEventLogAppender.ShimLevel2EventLogEntryType.AllInstances.EventLogEntryTypeSetEventLogEntryType">
            <summary>Establecer el shim de Level2EventLogEntryType.set_EventLogEntryType(EventLogEntryType value)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimEventLogAppender.ShimLevel2EventLogEntryType.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimEventLogAppender.ShimLevel2EventLogEntryType.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimEventLogAppender.ShimLevel2EventLogEntryType.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimEventLogAppender.ShimLevel2EventLogEntryType.Bind(log4net.Core.IOptionHandler)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimEventLogAppender.ShimLevel2EventLogEntryType.Constructor">
            <summary>Establecer el shim de Level2EventLogEntryType.Level2EventLogEntryType()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimEventLogAppender.ShimLevel2EventLogEntryType.EventLogEntryTypeGet">
            <summary>Establecer el shim de Level2EventLogEntryType.get_EventLogEntryType()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimEventLogAppender.ShimLevel2EventLogEntryType.EventLogEntryTypeSetEventLogEntryType">
            <summary>Establecer el shim de Level2EventLogEntryType.set_EventLogEntryType(EventLogEntryType value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimEventLogAppender.StaticConstructor">
            <summary>Establecer el shim de EventLogAppender.EventLogAppender()</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimFileAppender">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Appender.FileAppender</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimFileAppender.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimFileAppender.#ctor(log4net.Appender.FileAppender)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.ActivateOptions">
            <summary>Establecer el shim de FileAppender.ActivateOptions()</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimFileAppender.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.AllInstances.ActivateOptions">
            <summary>Establecer el shim de FileAppender.ActivateOptions()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.AllInstances.AppendLoggingEvent">
            <summary>Establecer el shim de FileAppender.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.AllInstances.AppendLoggingEventArray">
            <summary>Establecer el shim de FileAppender.Append(LoggingEvent[] loggingEvents)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.AllInstances.AppendToFileGet">
            <summary>Establecer el shim de FileAppender.get_AppendToFile()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.AllInstances.AppendToFileSetBoolean">
            <summary>Establecer el shim de FileAppender.set_AppendToFile(Boolean value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.AllInstances.CloseFile">
            <summary>Establecer el shim de FileAppender.CloseFile()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.AllInstances.CloseWriter">
            <summary>Establecer el shim de FileAppender.CloseWriter()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.AllInstances.FileGet">
            <summary>Establecer el shim de FileAppender.get_File()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.AllInstances.FileSetString">
            <summary>Establecer el shim de FileAppender.set_File(String value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.AllInstances.LockingModelGet">
            <summary>Establecer el shim de FileAppender.get_LockingModel()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.AllInstances.LockingModelSetFileAppenderLockingModelBase">
            <summary>Establecer el shim de FileAppender.set_LockingModel(LockingModelBase value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.AllInstances.OnClose">
            <summary>Establecer el shim de FileAppender.OnClose()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.AllInstances.OpenFileStringBoolean">
            <summary>Establecer el shim de FileAppender.OpenFile(String fileName, Boolean append)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.AllInstances.PrepareWriter">
            <summary>Establecer el shim de FileAppender.PrepareWriter()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.AllInstances.Reset">
            <summary>Establecer el shim de FileAppender.Reset()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.AllInstances.SafeOpenFileStringBoolean">
            <summary>Establecer el shim de FileAppender.SafeOpenFile(String fileName, Boolean append)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.AllInstances.SecurityContextGet">
            <summary>Establecer el shim de FileAppender.get_SecurityContext()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.AllInstances.SecurityContextSetSecurityContext">
            <summary>Establecer el shim de FileAppender.set_SecurityContext(SecurityContext value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.AllInstances.SetQWForFilesStream">
            <summary>Establecer el shim de FileAppender.SetQWForFiles(Stream fileStream)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.AllInstances.SetQWForFilesTextWriter">
            <summary>Establecer el shim de FileAppender.SetQWForFiles(TextWriter writer)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.AllInstances.WriteFooter">
            <summary>Establecer el shim de FileAppender.WriteFooter()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.AllInstances.WriteHeader">
            <summary>Establecer el shim de FileAppender.WriteHeader()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.AppendLoggingEvent">
            <summary>Establecer el shim de FileAppender.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.AppendLoggingEventArray">
            <summary>Establecer el shim de FileAppender.Append(LoggingEvent[] loggingEvents)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.AppendToFileGet">
            <summary>Establecer el shim de FileAppender.get_AppendToFile()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.AppendToFileSetBoolean">
            <summary>Establecer el shim de FileAppender.set_AppendToFile(Boolean value)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimFileAppender.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimFileAppender.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimFileAppender.Bind(log4net.Appender.IAppender)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimFileAppender.Bind(log4net.Appender.IBulkAppender)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimFileAppender.Bind(log4net.Appender.IFlushable)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimFileAppender.Bind(log4net.Core.IOptionHandler)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.CloseFile">
            <summary>Establecer el shim de FileAppender.CloseFile()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.CloseWriter">
            <summary>Establecer el shim de FileAppender.CloseWriter()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.Constructor">
            <summary>Establecer el shim de FileAppender.FileAppender()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.ConstructorILayoutString">
            <summary>Establecer el shim de FileAppender.FileAppender(ILayout layout, String filename)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.ConstructorILayoutStringBoolean">
            <summary>Establecer el shim de FileAppender.FileAppender(ILayout layout, String filename, Boolean append)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.ConvertToFullPathString">
            <summary>Establecer el shim de FileAppender.ConvertToFullPath(String path)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.FileGet">
            <summary>Establecer el shim de FileAppender.get_File()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.FileSetString">
            <summary>Establecer el shim de FileAppender.set_File(String value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.LockingModelGet">
            <summary>Establecer el shim de FileAppender.get_LockingModel()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.LockingModelSetFileAppenderLockingModelBase">
            <summary>Establecer el shim de FileAppender.set_LockingModel(LockingModelBase value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.OnClose">
            <summary>Establecer el shim de FileAppender.OnClose()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.OpenFileStringBoolean">
            <summary>Establecer el shim de FileAppender.OpenFile(String fileName, Boolean append)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.PrepareWriter">
            <summary>Establecer el shim de FileAppender.PrepareWriter()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.Reset">
            <summary>Establecer el shim de FileAppender.Reset()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.SafeOpenFileStringBoolean">
            <summary>Establecer el shim de FileAppender.SafeOpenFile(String fileName, Boolean append)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.SecurityContextGet">
            <summary>Establecer el shim de FileAppender.get_SecurityContext()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.SecurityContextSetSecurityContext">
            <summary>Establecer el shim de FileAppender.set_SecurityContext(SecurityContext value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.SetQWForFilesStream">
            <summary>Establecer el shim de FileAppender.SetQWForFiles(Stream fileStream)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.SetQWForFilesTextWriter">
            <summary>Establecer el shim de FileAppender.SetQWForFiles(TextWriter writer)</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimFileAppender.ShimExclusiveLock">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Appender.FileAppender+ExclusiveLock</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimFileAppender.ShimExclusiveLock.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimFileAppender.ShimExclusiveLock.#ctor(log4net.Appender.FileAppender.ExclusiveLock)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.ShimExclusiveLock.AcquireLock">
            <summary>Establecer el shim de ExclusiveLock.AcquireLock()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.ShimExclusiveLock.ActivateOptions">
            <summary>Establecer el shim de ExclusiveLock.ActivateOptions()</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimFileAppender.ShimExclusiveLock.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.ShimExclusiveLock.AllInstances.AcquireLock">
            <summary>Establecer el shim de ExclusiveLock.AcquireLock()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.ShimExclusiveLock.AllInstances.ActivateOptions">
            <summary>Establecer el shim de ExclusiveLock.ActivateOptions()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.ShimExclusiveLock.AllInstances.CloseFile">
            <summary>Establecer el shim de ExclusiveLock.CloseFile()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.ShimExclusiveLock.AllInstances.OnClose">
            <summary>Establecer el shim de ExclusiveLock.OnClose()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.ShimExclusiveLock.AllInstances.ReleaseLock">
            <summary>Establecer el shim de ExclusiveLock.ReleaseLock()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimFileAppender.ShimExclusiveLock.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimFileAppender.ShimExclusiveLock.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.ShimExclusiveLock.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.ShimExclusiveLock.CloseFile">
            <summary>Establecer el shim de ExclusiveLock.CloseFile()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.ShimExclusiveLock.Constructor">
            <summary>Establecer el shim de ExclusiveLock.ExclusiveLock()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.ShimExclusiveLock.OnClose">
            <summary>Establecer el shim de ExclusiveLock.OnClose()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.ShimExclusiveLock.ReleaseLock">
            <summary>Establecer el shim de ExclusiveLock.ReleaseLock()</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimFileAppender.ShimInterProcessLock">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Appender.FileAppender+InterProcessLock</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimFileAppender.ShimInterProcessLock.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimFileAppender.ShimInterProcessLock.#ctor(log4net.Appender.FileAppender.InterProcessLock)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.ShimInterProcessLock.AcquireLock">
            <summary>Establecer el shim de InterProcessLock.AcquireLock()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.ShimInterProcessLock.ActivateOptions">
            <summary>Establecer el shim de InterProcessLock.ActivateOptions()</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimFileAppender.ShimInterProcessLock.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.ShimInterProcessLock.AllInstances.AcquireLock">
            <summary>Establecer el shim de InterProcessLock.AcquireLock()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.ShimInterProcessLock.AllInstances.ActivateOptions">
            <summary>Establecer el shim de InterProcessLock.ActivateOptions()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.ShimInterProcessLock.AllInstances.CloseFile">
            <summary>Establecer el shim de InterProcessLock.CloseFile()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.ShimInterProcessLock.AllInstances.OnClose">
            <summary>Establecer el shim de InterProcessLock.OnClose()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.ShimInterProcessLock.AllInstances.ReleaseLock">
            <summary>Establecer el shim de InterProcessLock.ReleaseLock()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimFileAppender.ShimInterProcessLock.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimFileAppender.ShimInterProcessLock.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.ShimInterProcessLock.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.ShimInterProcessLock.CloseFile">
            <summary>Establecer el shim de InterProcessLock.CloseFile()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.ShimInterProcessLock.Constructor">
            <summary>Establecer el shim de InterProcessLock.InterProcessLock()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.ShimInterProcessLock.OnClose">
            <summary>Establecer el shim de InterProcessLock.OnClose()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.ShimInterProcessLock.ReleaseLock">
            <summary>Establecer el shim de InterProcessLock.ReleaseLock()</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimFileAppender.ShimLockingModelBase">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Appender.FileAppender+LockingModelBase</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimFileAppender.ShimLockingModelBase.#ctor(log4net.Appender.FileAppender.LockingModelBase)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimFileAppender.ShimLockingModelBase.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.ShimLockingModelBase.AllInstances.CloseStreamStream">
            <summary>Establecer el shim de LockingModelBase.CloseStream(Stream stream)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.ShimLockingModelBase.AllInstances.CreateStreamStringBooleanFileShare">
            <summary>Establecer el shim de LockingModelBase.CreateStream(String filename, Boolean append, FileShare fileShare)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.ShimLockingModelBase.AllInstances.CurrentAppenderGet">
            <summary>Establecer el shim de LockingModelBase.get_CurrentAppender()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.ShimLockingModelBase.AllInstances.CurrentAppenderSetFileAppender">
            <summary>Establecer el shim de LockingModelBase.set_CurrentAppender(FileAppender value)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimFileAppender.ShimLockingModelBase.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimFileAppender.ShimLockingModelBase.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.ShimLockingModelBase.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.ShimLockingModelBase.CloseStreamStream">
            <summary>Establecer el shim de LockingModelBase.CloseStream(Stream stream)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.ShimLockingModelBase.Constructor">
            <summary>Establecer el shim de LockingModelBase.LockingModelBase()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.ShimLockingModelBase.CreateStreamStringBooleanFileShare">
            <summary>Establecer el shim de LockingModelBase.CreateStream(String filename, Boolean append, FileShare fileShare)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.ShimLockingModelBase.CurrentAppenderGet">
            <summary>Establecer el shim de LockingModelBase.get_CurrentAppender()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.ShimLockingModelBase.CurrentAppenderSetFileAppender">
            <summary>Establecer el shim de LockingModelBase.set_CurrentAppender(FileAppender value)</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimFileAppender.ShimMinimalLock">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Appender.FileAppender+MinimalLock</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimFileAppender.ShimMinimalLock.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimFileAppender.ShimMinimalLock.#ctor(log4net.Appender.FileAppender.MinimalLock)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.ShimMinimalLock.AcquireLock">
            <summary>Establecer el shim de MinimalLock.AcquireLock()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.ShimMinimalLock.ActivateOptions">
            <summary>Establecer el shim de MinimalLock.ActivateOptions()</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimFileAppender.ShimMinimalLock.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.ShimMinimalLock.AllInstances.AcquireLock">
            <summary>Establecer el shim de MinimalLock.AcquireLock()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.ShimMinimalLock.AllInstances.ActivateOptions">
            <summary>Establecer el shim de MinimalLock.ActivateOptions()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.ShimMinimalLock.AllInstances.CloseFile">
            <summary>Establecer el shim de MinimalLock.CloseFile()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.ShimMinimalLock.AllInstances.OnClose">
            <summary>Establecer el shim de MinimalLock.OnClose()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.ShimMinimalLock.AllInstances.ReleaseLock">
            <summary>Establecer el shim de MinimalLock.ReleaseLock()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimFileAppender.ShimMinimalLock.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimFileAppender.ShimMinimalLock.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.ShimMinimalLock.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.ShimMinimalLock.CloseFile">
            <summary>Establecer el shim de MinimalLock.CloseFile()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.ShimMinimalLock.Constructor">
            <summary>Establecer el shim de MinimalLock.MinimalLock()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.ShimMinimalLock.OnClose">
            <summary>Establecer el shim de MinimalLock.OnClose()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.ShimMinimalLock.ReleaseLock">
            <summary>Establecer el shim de MinimalLock.ReleaseLock()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.StaticConstructor">
            <summary>Establecer el shim de FileAppender.FileAppender()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.WriteFooter">
            <summary>Establecer el shim de FileAppender.WriteFooter()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimFileAppender.WriteHeader">
            <summary>Establecer el shim de FileAppender.WriteHeader()</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimForwardingAppender">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Appender.ForwardingAppender</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimForwardingAppender.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimForwardingAppender.#ctor(log4net.Appender.ForwardingAppender)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimForwardingAppender.AddAppenderIAppender">
            <summary>Establecer el shim de ForwardingAppender.AddAppender(IAppender newAppender)</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimForwardingAppender.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimForwardingAppender.AllInstances.AddAppenderIAppender">
            <summary>Establecer el shim de ForwardingAppender.AddAppender(IAppender newAppender)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimForwardingAppender.AllInstances.AppendLoggingEvent">
            <summary>Establecer el shim de ForwardingAppender.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimForwardingAppender.AllInstances.AppendLoggingEventArray">
            <summary>Establecer el shim de ForwardingAppender.Append(LoggingEvent[] loggingEvents)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimForwardingAppender.AllInstances.AppendersGet">
            <summary>Establecer el shim de ForwardingAppender.get_Appenders()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimForwardingAppender.AllInstances.GetAppenderString">
            <summary>Establecer el shim de ForwardingAppender.GetAppender(String name)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimForwardingAppender.AllInstances.OnClose">
            <summary>Establecer el shim de ForwardingAppender.OnClose()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimForwardingAppender.AllInstances.RemoveAllAppenders">
            <summary>Establecer el shim de ForwardingAppender.RemoveAllAppenders()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimForwardingAppender.AllInstances.RemoveAppenderIAppender">
            <summary>Establecer el shim de ForwardingAppender.RemoveAppender(IAppender appender)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimForwardingAppender.AllInstances.RemoveAppenderString">
            <summary>Establecer el shim de ForwardingAppender.RemoveAppender(String name)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimForwardingAppender.AppendLoggingEvent">
            <summary>Establecer el shim de ForwardingAppender.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimForwardingAppender.AppendLoggingEventArray">
            <summary>Establecer el shim de ForwardingAppender.Append(LoggingEvent[] loggingEvents)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimForwardingAppender.AppendersGet">
            <summary>Establecer el shim de ForwardingAppender.get_Appenders()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimForwardingAppender.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimForwardingAppender.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimForwardingAppender.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimForwardingAppender.Bind(log4net.Appender.IAppender)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimForwardingAppender.Bind(log4net.Appender.IBulkAppender)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimForwardingAppender.Bind(log4net.Appender.IFlushable)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimForwardingAppender.Bind(log4net.Core.IAppenderAttachable)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimForwardingAppender.Bind(log4net.Core.IOptionHandler)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimForwardingAppender.Constructor">
            <summary>Establecer el shim de ForwardingAppender.ForwardingAppender()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimForwardingAppender.GetAppenderString">
            <summary>Establecer el shim de ForwardingAppender.GetAppender(String name)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimForwardingAppender.OnClose">
            <summary>Establecer el shim de ForwardingAppender.OnClose()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimForwardingAppender.RemoveAllAppenders">
            <summary>Establecer el shim de ForwardingAppender.RemoveAllAppenders()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimForwardingAppender.RemoveAppenderIAppender">
            <summary>Establecer el shim de ForwardingAppender.RemoveAppender(IAppender appender)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimForwardingAppender.RemoveAppenderString">
            <summary>Establecer el shim de ForwardingAppender.RemoveAppender(String name)</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimLocalSyslogAppender">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Appender.LocalSyslogAppender</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimLocalSyslogAppender.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimLocalSyslogAppender.#ctor(log4net.Appender.LocalSyslogAppender)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimLocalSyslogAppender.ActivateOptions">
            <summary>Establecer el shim de LocalSyslogAppender.ActivateOptions()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimLocalSyslogAppender.AddMappingLocalSyslogAppenderLevelSeverity">
            <summary>Establecer el shim de LocalSyslogAppender.AddMapping(LevelSeverity mapping)</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimLocalSyslogAppender.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimLocalSyslogAppender.AllInstances.ActivateOptions">
            <summary>Establecer el shim de LocalSyslogAppender.ActivateOptions()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimLocalSyslogAppender.AllInstances.AddMappingLocalSyslogAppenderLevelSeverity">
            <summary>Establecer el shim de LocalSyslogAppender.AddMapping(LevelSeverity mapping)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimLocalSyslogAppender.AllInstances.AppendLoggingEvent">
            <summary>Establecer el shim de LocalSyslogAppender.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimLocalSyslogAppender.AllInstances.FacilityGet">
            <summary>Establecer el shim de LocalSyslogAppender.get_Facility()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimLocalSyslogAppender.AllInstances.FacilitySetLocalSyslogAppenderSyslogFacility">
            <summary>Establecer el shim de LocalSyslogAppender.set_Facility(SyslogFacility value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimLocalSyslogAppender.AllInstances.GetSeverityLevel">
            <summary>Establecer el shim de LocalSyslogAppender.GetSeverity(Level level)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimLocalSyslogAppender.AllInstances.IdentityGet">
            <summary>Establecer el shim de LocalSyslogAppender.get_Identity()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimLocalSyslogAppender.AllInstances.IdentitySetString">
            <summary>Establecer el shim de LocalSyslogAppender.set_Identity(String value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimLocalSyslogAppender.AllInstances.OnClose">
            <summary>Establecer el shim de LocalSyslogAppender.OnClose()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimLocalSyslogAppender.AllInstances.RequiresLayoutGet">
            <summary>Establecer el shim de LocalSyslogAppender.get_RequiresLayout()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimLocalSyslogAppender.AppendLoggingEvent">
            <summary>Establecer el shim de LocalSyslogAppender.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimLocalSyslogAppender.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimLocalSyslogAppender.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimLocalSyslogAppender.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimLocalSyslogAppender.Bind(log4net.Appender.IAppender)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimLocalSyslogAppender.Bind(log4net.Appender.IBulkAppender)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimLocalSyslogAppender.Bind(log4net.Appender.IFlushable)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimLocalSyslogAppender.Bind(log4net.Core.IOptionHandler)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimLocalSyslogAppender.Constructor">
            <summary>Establecer el shim de LocalSyslogAppender.LocalSyslogAppender()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimLocalSyslogAppender.FacilityGet">
            <summary>Establecer el shim de LocalSyslogAppender.get_Facility()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimLocalSyslogAppender.FacilitySetLocalSyslogAppenderSyslogFacility">
            <summary>Establecer el shim de LocalSyslogAppender.set_Facility(SyslogFacility value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimLocalSyslogAppender.GeneratePriorityLocalSyslogAppenderSyslogFacilityLocalSyslogAppenderSyslogSeverity">
            <summary>Establecer el shim de LocalSyslogAppender.GeneratePriority(SyslogFacility facility, SyslogSeverity severity)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimLocalSyslogAppender.GetSeverityLevel">
            <summary>Establecer el shim de LocalSyslogAppender.GetSeverity(Level level)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimLocalSyslogAppender.IdentityGet">
            <summary>Establecer el shim de LocalSyslogAppender.get_Identity()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimLocalSyslogAppender.IdentitySetString">
            <summary>Establecer el shim de LocalSyslogAppender.set_Identity(String value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimLocalSyslogAppender.OnClose">
            <summary>Establecer el shim de LocalSyslogAppender.OnClose()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimLocalSyslogAppender.RequiresLayoutGet">
            <summary>Establecer el shim de LocalSyslogAppender.get_RequiresLayout()</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimLocalSyslogAppender.ShimLevelSeverity">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Appender.LocalSyslogAppender+LevelSeverity</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimLocalSyslogAppender.ShimLevelSeverity.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimLocalSyslogAppender.ShimLevelSeverity.#ctor(log4net.Appender.LocalSyslogAppender.LevelSeverity)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimLocalSyslogAppender.ShimLevelSeverity.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimLocalSyslogAppender.ShimLevelSeverity.AllInstances.SeverityGet">
            <summary>Establecer el shim de LevelSeverity.get_Severity()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimLocalSyslogAppender.ShimLevelSeverity.AllInstances.SeveritySetLocalSyslogAppenderSyslogSeverity">
            <summary>Establecer el shim de LevelSeverity.set_Severity(SyslogSeverity value)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimLocalSyslogAppender.ShimLevelSeverity.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimLocalSyslogAppender.ShimLevelSeverity.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimLocalSyslogAppender.ShimLevelSeverity.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimLocalSyslogAppender.ShimLevelSeverity.Bind(log4net.Core.IOptionHandler)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimLocalSyslogAppender.ShimLevelSeverity.Constructor">
            <summary>Establecer el shim de LevelSeverity.LevelSeverity()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimLocalSyslogAppender.ShimLevelSeverity.SeverityGet">
            <summary>Establecer el shim de LevelSeverity.get_Severity()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimLocalSyslogAppender.ShimLevelSeverity.SeveritySetLocalSyslogAppenderSyslogSeverity">
            <summary>Establecer el shim de LevelSeverity.set_Severity(SyslogSeverity value)</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimManagedColoredConsoleAppender">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Appender.ManagedColoredConsoleAppender</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimManagedColoredConsoleAppender.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimManagedColoredConsoleAppender.#ctor(log4net.Appender.ManagedColoredConsoleAppender)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimManagedColoredConsoleAppender.ActivateOptions">
            <summary>Establecer el shim de ManagedColoredConsoleAppender.ActivateOptions()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimManagedColoredConsoleAppender.AddMappingManagedColoredConsoleAppenderLevelColors">
            <summary>Establecer el shim de ManagedColoredConsoleAppender.AddMapping(LevelColors mapping)</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimManagedColoredConsoleAppender.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimManagedColoredConsoleAppender.AllInstances.ActivateOptions">
            <summary>Establecer el shim de ManagedColoredConsoleAppender.ActivateOptions()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimManagedColoredConsoleAppender.AllInstances.AddMappingManagedColoredConsoleAppenderLevelColors">
            <summary>Establecer el shim de ManagedColoredConsoleAppender.AddMapping(LevelColors mapping)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimManagedColoredConsoleAppender.AllInstances.AppendLoggingEvent">
            <summary>Establecer el shim de ManagedColoredConsoleAppender.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimManagedColoredConsoleAppender.AllInstances.RequiresLayoutGet">
            <summary>Establecer el shim de ManagedColoredConsoleAppender.get_RequiresLayout()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimManagedColoredConsoleAppender.AllInstances.TargetGet">
            <summary>Establecer el shim de ManagedColoredConsoleAppender.get_Target()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimManagedColoredConsoleAppender.AllInstances.TargetSetString">
            <summary>Establecer el shim de ManagedColoredConsoleAppender.set_Target(String value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimManagedColoredConsoleAppender.AppendLoggingEvent">
            <summary>Establecer el shim de ManagedColoredConsoleAppender.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimManagedColoredConsoleAppender.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimManagedColoredConsoleAppender.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimManagedColoredConsoleAppender.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimManagedColoredConsoleAppender.Bind(log4net.Appender.IAppender)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimManagedColoredConsoleAppender.Bind(log4net.Appender.IBulkAppender)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimManagedColoredConsoleAppender.Bind(log4net.Appender.IFlushable)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimManagedColoredConsoleAppender.Bind(log4net.Core.IOptionHandler)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimManagedColoredConsoleAppender.Constructor">
            <summary>Establecer el shim de ManagedColoredConsoleAppender.ManagedColoredConsoleAppender()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimManagedColoredConsoleAppender.RequiresLayoutGet">
            <summary>Establecer el shim de ManagedColoredConsoleAppender.get_RequiresLayout()</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimManagedColoredConsoleAppender.ShimLevelColors">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Appender.ManagedColoredConsoleAppender+LevelColors</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimManagedColoredConsoleAppender.ShimLevelColors.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimManagedColoredConsoleAppender.ShimLevelColors.#ctor(log4net.Appender.ManagedColoredConsoleAppender.LevelColors)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimManagedColoredConsoleAppender.ShimLevelColors.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimManagedColoredConsoleAppender.ShimLevelColors.AllInstances.BackColorGet">
            <summary>Establecer el shim de LevelColors.get_BackColor()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimManagedColoredConsoleAppender.ShimLevelColors.AllInstances.BackColorSetConsoleColor">
            <summary>Establecer el shim de LevelColors.set_BackColor(ConsoleColor value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimManagedColoredConsoleAppender.ShimLevelColors.AllInstances.ForeColorGet">
            <summary>Establecer el shim de LevelColors.get_ForeColor()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimManagedColoredConsoleAppender.ShimLevelColors.AllInstances.ForeColorSetConsoleColor">
            <summary>Establecer el shim de LevelColors.set_ForeColor(ConsoleColor value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimManagedColoredConsoleAppender.ShimLevelColors.AllInstances.HasBackColorGet">
            <summary>Establecer el shim de LevelColors.get_HasBackColor()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimManagedColoredConsoleAppender.ShimLevelColors.AllInstances.HasForeColorGet">
            <summary>Establecer el shim de LevelColors.get_HasForeColor()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimManagedColoredConsoleAppender.ShimLevelColors.BackColorGet">
            <summary>Establecer el shim de LevelColors.get_BackColor()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimManagedColoredConsoleAppender.ShimLevelColors.BackColorSetConsoleColor">
            <summary>Establecer el shim de LevelColors.set_BackColor(ConsoleColor value)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimManagedColoredConsoleAppender.ShimLevelColors.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimManagedColoredConsoleAppender.ShimLevelColors.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimManagedColoredConsoleAppender.ShimLevelColors.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimManagedColoredConsoleAppender.ShimLevelColors.Bind(log4net.Core.IOptionHandler)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimManagedColoredConsoleAppender.ShimLevelColors.Constructor">
            <summary>Establecer el shim de LevelColors.LevelColors()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimManagedColoredConsoleAppender.ShimLevelColors.ForeColorGet">
            <summary>Establecer el shim de LevelColors.get_ForeColor()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimManagedColoredConsoleAppender.ShimLevelColors.ForeColorSetConsoleColor">
            <summary>Establecer el shim de LevelColors.set_ForeColor(ConsoleColor value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimManagedColoredConsoleAppender.ShimLevelColors.HasBackColorGet">
            <summary>Establecer el shim de LevelColors.get_HasBackColor()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimManagedColoredConsoleAppender.ShimLevelColors.HasForeColorGet">
            <summary>Establecer el shim de LevelColors.get_HasForeColor()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimManagedColoredConsoleAppender.TargetGet">
            <summary>Establecer el shim de ManagedColoredConsoleAppender.get_Target()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimManagedColoredConsoleAppender.TargetSetString">
            <summary>Establecer el shim de ManagedColoredConsoleAppender.set_Target(String value)</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimMemoryAppender">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Appender.MemoryAppender</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimMemoryAppender.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimMemoryAppender.#ctor(log4net.Appender.MemoryAppender)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimMemoryAppender.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimMemoryAppender.AllInstances.AppendLoggingEvent">
            <summary>Establecer el shim de MemoryAppender.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimMemoryAppender.AllInstances.Clear">
            <summary>Establecer el shim de MemoryAppender.Clear()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimMemoryAppender.AllInstances.FixGet">
            <summary>Establecer el shim de MemoryAppender.get_Fix()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimMemoryAppender.AllInstances.FixSetFixFlags">
            <summary>Establecer el shim de MemoryAppender.set_Fix(FixFlags value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimMemoryAppender.AllInstances.GetEvents">
            <summary>Establecer el shim de MemoryAppender.GetEvents()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimMemoryAppender.AllInstances.OnlyFixPartialEventDataGet">
            <summary>Establecer el shim de MemoryAppender.get_OnlyFixPartialEventData()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimMemoryAppender.AllInstances.OnlyFixPartialEventDataSetBoolean">
            <summary>Establecer el shim de MemoryAppender.set_OnlyFixPartialEventData(Boolean value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimMemoryAppender.AllInstances.PopAllEvents">
            <summary>Establecer el shim de MemoryAppender.PopAllEvents()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimMemoryAppender.AppendLoggingEvent">
            <summary>Establecer el shim de MemoryAppender.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimMemoryAppender.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimMemoryAppender.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimMemoryAppender.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimMemoryAppender.Bind(log4net.Appender.IAppender)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimMemoryAppender.Bind(log4net.Appender.IBulkAppender)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimMemoryAppender.Bind(log4net.Appender.IFlushable)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimMemoryAppender.Bind(log4net.Core.IOptionHandler)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimMemoryAppender.Clear">
            <summary>Establecer el shim de MemoryAppender.Clear()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimMemoryAppender.Constructor">
            <summary>Establecer el shim de MemoryAppender.MemoryAppender()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimMemoryAppender.FixGet">
            <summary>Establecer el shim de MemoryAppender.get_Fix()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimMemoryAppender.FixSetFixFlags">
            <summary>Establecer el shim de MemoryAppender.set_Fix(FixFlags value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimMemoryAppender.GetEvents">
            <summary>Establecer el shim de MemoryAppender.GetEvents()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimMemoryAppender.OnlyFixPartialEventDataGet">
            <summary>Establecer el shim de MemoryAppender.get_OnlyFixPartialEventData()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimMemoryAppender.OnlyFixPartialEventDataSetBoolean">
            <summary>Establecer el shim de MemoryAppender.set_OnlyFixPartialEventData(Boolean value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimMemoryAppender.PopAllEvents">
            <summary>Establecer el shim de MemoryAppender.PopAllEvents()</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimNetSendAppender">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Appender.NetSendAppender</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimNetSendAppender.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimNetSendAppender.#ctor(log4net.Appender.NetSendAppender)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimNetSendAppender.ActivateOptions">
            <summary>Establecer el shim de NetSendAppender.ActivateOptions()</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimNetSendAppender.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimNetSendAppender.AllInstances.ActivateOptions">
            <summary>Establecer el shim de NetSendAppender.ActivateOptions()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimNetSendAppender.AllInstances.AppendLoggingEvent">
            <summary>Establecer el shim de NetSendAppender.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimNetSendAppender.AllInstances.RecipientGet">
            <summary>Establecer el shim de NetSendAppender.get_Recipient()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimNetSendAppender.AllInstances.RecipientSetString">
            <summary>Establecer el shim de NetSendAppender.set_Recipient(String value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimNetSendAppender.AllInstances.RequiresLayoutGet">
            <summary>Establecer el shim de NetSendAppender.get_RequiresLayout()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimNetSendAppender.AllInstances.SecurityContextGet">
            <summary>Establecer el shim de NetSendAppender.get_SecurityContext()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimNetSendAppender.AllInstances.SecurityContextSetSecurityContext">
            <summary>Establecer el shim de NetSendAppender.set_SecurityContext(SecurityContext value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimNetSendAppender.AllInstances.SenderGet">
            <summary>Establecer el shim de NetSendAppender.get_Sender()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimNetSendAppender.AllInstances.SenderSetString">
            <summary>Establecer el shim de NetSendAppender.set_Sender(String value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimNetSendAppender.AllInstances.ServerGet">
            <summary>Establecer el shim de NetSendAppender.get_Server()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimNetSendAppender.AllInstances.ServerSetString">
            <summary>Establecer el shim de NetSendAppender.set_Server(String value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimNetSendAppender.AppendLoggingEvent">
            <summary>Establecer el shim de NetSendAppender.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimNetSendAppender.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimNetSendAppender.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimNetSendAppender.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimNetSendAppender.Bind(log4net.Appender.IAppender)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimNetSendAppender.Bind(log4net.Appender.IBulkAppender)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimNetSendAppender.Bind(log4net.Appender.IFlushable)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimNetSendAppender.Bind(log4net.Core.IOptionHandler)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimNetSendAppender.Constructor">
            <summary>Establecer el shim de NetSendAppender.NetSendAppender()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimNetSendAppender.RecipientGet">
            <summary>Establecer el shim de NetSendAppender.get_Recipient()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimNetSendAppender.RecipientSetString">
            <summary>Establecer el shim de NetSendAppender.set_Recipient(String value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimNetSendAppender.RequiresLayoutGet">
            <summary>Establecer el shim de NetSendAppender.get_RequiresLayout()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimNetSendAppender.SecurityContextGet">
            <summary>Establecer el shim de NetSendAppender.get_SecurityContext()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimNetSendAppender.SecurityContextSetSecurityContext">
            <summary>Establecer el shim de NetSendAppender.set_SecurityContext(SecurityContext value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimNetSendAppender.SenderGet">
            <summary>Establecer el shim de NetSendAppender.get_Sender()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimNetSendAppender.SenderSetString">
            <summary>Establecer el shim de NetSendAppender.set_Sender(String value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimNetSendAppender.ServerGet">
            <summary>Establecer el shim de NetSendAppender.get_Server()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimNetSendAppender.ServerSetString">
            <summary>Establecer el shim de NetSendAppender.set_Server(String value)</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimOutputDebugStringAppender">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Appender.OutputDebugStringAppender</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimOutputDebugStringAppender.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimOutputDebugStringAppender.#ctor(log4net.Appender.OutputDebugStringAppender)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimOutputDebugStringAppender.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimOutputDebugStringAppender.AllInstances.AppendLoggingEvent">
            <summary>Establecer el shim de OutputDebugStringAppender.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimOutputDebugStringAppender.AllInstances.RequiresLayoutGet">
            <summary>Establecer el shim de OutputDebugStringAppender.get_RequiresLayout()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimOutputDebugStringAppender.AppendLoggingEvent">
            <summary>Establecer el shim de OutputDebugStringAppender.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimOutputDebugStringAppender.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimOutputDebugStringAppender.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimOutputDebugStringAppender.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimOutputDebugStringAppender.Bind(log4net.Appender.IAppender)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimOutputDebugStringAppender.Bind(log4net.Appender.IBulkAppender)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimOutputDebugStringAppender.Bind(log4net.Appender.IFlushable)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimOutputDebugStringAppender.Bind(log4net.Core.IOptionHandler)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimOutputDebugStringAppender.Constructor">
            <summary>Establecer el shim de OutputDebugStringAppender.OutputDebugStringAppender()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimOutputDebugStringAppender.RequiresLayoutGet">
            <summary>Establecer el shim de OutputDebugStringAppender.get_RequiresLayout()</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimRemoteSyslogAppender">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Appender.RemoteSyslogAppender</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimRemoteSyslogAppender.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimRemoteSyslogAppender.#ctor(log4net.Appender.RemoteSyslogAppender)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemoteSyslogAppender.ActivateOptions">
            <summary>Establecer el shim de RemoteSyslogAppender.ActivateOptions()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemoteSyslogAppender.AddMappingRemoteSyslogAppenderLevelSeverity">
            <summary>Establecer el shim de RemoteSyslogAppender.AddMapping(LevelSeverity mapping)</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimRemoteSyslogAppender.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemoteSyslogAppender.AllInstances.ActivateOptions">
            <summary>Establecer el shim de RemoteSyslogAppender.ActivateOptions()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemoteSyslogAppender.AllInstances.AddMappingRemoteSyslogAppenderLevelSeverity">
            <summary>Establecer el shim de RemoteSyslogAppender.AddMapping(LevelSeverity mapping)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemoteSyslogAppender.AllInstances.AppendLoggingEvent">
            <summary>Establecer el shim de RemoteSyslogAppender.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemoteSyslogAppender.AllInstances.FacilityGet">
            <summary>Establecer el shim de RemoteSyslogAppender.get_Facility()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemoteSyslogAppender.AllInstances.FacilitySetRemoteSyslogAppenderSyslogFacility">
            <summary>Establecer el shim de RemoteSyslogAppender.set_Facility(SyslogFacility value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemoteSyslogAppender.AllInstances.GetSeverityLevel">
            <summary>Establecer el shim de RemoteSyslogAppender.GetSeverity(Level level)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemoteSyslogAppender.AllInstances.IdentityGet">
            <summary>Establecer el shim de RemoteSyslogAppender.get_Identity()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemoteSyslogAppender.AllInstances.IdentitySetPatternLayout">
            <summary>Establecer el shim de RemoteSyslogAppender.set_Identity(PatternLayout value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemoteSyslogAppender.AppendLoggingEvent">
            <summary>Establecer el shim de RemoteSyslogAppender.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimRemoteSyslogAppender.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimRemoteSyslogAppender.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemoteSyslogAppender.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimRemoteSyslogAppender.Bind(log4net.Appender.IAppender)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimRemoteSyslogAppender.Bind(log4net.Appender.IBulkAppender)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimRemoteSyslogAppender.Bind(log4net.Appender.IFlushable)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimRemoteSyslogAppender.Bind(log4net.Core.IOptionHandler)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemoteSyslogAppender.Constructor">
            <summary>Establecer el shim de RemoteSyslogAppender.RemoteSyslogAppender()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemoteSyslogAppender.FacilityGet">
            <summary>Establecer el shim de RemoteSyslogAppender.get_Facility()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemoteSyslogAppender.FacilitySetRemoteSyslogAppenderSyslogFacility">
            <summary>Establecer el shim de RemoteSyslogAppender.set_Facility(SyslogFacility value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemoteSyslogAppender.GeneratePriorityRemoteSyslogAppenderSyslogFacilityRemoteSyslogAppenderSyslogSeverity">
            <summary>Establecer el shim de RemoteSyslogAppender.GeneratePriority(SyslogFacility facility, SyslogSeverity severity)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemoteSyslogAppender.GetSeverityLevel">
            <summary>Establecer el shim de RemoteSyslogAppender.GetSeverity(Level level)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemoteSyslogAppender.IdentityGet">
            <summary>Establecer el shim de RemoteSyslogAppender.get_Identity()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemoteSyslogAppender.IdentitySetPatternLayout">
            <summary>Establecer el shim de RemoteSyslogAppender.set_Identity(PatternLayout value)</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimRemoteSyslogAppender.ShimLevelSeverity">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Appender.RemoteSyslogAppender+LevelSeverity</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimRemoteSyslogAppender.ShimLevelSeverity.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimRemoteSyslogAppender.ShimLevelSeverity.#ctor(log4net.Appender.RemoteSyslogAppender.LevelSeverity)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimRemoteSyslogAppender.ShimLevelSeverity.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemoteSyslogAppender.ShimLevelSeverity.AllInstances.SeverityGet">
            <summary>Establecer el shim de LevelSeverity.get_Severity()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemoteSyslogAppender.ShimLevelSeverity.AllInstances.SeveritySetRemoteSyslogAppenderSyslogSeverity">
            <summary>Establecer el shim de LevelSeverity.set_Severity(SyslogSeverity value)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimRemoteSyslogAppender.ShimLevelSeverity.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimRemoteSyslogAppender.ShimLevelSeverity.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemoteSyslogAppender.ShimLevelSeverity.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimRemoteSyslogAppender.ShimLevelSeverity.Bind(log4net.Core.IOptionHandler)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemoteSyslogAppender.ShimLevelSeverity.Constructor">
            <summary>Establecer el shim de LevelSeverity.LevelSeverity()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemoteSyslogAppender.ShimLevelSeverity.SeverityGet">
            <summary>Establecer el shim de LevelSeverity.get_Severity()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemoteSyslogAppender.ShimLevelSeverity.SeveritySetRemoteSyslogAppenderSyslogSeverity">
            <summary>Establecer el shim de LevelSeverity.set_Severity(SyslogSeverity value)</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimRemotingAppender">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Appender.RemotingAppender</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimRemotingAppender.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimRemotingAppender.#ctor(log4net.Appender.RemotingAppender)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemotingAppender.ActivateOptions">
            <summary>Establecer el shim de RemotingAppender.ActivateOptions()</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimRemotingAppender.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemotingAppender.AllInstances.ActivateOptions">
            <summary>Establecer el shim de RemotingAppender.ActivateOptions()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemotingAppender.AllInstances.BeginAsyncSend">
            <summary>Establecer el shim de RemotingAppender.BeginAsyncSend()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemotingAppender.AllInstances.EndAsyncSend">
            <summary>Establecer el shim de RemotingAppender.EndAsyncSend()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemotingAppender.AllInstances.FlushInt32">
            <summary>Establecer el shim de RemotingAppender.Flush(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemotingAppender.AllInstances.OnClose">
            <summary>Establecer el shim de RemotingAppender.OnClose()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemotingAppender.AllInstances.SendBufferCallbackObject">
            <summary>Establecer el shim de RemotingAppender.SendBufferCallback(Object state)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemotingAppender.AllInstances.SendBufferLoggingEventArray">
            <summary>Establecer el shim de RemotingAppender.SendBuffer(LoggingEvent[] events)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemotingAppender.AllInstances.SinkGet">
            <summary>Establecer el shim de RemotingAppender.get_Sink()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemotingAppender.AllInstances.SinkSetString">
            <summary>Establecer el shim de RemotingAppender.set_Sink(String value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemotingAppender.BeginAsyncSend">
            <summary>Establecer el shim de RemotingAppender.BeginAsyncSend()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimRemotingAppender.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimRemotingAppender.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemotingAppender.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimRemotingAppender.Bind(log4net.Appender.IAppender)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimRemotingAppender.Bind(log4net.Appender.IBulkAppender)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimRemotingAppender.Bind(log4net.Appender.IFlushable)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimRemotingAppender.Bind(log4net.Core.IOptionHandler)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemotingAppender.Constructor">
            <summary>Establecer el shim de RemotingAppender.RemotingAppender()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemotingAppender.EndAsyncSend">
            <summary>Establecer el shim de RemotingAppender.EndAsyncSend()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemotingAppender.FlushInt32">
            <summary>Establecer el shim de RemotingAppender.Flush(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemotingAppender.OnClose">
            <summary>Establecer el shim de RemotingAppender.OnClose()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemotingAppender.SendBufferCallbackObject">
            <summary>Establecer el shim de RemotingAppender.SendBufferCallback(Object state)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemotingAppender.SendBufferLoggingEventArray">
            <summary>Establecer el shim de RemotingAppender.SendBuffer(LoggingEvent[] events)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemotingAppender.SinkGet">
            <summary>Establecer el shim de RemotingAppender.get_Sink()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRemotingAppender.SinkSetString">
            <summary>Establecer el shim de RemotingAppender.set_Sink(String value)</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimRollingFileAppender">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Appender.RollingFileAppender</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimRollingFileAppender.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimRollingFileAppender.#ctor(log4net.Appender.RollingFileAppender)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.ActivateOptions">
            <summary>Establecer el shim de RollingFileAppender.ActivateOptions()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.AdjustFileBeforeAppend">
            <summary>Establecer el shim de RollingFileAppender.AdjustFileBeforeAppend()</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimRollingFileAppender.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.AllInstances.ActivateOptions">
            <summary>Establecer el shim de RollingFileAppender.ActivateOptions()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.AllInstances.AdjustFileBeforeAppend">
            <summary>Establecer el shim de RollingFileAppender.AdjustFileBeforeAppend()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.AllInstances.AppendLoggingEvent">
            <summary>Establecer el shim de RollingFileAppender.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.AllInstances.AppendLoggingEventArray">
            <summary>Establecer el shim de RollingFileAppender.Append(LoggingEvent[] loggingEvents)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.AllInstances.CombinePathStringString">
            <summary>Establecer el shim de RollingFileAppender.CombinePath(String path1, String path2)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.AllInstances.CountDirectionGet">
            <summary>Establecer el shim de RollingFileAppender.get_CountDirection()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.AllInstances.CountDirectionSetInt32">
            <summary>Establecer el shim de RollingFileAppender.set_CountDirection(Int32 value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.AllInstances.DatePatternGet">
            <summary>Establecer el shim de RollingFileAppender.get_DatePattern()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.AllInstances.DatePatternSetString">
            <summary>Establecer el shim de RollingFileAppender.set_DatePattern(String value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.AllInstances.DateTimeStrategyGet">
            <summary>Establecer el shim de RollingFileAppender.get_DateTimeStrategy()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.AllInstances.DateTimeStrategySetRollingFileAppenderIDateTime">
            <summary>Establecer el shim de RollingFileAppender.set_DateTimeStrategy(IDateTime value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.AllInstances.DeleteFileString">
            <summary>Establecer el shim de RollingFileAppender.DeleteFile(String fileName)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.AllInstances.DetermineCurSizeRollBackups">
            <summary>Establecer el shim de RollingFileAppender.DetermineCurSizeRollBackups()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.AllInstances.ExistingInit">
            <summary>Establecer el shim de RollingFileAppender.ExistingInit()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.AllInstances.FileExistsString">
            <summary>Establecer el shim de RollingFileAppender.FileExists(String path)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.AllInstances.GetBackUpIndexString">
            <summary>Establecer el shim de RollingFileAppender.GetBackUpIndex(String curFileName)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.AllInstances.GetExistingFilesString">
            <summary>Establecer el shim de RollingFileAppender.GetExistingFiles(String baseFilePath)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.AllInstances.GetNextOutputFileNameString">
            <summary>Establecer el shim de RollingFileAppender.GetNextOutputFileName(String fileName)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.AllInstances.GetWildcardPatternForFileString">
            <summary>Establecer el shim de RollingFileAppender.GetWildcardPatternForFile(String baseFileName)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.AllInstances.InitializeFromOneFileStringString">
            <summary>Establecer el shim de RollingFileAppender.InitializeFromOneFile(String baseFile, String curFileName)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.AllInstances.InitializeRollBackupsStringArrayList">
            <summary>Establecer el shim de RollingFileAppender.InitializeRollBackups(String baseFile, ArrayList arrayFiles)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.AllInstances.MaxFileSizeGet">
            <summary>Establecer el shim de RollingFileAppender.get_MaxFileSize()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.AllInstances.MaxFileSizeSetInt64">
            <summary>Establecer el shim de RollingFileAppender.set_MaxFileSize(Int64 value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.AllInstances.MaxSizeRollBackupsGet">
            <summary>Establecer el shim de RollingFileAppender.get_MaxSizeRollBackups()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.AllInstances.MaxSizeRollBackupsSetInt32">
            <summary>Establecer el shim de RollingFileAppender.set_MaxSizeRollBackups(Int32 value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.AllInstances.MaximumFileSizeGet">
            <summary>Establecer el shim de RollingFileAppender.get_MaximumFileSize()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.AllInstances.MaximumFileSizeSetString">
            <summary>Establecer el shim de RollingFileAppender.set_MaximumFileSize(String value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.AllInstances.OpenFileStringBoolean">
            <summary>Establecer el shim de RollingFileAppender.OpenFile(String fileName, Boolean append)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.AllInstances.PreserveLogFileNameExtensionGet">
            <summary>Establecer el shim de RollingFileAppender.get_PreserveLogFileNameExtension()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.AllInstances.PreserveLogFileNameExtensionSetBoolean">
            <summary>Establecer el shim de RollingFileAppender.set_PreserveLogFileNameExtension(Boolean value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.AllInstances.RollFileStringString">
            <summary>Establecer el shim de RollingFileAppender.RollFile(String fromFile, String toFile)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.AllInstances.RollOverIfDateBoundaryCrossing">
            <summary>Establecer el shim de RollingFileAppender.RollOverIfDateBoundaryCrossing()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.AllInstances.RollOverRenameFilesString">
            <summary>Establecer el shim de RollingFileAppender.RollOverRenameFiles(String baseFileName)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.AllInstances.RollOverSize">
            <summary>Establecer el shim de RollingFileAppender.RollOverSize()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.AllInstances.RollOverTimeBoolean">
            <summary>Establecer el shim de RollingFileAppender.RollOverTime(Boolean fileIsOpen)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.AllInstances.RollingStyleGet">
            <summary>Establecer el shim de RollingFileAppender.get_RollingStyle()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.AllInstances.RollingStyleSetRollingFileAppenderRollingMode">
            <summary>Establecer el shim de RollingFileAppender.set_RollingStyle(RollingMode value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.AllInstances.SetQWForFilesTextWriter">
            <summary>Establecer el shim de RollingFileAppender.SetQWForFiles(TextWriter writer)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.AllInstances.StaticLogFileNameGet">
            <summary>Establecer el shim de RollingFileAppender.get_StaticLogFileName()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.AllInstances.StaticLogFileNameSetBoolean">
            <summary>Establecer el shim de RollingFileAppender.set_StaticLogFileName(Boolean value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.AppendLoggingEvent">
            <summary>Establecer el shim de RollingFileAppender.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.AppendLoggingEventArray">
            <summary>Establecer el shim de RollingFileAppender.Append(LoggingEvent[] loggingEvents)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimRollingFileAppender.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimRollingFileAppender.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimRollingFileAppender.Bind(log4net.Appender.IAppender)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimRollingFileAppender.Bind(log4net.Appender.IBulkAppender)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimRollingFileAppender.Bind(log4net.Appender.IFlushable)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimRollingFileAppender.Bind(log4net.Core.IOptionHandler)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.CombinePathStringString">
            <summary>Establecer el shim de RollingFileAppender.CombinePath(String path1, String path2)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.Constructor">
            <summary>Establecer el shim de RollingFileAppender.RollingFileAppender()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.CountDirectionGet">
            <summary>Establecer el shim de RollingFileAppender.get_CountDirection()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.CountDirectionSetInt32">
            <summary>Establecer el shim de RollingFileAppender.set_CountDirection(Int32 value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.DatePatternGet">
            <summary>Establecer el shim de RollingFileAppender.get_DatePattern()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.DatePatternSetString">
            <summary>Establecer el shim de RollingFileAppender.set_DatePattern(String value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.DateTimeStrategyGet">
            <summary>Establecer el shim de RollingFileAppender.get_DateTimeStrategy()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.DateTimeStrategySetRollingFileAppenderIDateTime">
            <summary>Establecer el shim de RollingFileAppender.set_DateTimeStrategy(IDateTime value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.DeleteFileString">
            <summary>Establecer el shim de RollingFileAppender.DeleteFile(String fileName)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.DetermineCurSizeRollBackups">
            <summary>Establecer el shim de RollingFileAppender.DetermineCurSizeRollBackups()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.ExistingInit">
            <summary>Establecer el shim de RollingFileAppender.ExistingInit()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.FileExistsString">
            <summary>Establecer el shim de RollingFileAppender.FileExists(String path)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.GetBackUpIndexString">
            <summary>Establecer el shim de RollingFileAppender.GetBackUpIndex(String curFileName)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.GetExistingFilesString">
            <summary>Establecer el shim de RollingFileAppender.GetExistingFiles(String baseFilePath)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.GetNextOutputFileNameString">
            <summary>Establecer el shim de RollingFileAppender.GetNextOutputFileName(String fileName)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.GetWildcardPatternForFileString">
            <summary>Establecer el shim de RollingFileAppender.GetWildcardPatternForFile(String baseFileName)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.InitializeFromOneFileStringString">
            <summary>Establecer el shim de RollingFileAppender.InitializeFromOneFile(String baseFile, String curFileName)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.InitializeRollBackupsStringArrayList">
            <summary>Establecer el shim de RollingFileAppender.InitializeRollBackups(String baseFile, ArrayList arrayFiles)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.MaxFileSizeGet">
            <summary>Establecer el shim de RollingFileAppender.get_MaxFileSize()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.MaxFileSizeSetInt64">
            <summary>Establecer el shim de RollingFileAppender.set_MaxFileSize(Int64 value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.MaxSizeRollBackupsGet">
            <summary>Establecer el shim de RollingFileAppender.get_MaxSizeRollBackups()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.MaxSizeRollBackupsSetInt32">
            <summary>Establecer el shim de RollingFileAppender.set_MaxSizeRollBackups(Int32 value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.MaximumFileSizeGet">
            <summary>Establecer el shim de RollingFileAppender.get_MaximumFileSize()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.MaximumFileSizeSetString">
            <summary>Establecer el shim de RollingFileAppender.set_MaximumFileSize(String value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.OpenFileStringBoolean">
            <summary>Establecer el shim de RollingFileAppender.OpenFile(String fileName, Boolean append)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.PreserveLogFileNameExtensionGet">
            <summary>Establecer el shim de RollingFileAppender.get_PreserveLogFileNameExtension()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.PreserveLogFileNameExtensionSetBoolean">
            <summary>Establecer el shim de RollingFileAppender.set_PreserveLogFileNameExtension(Boolean value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.RollFileStringString">
            <summary>Establecer el shim de RollingFileAppender.RollFile(String fromFile, String toFile)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.RollOverIfDateBoundaryCrossing">
            <summary>Establecer el shim de RollingFileAppender.RollOverIfDateBoundaryCrossing()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.RollOverRenameFilesString">
            <summary>Establecer el shim de RollingFileAppender.RollOverRenameFiles(String baseFileName)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.RollOverSize">
            <summary>Establecer el shim de RollingFileAppender.RollOverSize()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.RollOverTimeBoolean">
            <summary>Establecer el shim de RollingFileAppender.RollOverTime(Boolean fileIsOpen)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.RollingStyleGet">
            <summary>Establecer el shim de RollingFileAppender.get_RollingStyle()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.RollingStyleSetRollingFileAppenderRollingMode">
            <summary>Establecer el shim de RollingFileAppender.set_RollingStyle(RollingMode value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.SetQWForFilesTextWriter">
            <summary>Establecer el shim de RollingFileAppender.SetQWForFiles(TextWriter writer)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.StaticConstructor">
            <summary>Establecer el shim de RollingFileAppender.RollingFileAppender()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.StaticLogFileNameGet">
            <summary>Establecer el shim de RollingFileAppender.get_StaticLogFileName()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimRollingFileAppender.StaticLogFileNameSetBoolean">
            <summary>Establecer el shim de RollingFileAppender.set_StaticLogFileName(Boolean value)</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimSmtpAppender">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Appender.SmtpAppender</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimSmtpAppender.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimSmtpAppender.#ctor(log4net.Appender.SmtpAppender)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimSmtpAppender.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.AllInstances.AuthenticationGet">
            <summary>Establecer el shim de SmtpAppender.get_Authentication()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.AllInstances.AuthenticationSetSmtpAppenderSmtpAuthentication">
            <summary>Establecer el shim de SmtpAppender.set_Authentication(SmtpAuthentication value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.AllInstances.BccGet">
            <summary>Establecer el shim de SmtpAppender.get_Bcc()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.AllInstances.BccSetString">
            <summary>Establecer el shim de SmtpAppender.set_Bcc(String value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.AllInstances.CcGet">
            <summary>Establecer el shim de SmtpAppender.get_Cc()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.AllInstances.CcSetString">
            <summary>Establecer el shim de SmtpAppender.set_Cc(String value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.AllInstances.EnableSslGet">
            <summary>Establecer el shim de SmtpAppender.get_EnableSsl()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.AllInstances.EnableSslSetBoolean">
            <summary>Establecer el shim de SmtpAppender.set_EnableSsl(Boolean value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.AllInstances.FromGet">
            <summary>Establecer el shim de SmtpAppender.get_From()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.AllInstances.FromSetString">
            <summary>Establecer el shim de SmtpAppender.set_From(String value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.AllInstances.LocationInfoGet">
            <summary>Establecer el shim de SmtpAppender.get_LocationInfo()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.AllInstances.LocationInfoSetBoolean">
            <summary>Establecer el shim de SmtpAppender.set_LocationInfo(Boolean value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.AllInstances.PasswordGet">
            <summary>Establecer el shim de SmtpAppender.get_Password()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.AllInstances.PasswordSetString">
            <summary>Establecer el shim de SmtpAppender.set_Password(String value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.AllInstances.PortGet">
            <summary>Establecer el shim de SmtpAppender.get_Port()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.AllInstances.PortSetInt32">
            <summary>Establecer el shim de SmtpAppender.set_Port(Int32 value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.AllInstances.PriorityGet">
            <summary>Establecer el shim de SmtpAppender.get_Priority()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.AllInstances.PrioritySetMailPriority">
            <summary>Establecer el shim de SmtpAppender.set_Priority(MailPriority value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.AllInstances.ReplyToGet">
            <summary>Establecer el shim de SmtpAppender.get_ReplyTo()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.AllInstances.ReplyToSetString">
            <summary>Establecer el shim de SmtpAppender.set_ReplyTo(String value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.AllInstances.RequiresLayoutGet">
            <summary>Establecer el shim de SmtpAppender.get_RequiresLayout()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.AllInstances.SendBufferLoggingEventArray">
            <summary>Establecer el shim de SmtpAppender.SendBuffer(LoggingEvent[] events)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.AllInstances.SendEmailString">
            <summary>Establecer el shim de SmtpAppender.SendEmail(String messageBody)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.AllInstances.SmtpHostGet">
            <summary>Establecer el shim de SmtpAppender.get_SmtpHost()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.AllInstances.SmtpHostSetString">
            <summary>Establecer el shim de SmtpAppender.set_SmtpHost(String value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.AllInstances.SubjectGet">
            <summary>Establecer el shim de SmtpAppender.get_Subject()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.AllInstances.SubjectSetString">
            <summary>Establecer el shim de SmtpAppender.set_Subject(String value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.AllInstances.ToGet">
            <summary>Establecer el shim de SmtpAppender.get_To()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.AllInstances.ToSetString">
            <summary>Establecer el shim de SmtpAppender.set_To(String value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.AllInstances.UsernameGet">
            <summary>Establecer el shim de SmtpAppender.get_Username()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.AllInstances.UsernameSetString">
            <summary>Establecer el shim de SmtpAppender.set_Username(String value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.AuthenticationGet">
            <summary>Establecer el shim de SmtpAppender.get_Authentication()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.AuthenticationSetSmtpAppenderSmtpAuthentication">
            <summary>Establecer el shim de SmtpAppender.set_Authentication(SmtpAuthentication value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.BccGet">
            <summary>Establecer el shim de SmtpAppender.get_Bcc()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.BccSetString">
            <summary>Establecer el shim de SmtpAppender.set_Bcc(String value)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimSmtpAppender.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimSmtpAppender.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimSmtpAppender.Bind(log4net.Appender.IAppender)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimSmtpAppender.Bind(log4net.Appender.IBulkAppender)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimSmtpAppender.Bind(log4net.Appender.IFlushable)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimSmtpAppender.Bind(log4net.Core.IOptionHandler)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.CcGet">
            <summary>Establecer el shim de SmtpAppender.get_Cc()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.CcSetString">
            <summary>Establecer el shim de SmtpAppender.set_Cc(String value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.Constructor">
            <summary>Establecer el shim de SmtpAppender.SmtpAppender()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.EnableSslGet">
            <summary>Establecer el shim de SmtpAppender.get_EnableSsl()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.EnableSslSetBoolean">
            <summary>Establecer el shim de SmtpAppender.set_EnableSsl(Boolean value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.FromGet">
            <summary>Establecer el shim de SmtpAppender.get_From()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.FromSetString">
            <summary>Establecer el shim de SmtpAppender.set_From(String value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.LocationInfoGet">
            <summary>Establecer el shim de SmtpAppender.get_LocationInfo()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.LocationInfoSetBoolean">
            <summary>Establecer el shim de SmtpAppender.set_LocationInfo(Boolean value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.MaybeTrimSeparatorsString">
            <summary>Establecer el shim de SmtpAppender.MaybeTrimSeparators(String s)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.PasswordGet">
            <summary>Establecer el shim de SmtpAppender.get_Password()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.PasswordSetString">
            <summary>Establecer el shim de SmtpAppender.set_Password(String value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.PortGet">
            <summary>Establecer el shim de SmtpAppender.get_Port()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.PortSetInt32">
            <summary>Establecer el shim de SmtpAppender.set_Port(Int32 value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.PriorityGet">
            <summary>Establecer el shim de SmtpAppender.get_Priority()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.PrioritySetMailPriority">
            <summary>Establecer el shim de SmtpAppender.set_Priority(MailPriority value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.ReplyToGet">
            <summary>Establecer el shim de SmtpAppender.get_ReplyTo()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.ReplyToSetString">
            <summary>Establecer el shim de SmtpAppender.set_ReplyTo(String value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.RequiresLayoutGet">
            <summary>Establecer el shim de SmtpAppender.get_RequiresLayout()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.SendBufferLoggingEventArray">
            <summary>Establecer el shim de SmtpAppender.SendBuffer(LoggingEvent[] events)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.SendEmailString">
            <summary>Establecer el shim de SmtpAppender.SendEmail(String messageBody)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.SmtpHostGet">
            <summary>Establecer el shim de SmtpAppender.get_SmtpHost()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.SmtpHostSetString">
            <summary>Establecer el shim de SmtpAppender.set_SmtpHost(String value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.StaticConstructor">
            <summary>Establecer el shim de SmtpAppender.SmtpAppender()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.SubjectGet">
            <summary>Establecer el shim de SmtpAppender.get_Subject()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.SubjectSetString">
            <summary>Establecer el shim de SmtpAppender.set_Subject(String value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.ToGet">
            <summary>Establecer el shim de SmtpAppender.get_To()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.ToSetString">
            <summary>Establecer el shim de SmtpAppender.set_To(String value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.UsernameGet">
            <summary>Establecer el shim de SmtpAppender.get_Username()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpAppender.UsernameSetString">
            <summary>Establecer el shim de SmtpAppender.set_Username(String value)</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimSmtpPickupDirAppender">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Appender.SmtpPickupDirAppender</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimSmtpPickupDirAppender.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimSmtpPickupDirAppender.#ctor(log4net.Appender.SmtpPickupDirAppender)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpPickupDirAppender.ActivateOptions">
            <summary>Establecer el shim de SmtpPickupDirAppender.ActivateOptions()</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimSmtpPickupDirAppender.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpPickupDirAppender.AllInstances.ActivateOptions">
            <summary>Establecer el shim de SmtpPickupDirAppender.ActivateOptions()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpPickupDirAppender.AllInstances.FileExtensionGet">
            <summary>Establecer el shim de SmtpPickupDirAppender.get_FileExtension()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpPickupDirAppender.AllInstances.FileExtensionSetString">
            <summary>Establecer el shim de SmtpPickupDirAppender.set_FileExtension(String value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpPickupDirAppender.AllInstances.FromGet">
            <summary>Establecer el shim de SmtpPickupDirAppender.get_From()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpPickupDirAppender.AllInstances.FromSetString">
            <summary>Establecer el shim de SmtpPickupDirAppender.set_From(String value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpPickupDirAppender.AllInstances.PickupDirGet">
            <summary>Establecer el shim de SmtpPickupDirAppender.get_PickupDir()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpPickupDirAppender.AllInstances.PickupDirSetString">
            <summary>Establecer el shim de SmtpPickupDirAppender.set_PickupDir(String value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpPickupDirAppender.AllInstances.RequiresLayoutGet">
            <summary>Establecer el shim de SmtpPickupDirAppender.get_RequiresLayout()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpPickupDirAppender.AllInstances.SecurityContextGet">
            <summary>Establecer el shim de SmtpPickupDirAppender.get_SecurityContext()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpPickupDirAppender.AllInstances.SecurityContextSetSecurityContext">
            <summary>Establecer el shim de SmtpPickupDirAppender.set_SecurityContext(SecurityContext value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpPickupDirAppender.AllInstances.SendBufferLoggingEventArray">
            <summary>Establecer el shim de SmtpPickupDirAppender.SendBuffer(LoggingEvent[] events)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpPickupDirAppender.AllInstances.SubjectGet">
            <summary>Establecer el shim de SmtpPickupDirAppender.get_Subject()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpPickupDirAppender.AllInstances.SubjectSetString">
            <summary>Establecer el shim de SmtpPickupDirAppender.set_Subject(String value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpPickupDirAppender.AllInstances.ToGet">
            <summary>Establecer el shim de SmtpPickupDirAppender.get_To()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpPickupDirAppender.AllInstances.ToSetString">
            <summary>Establecer el shim de SmtpPickupDirAppender.set_To(String value)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimSmtpPickupDirAppender.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimSmtpPickupDirAppender.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpPickupDirAppender.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimSmtpPickupDirAppender.Bind(log4net.Appender.IAppender)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimSmtpPickupDirAppender.Bind(log4net.Appender.IBulkAppender)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimSmtpPickupDirAppender.Bind(log4net.Appender.IFlushable)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimSmtpPickupDirAppender.Bind(log4net.Core.IOptionHandler)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpPickupDirAppender.Constructor">
            <summary>Establecer el shim de SmtpPickupDirAppender.SmtpPickupDirAppender()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpPickupDirAppender.ConvertToFullPathString">
            <summary>Establecer el shim de SmtpPickupDirAppender.ConvertToFullPath(String path)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpPickupDirAppender.FileExtensionGet">
            <summary>Establecer el shim de SmtpPickupDirAppender.get_FileExtension()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpPickupDirAppender.FileExtensionSetString">
            <summary>Establecer el shim de SmtpPickupDirAppender.set_FileExtension(String value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpPickupDirAppender.FromGet">
            <summary>Establecer el shim de SmtpPickupDirAppender.get_From()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpPickupDirAppender.FromSetString">
            <summary>Establecer el shim de SmtpPickupDirAppender.set_From(String value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpPickupDirAppender.PickupDirGet">
            <summary>Establecer el shim de SmtpPickupDirAppender.get_PickupDir()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpPickupDirAppender.PickupDirSetString">
            <summary>Establecer el shim de SmtpPickupDirAppender.set_PickupDir(String value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpPickupDirAppender.RequiresLayoutGet">
            <summary>Establecer el shim de SmtpPickupDirAppender.get_RequiresLayout()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpPickupDirAppender.SecurityContextGet">
            <summary>Establecer el shim de SmtpPickupDirAppender.get_SecurityContext()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpPickupDirAppender.SecurityContextSetSecurityContext">
            <summary>Establecer el shim de SmtpPickupDirAppender.set_SecurityContext(SecurityContext value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpPickupDirAppender.SendBufferLoggingEventArray">
            <summary>Establecer el shim de SmtpPickupDirAppender.SendBuffer(LoggingEvent[] events)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpPickupDirAppender.SubjectGet">
            <summary>Establecer el shim de SmtpPickupDirAppender.get_Subject()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpPickupDirAppender.SubjectSetString">
            <summary>Establecer el shim de SmtpPickupDirAppender.set_Subject(String value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpPickupDirAppender.ToGet">
            <summary>Establecer el shim de SmtpPickupDirAppender.get_To()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimSmtpPickupDirAppender.ToSetString">
            <summary>Establecer el shim de SmtpPickupDirAppender.set_To(String value)</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimTelnetAppender">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Appender.TelnetAppender</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimTelnetAppender.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimTelnetAppender.#ctor(log4net.Appender.TelnetAppender)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTelnetAppender.ActivateOptions">
            <summary>Establecer el shim de TelnetAppender.ActivateOptions()</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimTelnetAppender.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTelnetAppender.AllInstances.ActivateOptions">
            <summary>Establecer el shim de TelnetAppender.ActivateOptions()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTelnetAppender.AllInstances.AppendLoggingEvent">
            <summary>Establecer el shim de TelnetAppender.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTelnetAppender.AllInstances.OnClose">
            <summary>Establecer el shim de TelnetAppender.OnClose()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTelnetAppender.AllInstances.PortGet">
            <summary>Establecer el shim de TelnetAppender.get_Port()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTelnetAppender.AllInstances.PortSetInt32">
            <summary>Establecer el shim de TelnetAppender.set_Port(Int32 value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTelnetAppender.AllInstances.RequiresLayoutGet">
            <summary>Establecer el shim de TelnetAppender.get_RequiresLayout()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTelnetAppender.AppendLoggingEvent">
            <summary>Establecer el shim de TelnetAppender.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimTelnetAppender.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimTelnetAppender.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTelnetAppender.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimTelnetAppender.Bind(log4net.Appender.IAppender)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimTelnetAppender.Bind(log4net.Appender.IBulkAppender)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimTelnetAppender.Bind(log4net.Appender.IFlushable)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimTelnetAppender.Bind(log4net.Core.IOptionHandler)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTelnetAppender.Constructor">
            <summary>Establecer el shim de TelnetAppender.TelnetAppender()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTelnetAppender.OnClose">
            <summary>Establecer el shim de TelnetAppender.OnClose()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTelnetAppender.PortGet">
            <summary>Establecer el shim de TelnetAppender.get_Port()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTelnetAppender.PortSetInt32">
            <summary>Establecer el shim de TelnetAppender.set_Port(Int32 value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTelnetAppender.RequiresLayoutGet">
            <summary>Establecer el shim de TelnetAppender.get_RequiresLayout()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTelnetAppender.StaticConstructor">
            <summary>Establecer el shim de TelnetAppender.TelnetAppender()</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimTextWriterAppender">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Appender.TextWriterAppender</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimTextWriterAppender.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimTextWriterAppender.#ctor(log4net.Appender.TextWriterAppender)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimTextWriterAppender.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.AllInstances.AppendLoggingEvent">
            <summary>Establecer el shim de TextWriterAppender.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.AllInstances.AppendLoggingEventArray">
            <summary>Establecer el shim de TextWriterAppender.Append(LoggingEvent[] loggingEvents)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.AllInstances.CloseWriter">
            <summary>Establecer el shim de TextWriterAppender.CloseWriter()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.AllInstances.ErrorHandlerGet">
            <summary>Establecer el shim de TextWriterAppender.get_ErrorHandler()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.AllInstances.ErrorHandlerSetIErrorHandler">
            <summary>Establecer el shim de TextWriterAppender.set_ErrorHandler(IErrorHandler value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.AllInstances.FlushInt32">
            <summary>Establecer el shim de TextWriterAppender.Flush(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.AllInstances.ImmediateFlushGet">
            <summary>Establecer el shim de TextWriterAppender.get_ImmediateFlush()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.AllInstances.ImmediateFlushSetBoolean">
            <summary>Establecer el shim de TextWriterAppender.set_ImmediateFlush(Boolean value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.AllInstances.OnClose">
            <summary>Establecer el shim de TextWriterAppender.OnClose()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.AllInstances.PreAppendCheck">
            <summary>Establecer el shim de TextWriterAppender.PreAppendCheck()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.AllInstances.PrepareWriter">
            <summary>Establecer el shim de TextWriterAppender.PrepareWriter()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.AllInstances.QuietWriterGet">
            <summary>Establecer el shim de TextWriterAppender.get_QuietWriter()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.AllInstances.QuietWriterSetQuietTextWriter">
            <summary>Establecer el shim de TextWriterAppender.set_QuietWriter(QuietTextWriter value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.AllInstances.RequiresLayoutGet">
            <summary>Establecer el shim de TextWriterAppender.get_RequiresLayout()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.AllInstances.Reset">
            <summary>Establecer el shim de TextWriterAppender.Reset()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.AllInstances.WriteFooter">
            <summary>Establecer el shim de TextWriterAppender.WriteFooter()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.AllInstances.WriteFooterAndCloseWriter">
            <summary>Establecer el shim de TextWriterAppender.WriteFooterAndCloseWriter()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.AllInstances.WriteHeader">
            <summary>Establecer el shim de TextWriterAppender.WriteHeader()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.AllInstances.WriterGet">
            <summary>Establecer el shim de TextWriterAppender.get_Writer()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.AllInstances.WriterSetTextWriter">
            <summary>Establecer el shim de TextWriterAppender.set_Writer(TextWriter value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.AppendLoggingEvent">
            <summary>Establecer el shim de TextWriterAppender.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.AppendLoggingEventArray">
            <summary>Establecer el shim de TextWriterAppender.Append(LoggingEvent[] loggingEvents)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimTextWriterAppender.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimTextWriterAppender.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimTextWriterAppender.Bind(log4net.Appender.IAppender)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimTextWriterAppender.Bind(log4net.Appender.IBulkAppender)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimTextWriterAppender.Bind(log4net.Appender.IFlushable)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimTextWriterAppender.Bind(log4net.Core.IOptionHandler)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.CloseWriter">
            <summary>Establecer el shim de TextWriterAppender.CloseWriter()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.Constructor">
            <summary>Establecer el shim de TextWriterAppender.TextWriterAppender()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.ConstructorILayoutStream">
            <summary>Establecer el shim de TextWriterAppender.TextWriterAppender(ILayout layout, Stream os)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.ConstructorILayoutTextWriter">
            <summary>Establecer el shim de TextWriterAppender.TextWriterAppender(ILayout layout, TextWriter writer)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.ErrorHandlerGet">
            <summary>Establecer el shim de TextWriterAppender.get_ErrorHandler()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.ErrorHandlerSetIErrorHandler">
            <summary>Establecer el shim de TextWriterAppender.set_ErrorHandler(IErrorHandler value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.FlushInt32">
            <summary>Establecer el shim de TextWriterAppender.Flush(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.ImmediateFlushGet">
            <summary>Establecer el shim de TextWriterAppender.get_ImmediateFlush()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.ImmediateFlushSetBoolean">
            <summary>Establecer el shim de TextWriterAppender.set_ImmediateFlush(Boolean value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.OnClose">
            <summary>Establecer el shim de TextWriterAppender.OnClose()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.PreAppendCheck">
            <summary>Establecer el shim de TextWriterAppender.PreAppendCheck()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.PrepareWriter">
            <summary>Establecer el shim de TextWriterAppender.PrepareWriter()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.QuietWriterGet">
            <summary>Establecer el shim de TextWriterAppender.get_QuietWriter()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.QuietWriterSetQuietTextWriter">
            <summary>Establecer el shim de TextWriterAppender.set_QuietWriter(QuietTextWriter value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.RequiresLayoutGet">
            <summary>Establecer el shim de TextWriterAppender.get_RequiresLayout()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.Reset">
            <summary>Establecer el shim de TextWriterAppender.Reset()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.StaticConstructor">
            <summary>Establecer el shim de TextWriterAppender.TextWriterAppender()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.WriteFooter">
            <summary>Establecer el shim de TextWriterAppender.WriteFooter()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.WriteFooterAndCloseWriter">
            <summary>Establecer el shim de TextWriterAppender.WriteFooterAndCloseWriter()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.WriteHeader">
            <summary>Establecer el shim de TextWriterAppender.WriteHeader()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.WriterGet">
            <summary>Establecer el shim de TextWriterAppender.get_Writer()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTextWriterAppender.WriterSetTextWriter">
            <summary>Establecer el shim de TextWriterAppender.set_Writer(TextWriter value)</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimTraceAppender">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Appender.TraceAppender</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimTraceAppender.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimTraceAppender.#ctor(log4net.Appender.TraceAppender)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimTraceAppender.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTraceAppender.AllInstances.AppendLoggingEvent">
            <summary>Establecer el shim de TraceAppender.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTraceAppender.AllInstances.CategoryGet">
            <summary>Establecer el shim de TraceAppender.get_Category()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTraceAppender.AllInstances.CategorySetPatternLayout">
            <summary>Establecer el shim de TraceAppender.set_Category(PatternLayout value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTraceAppender.AllInstances.FlushInt32">
            <summary>Establecer el shim de TraceAppender.Flush(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTraceAppender.AllInstances.ImmediateFlushGet">
            <summary>Establecer el shim de TraceAppender.get_ImmediateFlush()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTraceAppender.AllInstances.ImmediateFlushSetBoolean">
            <summary>Establecer el shim de TraceAppender.set_ImmediateFlush(Boolean value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTraceAppender.AllInstances.RequiresLayoutGet">
            <summary>Establecer el shim de TraceAppender.get_RequiresLayout()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTraceAppender.AppendLoggingEvent">
            <summary>Establecer el shim de TraceAppender.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimTraceAppender.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimTraceAppender.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTraceAppender.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimTraceAppender.Bind(log4net.Appender.IAppender)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimTraceAppender.Bind(log4net.Appender.IBulkAppender)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimTraceAppender.Bind(log4net.Appender.IFlushable)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimTraceAppender.Bind(log4net.Core.IOptionHandler)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTraceAppender.CategoryGet">
            <summary>Establecer el shim de TraceAppender.get_Category()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTraceAppender.CategorySetPatternLayout">
            <summary>Establecer el shim de TraceAppender.set_Category(PatternLayout value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTraceAppender.Constructor">
            <summary>Establecer el shim de TraceAppender.TraceAppender()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTraceAppender.ConstructorILayout">
            <summary>Establecer el shim de TraceAppender.TraceAppender(ILayout layout)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTraceAppender.FlushInt32">
            <summary>Establecer el shim de TraceAppender.Flush(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTraceAppender.ImmediateFlushGet">
            <summary>Establecer el shim de TraceAppender.get_ImmediateFlush()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTraceAppender.ImmediateFlushSetBoolean">
            <summary>Establecer el shim de TraceAppender.set_ImmediateFlush(Boolean value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimTraceAppender.RequiresLayoutGet">
            <summary>Establecer el shim de TraceAppender.get_RequiresLayout()</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimUdpAppender">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Appender.UdpAppender</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimUdpAppender.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimUdpAppender.#ctor(log4net.Appender.UdpAppender)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimUdpAppender.ActivateOptions">
            <summary>Establecer el shim de UdpAppender.ActivateOptions()</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.ShimUdpAppender.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimUdpAppender.AllInstances.ActivateOptions">
            <summary>Establecer el shim de UdpAppender.ActivateOptions()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimUdpAppender.AllInstances.AppendLoggingEvent">
            <summary>Establecer el shim de UdpAppender.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimUdpAppender.AllInstances.ClientGet">
            <summary>Establecer el shim de UdpAppender.get_Client()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimUdpAppender.AllInstances.ClientSetUdpClient">
            <summary>Establecer el shim de UdpAppender.set_Client(UdpClient value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimUdpAppender.AllInstances.InitializeClientConnection">
            <summary>Establecer el shim de UdpAppender.InitializeClientConnection()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimUdpAppender.AllInstances.LocalPortGet">
            <summary>Establecer el shim de UdpAppender.get_LocalPort()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimUdpAppender.AllInstances.LocalPortSetInt32">
            <summary>Establecer el shim de UdpAppender.set_LocalPort(Int32 value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimUdpAppender.AllInstances.OnClose">
            <summary>Establecer el shim de UdpAppender.OnClose()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimUdpAppender.AllInstances.RemoteAddressGet">
            <summary>Establecer el shim de UdpAppender.get_RemoteAddress()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimUdpAppender.AllInstances.RemoteAddressSetIPAddress">
            <summary>Establecer el shim de UdpAppender.set_RemoteAddress(IPAddress value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimUdpAppender.AllInstances.RemoteEndPointGet">
            <summary>Establecer el shim de UdpAppender.get_RemoteEndPoint()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimUdpAppender.AllInstances.RemoteEndPointSetIPEndPoint">
            <summary>Establecer el shim de UdpAppender.set_RemoteEndPoint(IPEndPoint value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimUdpAppender.AllInstances.RemotePortGet">
            <summary>Establecer el shim de UdpAppender.get_RemotePort()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimUdpAppender.AllInstances.RemotePortSetInt32">
            <summary>Establecer el shim de UdpAppender.set_RemotePort(Int32 value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimUdpAppender.AllInstances.RequiresLayoutGet">
            <summary>Establecer el shim de UdpAppender.get_RequiresLayout()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimUdpAppender.AppendLoggingEvent">
            <summary>Establecer el shim de UdpAppender.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimUdpAppender.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimUdpAppender.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimUdpAppender.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimUdpAppender.Bind(log4net.Appender.IAppender)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimUdpAppender.Bind(log4net.Appender.IBulkAppender)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimUdpAppender.Bind(log4net.Appender.IFlushable)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.ShimUdpAppender.Bind(log4net.Core.IOptionHandler)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimUdpAppender.ClientGet">
            <summary>Establecer el shim de UdpAppender.get_Client()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimUdpAppender.ClientSetUdpClient">
            <summary>Establecer el shim de UdpAppender.set_Client(UdpClient value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimUdpAppender.Constructor">
            <summary>Establecer el shim de UdpAppender.UdpAppender()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimUdpAppender.InitializeClientConnection">
            <summary>Establecer el shim de UdpAppender.InitializeClientConnection()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimUdpAppender.LocalPortGet">
            <summary>Establecer el shim de UdpAppender.get_LocalPort()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimUdpAppender.LocalPortSetInt32">
            <summary>Establecer el shim de UdpAppender.set_LocalPort(Int32 value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimUdpAppender.OnClose">
            <summary>Establecer el shim de UdpAppender.OnClose()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimUdpAppender.RemoteAddressGet">
            <summary>Establecer el shim de UdpAppender.get_RemoteAddress()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimUdpAppender.RemoteAddressSetIPAddress">
            <summary>Establecer el shim de UdpAppender.set_RemoteAddress(IPAddress value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimUdpAppender.RemoteEndPointGet">
            <summary>Establecer el shim de UdpAppender.get_RemoteEndPoint()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimUdpAppender.RemoteEndPointSetIPEndPoint">
            <summary>Establecer el shim de UdpAppender.set_RemoteEndPoint(IPEndPoint value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimUdpAppender.RemotePortGet">
            <summary>Establecer el shim de UdpAppender.get_RemotePort()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimUdpAppender.RemotePortSetInt32">
            <summary>Establecer el shim de UdpAppender.set_RemotePort(Int32 value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.ShimUdpAppender.RequiresLayoutGet">
            <summary>Establecer el shim de UdpAppender.get_RequiresLayout()</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.StubAdoNetAppender">
            <summary>Tipo stub de log4net.Appender.AdoNetAppender</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAdoNetAppender.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAdoNetAppender.ActivateOptions">
            <summary>Establecer el stub de AdoNetAppender.ActivateOptions()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAdoNetAppender.ActivateOptions01">
            <summary>Establecer el stub de AdoNetAppender.ActivateOptions()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAdoNetAppender.AddFilter(log4net.Filter.IFilter)">
            <summary>Establecer el stub de AppenderSkeleton.AddFilter(IFilter filter)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAdoNetAppender.AddFilterIFilter">
            <summary>Establecer el stub de AppenderSkeleton.AddFilter(IFilter filter)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAdoNetAppender.Append(log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de BufferingAppenderSkeleton.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAdoNetAppender.Append(log4net.Core.LoggingEvent[])">
            <summary>Establecer el stub de AppenderSkeleton.Append(LoggingEvent[] loggingEvents)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAdoNetAppender.AppendLoggingEvent">
            <summary>Establecer el stub de BufferingAppenderSkeleton.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAdoNetAppender.AppendLoggingEventArray">
            <summary>Establecer el stub de AppenderSkeleton.Append(LoggingEvent[] loggingEvents)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAdoNetAppender.AttachBackingFieldToErrorHandler">
            <summary>Asocia delegados para emular StubAdoNetAppender.ErrorHandler como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAdoNetAppender.AttachBackingFieldToFix">
            <summary>Asocia delegados para emular StubAdoNetAppender.Fix como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAdoNetAppender.AttachBackingFieldToLayout">
            <summary>Asocia delegados para emular StubAdoNetAppender.Layout como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAdoNetAppender.AttachBackingFieldToOnlyFixPartialEventData">
            <summary>Asocia delegados para emular StubAdoNetAppender.OnlyFixPartialEventData como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAdoNetAppender.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAdoNetAppender.ClearFilters">
            <summary>Establecer el stub de AppenderSkeleton.ClearFilters()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAdoNetAppender.ClearFilters01">
            <summary>Establecer el stub de AppenderSkeleton.ClearFilters()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAdoNetAppender.CreateConnection(System.Type,System.String)">
            <summary>Establecer el stub de AdoNetAppender.CreateConnection(Type connectionType, String connectionString)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAdoNetAppender.CreateConnectionTypeString">
            <summary>Establecer el stub de AdoNetAppender.CreateConnection(Type connectionType, String connectionString)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAdoNetAppender.ErrorHandler">
            <summary>Establecer el stub de AppenderSkeleton.get_ErrorHandler()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAdoNetAppender.ErrorHandlerGet">
            <summary>Establecer el stub de AppenderSkeleton.get_ErrorHandler()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAdoNetAppender.ErrorHandlerSetIErrorHandler">
            <summary>Establecer el stub de AppenderSkeleton.set_ErrorHandler(IErrorHandler value)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAdoNetAppender.FilterEvent(log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAdoNetAppender.FilterEventLoggingEvent">
            <summary>Establecer el stub de AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAdoNetAppender.FilterHead">
            <summary>Establecer el stub de AppenderSkeleton.get_FilterHead()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAdoNetAppender.FilterHeadGet">
            <summary>Establecer el stub de AppenderSkeleton.get_FilterHead()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAdoNetAppender.Fix">
            <summary>Establecer el stub de BufferingAppenderSkeleton.get_Fix()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAdoNetAppender.FixGet">
            <summary>Establecer el stub de BufferingAppenderSkeleton.get_Fix()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAdoNetAppender.FixSetFixFlags">
            <summary>Establecer el stub de BufferingAppenderSkeleton.set_Fix(FixFlags value)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAdoNetAppender.Flush(System.Int32)">
            <summary>Establecer el stub de BufferingAppenderSkeleton.Flush(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAdoNetAppender.Flush">
            <summary>Establecer el stub de BufferingAppenderSkeleton.Flush()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAdoNetAppender.Flush(System.Boolean)">
            <summary>Establecer el stub de BufferingAppenderSkeleton.Flush(Boolean flushLossyBuffer)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAdoNetAppender.Flush01">
            <summary>Establecer el stub de BufferingAppenderSkeleton.Flush()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAdoNetAppender.FlushBoolean">
            <summary>Establecer el stub de BufferingAppenderSkeleton.Flush(Boolean flushLossyBuffer)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAdoNetAppender.FlushInt32">
            <summary>Establecer el stub de BufferingAppenderSkeleton.Flush(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAdoNetAppender.GetLogStatement(log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de AdoNetAppender.GetLogStatement(LoggingEvent logEvent)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAdoNetAppender.GetLogStatementLoggingEvent">
            <summary>Establecer el stub de AdoNetAppender.GetLogStatement(LoggingEvent logEvent)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAdoNetAppender.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubAdoNetAppender</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAdoNetAppender.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAdoNetAppender.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAdoNetAppender.IsAsSevereAsThreshold(log4net.Core.Level)">
            <summary>Establecer el stub de AppenderSkeleton.IsAsSevereAsThreshold(Level level)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAdoNetAppender.IsAsSevereAsThresholdLevel">
            <summary>Establecer el stub de AppenderSkeleton.IsAsSevereAsThreshold(Level level)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAdoNetAppender.Layout">
            <summary>Establecer el stub de AppenderSkeleton.get_Layout()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAdoNetAppender.LayoutGet">
            <summary>Establecer el stub de AppenderSkeleton.get_Layout()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAdoNetAppender.LayoutSetILayout">
            <summary>Establecer el stub de AppenderSkeleton.set_Layout(ILayout value)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAdoNetAppender.OnClose">
            <summary>Establecer el stub de AdoNetAppender.OnClose()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAdoNetAppender.OnClose01">
            <summary>Establecer el stub de AdoNetAppender.OnClose()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAdoNetAppender.OnlyFixPartialEventData">
            <summary>Establecer el stub de BufferingAppenderSkeleton.get_OnlyFixPartialEventData()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAdoNetAppender.OnlyFixPartialEventDataGet">
            <summary>Establecer el stub de BufferingAppenderSkeleton.get_OnlyFixPartialEventData()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAdoNetAppender.OnlyFixPartialEventDataSetBoolean">
            <summary>Establecer el stub de BufferingAppenderSkeleton.set_OnlyFixPartialEventData(Boolean value)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAdoNetAppender.PreAppendCheck">
            <summary>Establecer el stub de AppenderSkeleton.PreAppendCheck()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAdoNetAppender.PreAppendCheck01">
            <summary>Establecer el stub de AppenderSkeleton.PreAppendCheck()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAdoNetAppender.RequiresLayout">
            <summary>Establecer el stub de AppenderSkeleton.get_RequiresLayout()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAdoNetAppender.RequiresLayoutGet">
            <summary>Establecer el stub de AppenderSkeleton.get_RequiresLayout()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAdoNetAppender.ResolveConnectionString(System.String@)">
            <summary>Establecer el stub de AdoNetAppender.ResolveConnectionString(String&amp; connectionStringContext)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAdoNetAppender.ResolveConnectionStringStringOut">
            <summary>Establecer el stub de AdoNetAppender.ResolveConnectionString(String&amp; connectionStringContext)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAdoNetAppender.ResolveConnectionType">
            <summary>Establecer el stub de AdoNetAppender.ResolveConnectionType()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAdoNetAppender.ResolveConnectionType01">
            <summary>Establecer el stub de AdoNetAppender.ResolveConnectionType()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAdoNetAppender.SendBuffer(log4net.Core.LoggingEvent[])">
            <summary>Establecer el stub de AdoNetAppender.SendBuffer(LoggingEvent[] events)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAdoNetAppender.SendBuffer(System.Data.IDbTransaction,log4net.Core.LoggingEvent[])">
            <summary>Establecer el stub de AdoNetAppender.SendBuffer(IDbTransaction dbTran, LoggingEvent[] events)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAdoNetAppender.SendBufferIDbTransactionLoggingEventArray">
            <summary>Establecer el stub de AdoNetAppender.SendBuffer(IDbTransaction dbTran, LoggingEvent[] events)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAdoNetAppender.SendBufferLoggingEventArray">
            <summary>Establecer el stub de AdoNetAppender.SendBuffer(LoggingEvent[] events)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAdoNetAppender.SendFromBuffer(log4net.Core.LoggingEvent,log4net.Util.CyclicBuffer)">
            <summary>Establecer el stub de BufferingAppenderSkeleton.SendFromBuffer(LoggingEvent firstLoggingEvent, CyclicBuffer buffer)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAdoNetAppender.SendFromBufferLoggingEventCyclicBuffer">
            <summary>Establecer el stub de BufferingAppenderSkeleton.SendFromBuffer(LoggingEvent firstLoggingEvent, CyclicBuffer buffer)</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.StubAdoNetAppenderParameter">
            <summary>Tipo stub de log4net.Appender.AdoNetAppenderParameter</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAdoNetAppenderParameter.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAdoNetAppenderParameter.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAdoNetAppenderParameter.FormatValue(System.Data.IDbCommand,log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de AdoNetAppenderParameter.FormatValue(IDbCommand command, LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAdoNetAppenderParameter.FormatValueIDbCommandLoggingEvent">
            <summary>Establecer el stub de AdoNetAppenderParameter.FormatValue(IDbCommand command, LoggingEvent loggingEvent)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAdoNetAppenderParameter.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubAdoNetAppenderParameter</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAdoNetAppenderParameter.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAdoNetAppenderParameter.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAdoNetAppenderParameter.Prepare(System.Data.IDbCommand)">
            <summary>Establecer el stub de AdoNetAppenderParameter.Prepare(IDbCommand command)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAdoNetAppenderParameter.PrepareIDbCommand">
            <summary>Establecer el stub de AdoNetAppenderParameter.Prepare(IDbCommand command)</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.StubAnsiColorTerminalAppender">
            <summary>Tipo stub de log4net.Appender.AnsiColorTerminalAppender</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAnsiColorTerminalAppender.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAnsiColorTerminalAppender.ActivateOptions">
            <summary>Establecer el stub de AnsiColorTerminalAppender.ActivateOptions()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAnsiColorTerminalAppender.ActivateOptions01">
            <summary>Establecer el stub de AnsiColorTerminalAppender.ActivateOptions()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAnsiColorTerminalAppender.AddFilter(log4net.Filter.IFilter)">
            <summary>Establecer el stub de AppenderSkeleton.AddFilter(IFilter filter)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAnsiColorTerminalAppender.AddFilterIFilter">
            <summary>Establecer el stub de AppenderSkeleton.AddFilter(IFilter filter)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAnsiColorTerminalAppender.Append(log4net.Core.LoggingEvent[])">
            <summary>Establecer el stub de AppenderSkeleton.Append(LoggingEvent[] loggingEvents)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAnsiColorTerminalAppender.Append(log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de AnsiColorTerminalAppender.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAnsiColorTerminalAppender.AppendLoggingEvent">
            <summary>Establecer el stub de AnsiColorTerminalAppender.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAnsiColorTerminalAppender.AppendLoggingEventArray">
            <summary>Establecer el stub de AppenderSkeleton.Append(LoggingEvent[] loggingEvents)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAnsiColorTerminalAppender.AttachBackingFieldToErrorHandler">
            <summary>Asocia delegados para emular StubAnsiColorTerminalAppender.ErrorHandler como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAnsiColorTerminalAppender.AttachBackingFieldToLayout">
            <summary>Asocia delegados para emular StubAnsiColorTerminalAppender.Layout como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAnsiColorTerminalAppender.AttachBackingFieldToTarget">
            <summary>Asocia delegados para emular StubAnsiColorTerminalAppender.Target como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAnsiColorTerminalAppender.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAnsiColorTerminalAppender.ClearFilters">
            <summary>Establecer el stub de AppenderSkeleton.ClearFilters()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAnsiColorTerminalAppender.ClearFilters01">
            <summary>Establecer el stub de AppenderSkeleton.ClearFilters()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAnsiColorTerminalAppender.ErrorHandler">
            <summary>Establecer el stub de AppenderSkeleton.get_ErrorHandler()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAnsiColorTerminalAppender.ErrorHandlerGet">
            <summary>Establecer el stub de AppenderSkeleton.get_ErrorHandler()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAnsiColorTerminalAppender.ErrorHandlerSetIErrorHandler">
            <summary>Establecer el stub de AppenderSkeleton.set_ErrorHandler(IErrorHandler value)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAnsiColorTerminalAppender.FilterEvent(log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAnsiColorTerminalAppender.FilterEventLoggingEvent">
            <summary>Establecer el stub de AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAnsiColorTerminalAppender.FilterHead">
            <summary>Establecer el stub de AppenderSkeleton.get_FilterHead()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAnsiColorTerminalAppender.FilterHeadGet">
            <summary>Establecer el stub de AppenderSkeleton.get_FilterHead()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAnsiColorTerminalAppender.Flush(System.Int32)">
            <summary>Establecer el stub de AppenderSkeleton.Flush(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAnsiColorTerminalAppender.FlushInt32">
            <summary>Establecer el stub de AppenderSkeleton.Flush(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAnsiColorTerminalAppender.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubAnsiColorTerminalAppender</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAnsiColorTerminalAppender.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAnsiColorTerminalAppender.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAnsiColorTerminalAppender.IsAsSevereAsThreshold(log4net.Core.Level)">
            <summary>Establecer el stub de AppenderSkeleton.IsAsSevereAsThreshold(Level level)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAnsiColorTerminalAppender.IsAsSevereAsThresholdLevel">
            <summary>Establecer el stub de AppenderSkeleton.IsAsSevereAsThreshold(Level level)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAnsiColorTerminalAppender.Layout">
            <summary>Establecer el stub de AppenderSkeleton.get_Layout()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAnsiColorTerminalAppender.LayoutGet">
            <summary>Establecer el stub de AppenderSkeleton.get_Layout()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAnsiColorTerminalAppender.LayoutSetILayout">
            <summary>Establecer el stub de AppenderSkeleton.set_Layout(ILayout value)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAnsiColorTerminalAppender.OnClose">
            <summary>Establecer el stub de AppenderSkeleton.OnClose()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAnsiColorTerminalAppender.OnClose01">
            <summary>Establecer el stub de AppenderSkeleton.OnClose()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAnsiColorTerminalAppender.PreAppendCheck">
            <summary>Establecer el stub de AppenderSkeleton.PreAppendCheck()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAnsiColorTerminalAppender.PreAppendCheck01">
            <summary>Establecer el stub de AppenderSkeleton.PreAppendCheck()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAnsiColorTerminalAppender.RequiresLayout">
            <summary>Establecer el stub de AnsiColorTerminalAppender.get_RequiresLayout()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAnsiColorTerminalAppender.RequiresLayoutGet">
            <summary>Establecer el stub de AnsiColorTerminalAppender.get_RequiresLayout()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAnsiColorTerminalAppender.Target">
            <summary>Establecer el stub de AnsiColorTerminalAppender.get_Target()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAnsiColorTerminalAppender.TargetGet">
            <summary>Establecer el stub de AnsiColorTerminalAppender.get_Target()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAnsiColorTerminalAppender.TargetSetString">
            <summary>Establecer el stub de AnsiColorTerminalAppender.set_Target(String value)</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.StubAppenderCollection">
            <summary>Tipo stub de log4net.Appender.AppenderCollection</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAppenderCollection.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAppenderCollection.#ctor(log4net.Appender.AppenderCollection.Tag)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAppenderCollection.#ctor(log4net.Appender.IAppender[])">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAppenderCollection.#ctor(log4net.Appender.AppenderCollection)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAppenderCollection.#ctor(System.Collections.ICollection)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAppenderCollection.#ctor(System.Int32)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAppenderCollection.Add(log4net.Appender.IAppender)">
            <summary>Establecer el stub de AppenderCollection.Add(IAppender item)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAppenderCollection.AddIAppender">
            <summary>Establecer el stub de AppenderCollection.Add(IAppender item)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAppenderCollection.AddRange(log4net.Appender.AppenderCollection)">
            <summary>Establecer el stub de AppenderCollection.AddRange(AppenderCollection x)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAppenderCollection.AddRange(System.Collections.ICollection)">
            <summary>Establecer el stub de AppenderCollection.AddRange(ICollection col)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAppenderCollection.AddRange(log4net.Appender.IAppender[])">
            <summary>Establecer el stub de AppenderCollection.AddRange(IAppender[] x)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAppenderCollection.AddRangeAppenderCollection">
            <summary>Establecer el stub de AppenderCollection.AddRange(AppenderCollection x)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAppenderCollection.AddRangeIAppenderArray">
            <summary>Establecer el stub de AppenderCollection.AddRange(IAppender[] x)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAppenderCollection.AddRangeICollection">
            <summary>Establecer el stub de AppenderCollection.AddRange(ICollection col)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAppenderCollection.AttachBackingFieldToCapacity">
            <summary>Asocia delegados para emular StubAppenderCollection.Capacity como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAppenderCollection.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAppenderCollection.Capacity">
            <summary>Establecer el stub de AppenderCollection.get_Capacity()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAppenderCollection.CapacityGet">
            <summary>Establecer el stub de AppenderCollection.get_Capacity()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAppenderCollection.CapacitySetInt32">
            <summary>Establecer el stub de AppenderCollection.set_Capacity(Int32 value)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAppenderCollection.Clear">
            <summary>Establecer el stub de AppenderCollection.Clear()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAppenderCollection.Clear01">
            <summary>Establecer el stub de AppenderCollection.Clear()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAppenderCollection.Clone">
            <summary>Establecer el stub de AppenderCollection.Clone()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAppenderCollection.Clone01">
            <summary>Establecer el stub de AppenderCollection.Clone()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAppenderCollection.Contains(log4net.Appender.IAppender)">
            <summary>Establecer el stub de AppenderCollection.Contains(IAppender item)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAppenderCollection.ContainsIAppender">
            <summary>Establecer el stub de AppenderCollection.Contains(IAppender item)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAppenderCollection.CopyTo(log4net.Appender.IAppender[])">
            <summary>Establecer el stub de AppenderCollection.CopyTo(IAppender[] array)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAppenderCollection.CopyTo(log4net.Appender.IAppender[],System.Int32)">
            <summary>Establecer el stub de AppenderCollection.CopyTo(IAppender[] array, Int32 start)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAppenderCollection.CopyToIAppenderArray">
            <summary>Establecer el stub de AppenderCollection.CopyTo(IAppender[] array)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAppenderCollection.CopyToIAppenderArrayInt32">
            <summary>Establecer el stub de AppenderCollection.CopyTo(IAppender[] array, Int32 start)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAppenderCollection.Count">
            <summary>Establecer el stub de AppenderCollection.get_Count()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAppenderCollection.CountGet">
            <summary>Establecer el stub de AppenderCollection.get_Count()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAppenderCollection.GetEnumerator">
            <summary>Establecer el stub de AppenderCollection.GetEnumerator()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAppenderCollection.GetEnumerator01">
            <summary>Establecer el stub de AppenderCollection.GetEnumerator()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAppenderCollection.IndexOf(log4net.Appender.IAppender)">
            <summary>Establecer el stub de AppenderCollection.IndexOf(IAppender item)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAppenderCollection.IndexOfIAppender">
            <summary>Establecer el stub de AppenderCollection.IndexOf(IAppender item)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAppenderCollection.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubAppenderCollection</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAppenderCollection.Insert(System.Int32,log4net.Appender.IAppender)">
            <summary>Establecer el stub de AppenderCollection.Insert(Int32 index, IAppender item)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAppenderCollection.InsertInt32IAppender">
            <summary>Establecer el stub de AppenderCollection.Insert(Int32 index, IAppender item)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAppenderCollection.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAppenderCollection.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAppenderCollection.IsFixedSize">
            <summary>Establecer el stub de AppenderCollection.get_IsFixedSize()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAppenderCollection.IsFixedSizeGet">
            <summary>Establecer el stub de AppenderCollection.get_IsFixedSize()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAppenderCollection.IsReadOnly">
            <summary>Establecer el stub de AppenderCollection.get_IsReadOnly()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAppenderCollection.IsReadOnlyGet">
            <summary>Establecer el stub de AppenderCollection.get_IsReadOnly()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAppenderCollection.IsSynchronized">
            <summary>Establecer el stub de AppenderCollection.get_IsSynchronized()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAppenderCollection.IsSynchronizedGet">
            <summary>Establecer el stub de AppenderCollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAppenderCollection.Item(System.Int32)">
            <summary>Establecer el stub de AppenderCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAppenderCollection.ItemGetInt32">
            <summary>Establecer el stub de AppenderCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAppenderCollection.ItemSetInt32IAppender">
            <summary>Establecer el stub de AppenderCollection.set_Item(Int32 index, IAppender value)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAppenderCollection.Remove(log4net.Appender.IAppender)">
            <summary>Establecer el stub de AppenderCollection.Remove(IAppender item)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAppenderCollection.RemoveAt(System.Int32)">
            <summary>Establecer el stub de AppenderCollection.RemoveAt(Int32 index)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAppenderCollection.RemoveAtInt32">
            <summary>Establecer el stub de AppenderCollection.RemoveAt(Int32 index)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAppenderCollection.RemoveIAppender">
            <summary>Establecer el stub de AppenderCollection.Remove(IAppender item)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAppenderCollection.SyncRoot">
            <summary>Establecer el stub de AppenderCollection.get_SyncRoot()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAppenderCollection.SyncRootGet">
            <summary>Establecer el stub de AppenderCollection.get_SyncRoot()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAppenderCollection.ToArray">
            <summary>Establecer el stub de AppenderCollection.ToArray()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAppenderCollection.ToArray01">
            <summary>Establecer el stub de AppenderCollection.ToArray()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAppenderCollection.TrimToSize">
            <summary>Establecer el stub de AppenderCollection.TrimToSize()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAppenderCollection.TrimToSize01">
            <summary>Establecer el stub de AppenderCollection.TrimToSize()</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.StubAppenderSkeleton">
            <summary>Tipo stub de log4net.Appender.AppenderSkeleton</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAppenderSkeleton.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAppenderSkeleton.ActivateOptions">
            <summary>Establecer el stub de AppenderSkeleton.ActivateOptions()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAppenderSkeleton.ActivateOptions01">
            <summary>Establecer el stub de AppenderSkeleton.ActivateOptions()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAppenderSkeleton.AddFilter(log4net.Filter.IFilter)">
            <summary>Establecer el stub de AppenderSkeleton.AddFilter(IFilter filter)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAppenderSkeleton.AddFilterIFilter">
            <summary>Establecer el stub de AppenderSkeleton.AddFilter(IFilter filter)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAppenderSkeleton.Append(log4net.Core.LoggingEvent[])">
            <summary>Establecer el stub de AppenderSkeleton.Append(LoggingEvent[] loggingEvents)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAppenderSkeleton.Append(log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de AppenderSkeleton.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAppenderSkeleton.AppendLoggingEvent">
            <summary>Establecer el stub de AppenderSkeleton.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAppenderSkeleton.AppendLoggingEventArray">
            <summary>Establecer el stub de AppenderSkeleton.Append(LoggingEvent[] loggingEvents)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAppenderSkeleton.AttachBackingFieldToErrorHandler">
            <summary>Asocia delegados para emular StubAppenderSkeleton.ErrorHandler como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAppenderSkeleton.AttachBackingFieldToLayout">
            <summary>Asocia delegados para emular StubAppenderSkeleton.Layout como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAppenderSkeleton.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAppenderSkeleton.ClearFilters">
            <summary>Establecer el stub de AppenderSkeleton.ClearFilters()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAppenderSkeleton.ClearFilters01">
            <summary>Establecer el stub de AppenderSkeleton.ClearFilters()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAppenderSkeleton.ErrorHandler">
            <summary>Establecer el stub de AppenderSkeleton.get_ErrorHandler()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAppenderSkeleton.ErrorHandlerGet">
            <summary>Establecer el stub de AppenderSkeleton.get_ErrorHandler()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAppenderSkeleton.ErrorHandlerSetIErrorHandler">
            <summary>Establecer el stub de AppenderSkeleton.set_ErrorHandler(IErrorHandler value)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAppenderSkeleton.FilterEvent(log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAppenderSkeleton.FilterEventLoggingEvent">
            <summary>Establecer el stub de AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAppenderSkeleton.FilterHead">
            <summary>Establecer el stub de AppenderSkeleton.get_FilterHead()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAppenderSkeleton.FilterHeadGet">
            <summary>Establecer el stub de AppenderSkeleton.get_FilterHead()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAppenderSkeleton.Flush(System.Int32)">
            <summary>Establecer el stub de AppenderSkeleton.Flush(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAppenderSkeleton.FlushInt32">
            <summary>Establecer el stub de AppenderSkeleton.Flush(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAppenderSkeleton.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubAppenderSkeleton</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAppenderSkeleton.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAppenderSkeleton.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAppenderSkeleton.IsAsSevereAsThreshold(log4net.Core.Level)">
            <summary>Establecer el stub de AppenderSkeleton.IsAsSevereAsThreshold(Level level)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAppenderSkeleton.IsAsSevereAsThresholdLevel">
            <summary>Establecer el stub de AppenderSkeleton.IsAsSevereAsThreshold(Level level)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAppenderSkeleton.Layout">
            <summary>Establecer el stub de AppenderSkeleton.get_Layout()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAppenderSkeleton.LayoutGet">
            <summary>Establecer el stub de AppenderSkeleton.get_Layout()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAppenderSkeleton.LayoutSetILayout">
            <summary>Establecer el stub de AppenderSkeleton.set_Layout(ILayout value)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAppenderSkeleton.OnClose">
            <summary>Establecer el stub de AppenderSkeleton.OnClose()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAppenderSkeleton.OnClose01">
            <summary>Establecer el stub de AppenderSkeleton.OnClose()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAppenderSkeleton.PreAppendCheck">
            <summary>Establecer el stub de AppenderSkeleton.PreAppendCheck()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAppenderSkeleton.PreAppendCheck01">
            <summary>Establecer el stub de AppenderSkeleton.PreAppendCheck()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAppenderSkeleton.RequiresLayout">
            <summary>Establecer el stub de AppenderSkeleton.get_RequiresLayout()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAppenderSkeleton.RequiresLayoutGet">
            <summary>Establecer el stub de AppenderSkeleton.get_RequiresLayout()</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.StubAspNetTraceAppender">
            <summary>Tipo stub de log4net.Appender.AspNetTraceAppender</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAspNetTraceAppender.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAspNetTraceAppender.ActivateOptions">
            <summary>Establecer el stub de AppenderSkeleton.ActivateOptions()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAspNetTraceAppender.ActivateOptions01">
            <summary>Establecer el stub de AppenderSkeleton.ActivateOptions()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAspNetTraceAppender.AddFilter(log4net.Filter.IFilter)">
            <summary>Establecer el stub de AppenderSkeleton.AddFilter(IFilter filter)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAspNetTraceAppender.AddFilterIFilter">
            <summary>Establecer el stub de AppenderSkeleton.AddFilter(IFilter filter)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAspNetTraceAppender.Append(log4net.Core.LoggingEvent[])">
            <summary>Establecer el stub de AppenderSkeleton.Append(LoggingEvent[] loggingEvents)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAspNetTraceAppender.Append(log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de AspNetTraceAppender.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAspNetTraceAppender.AppendLoggingEvent">
            <summary>Establecer el stub de AspNetTraceAppender.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAspNetTraceAppender.AppendLoggingEventArray">
            <summary>Establecer el stub de AppenderSkeleton.Append(LoggingEvent[] loggingEvents)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAspNetTraceAppender.AttachBackingFieldToErrorHandler">
            <summary>Asocia delegados para emular StubAspNetTraceAppender.ErrorHandler como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAspNetTraceAppender.AttachBackingFieldToLayout">
            <summary>Asocia delegados para emular StubAspNetTraceAppender.Layout como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAspNetTraceAppender.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAspNetTraceAppender.ClearFilters">
            <summary>Establecer el stub de AppenderSkeleton.ClearFilters()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAspNetTraceAppender.ClearFilters01">
            <summary>Establecer el stub de AppenderSkeleton.ClearFilters()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAspNetTraceAppender.ErrorHandler">
            <summary>Establecer el stub de AppenderSkeleton.get_ErrorHandler()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAspNetTraceAppender.ErrorHandlerGet">
            <summary>Establecer el stub de AppenderSkeleton.get_ErrorHandler()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAspNetTraceAppender.ErrorHandlerSetIErrorHandler">
            <summary>Establecer el stub de AppenderSkeleton.set_ErrorHandler(IErrorHandler value)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAspNetTraceAppender.FilterEvent(log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAspNetTraceAppender.FilterEventLoggingEvent">
            <summary>Establecer el stub de AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAspNetTraceAppender.FilterHead">
            <summary>Establecer el stub de AppenderSkeleton.get_FilterHead()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAspNetTraceAppender.FilterHeadGet">
            <summary>Establecer el stub de AppenderSkeleton.get_FilterHead()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAspNetTraceAppender.Flush(System.Int32)">
            <summary>Establecer el stub de AppenderSkeleton.Flush(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAspNetTraceAppender.FlushInt32">
            <summary>Establecer el stub de AppenderSkeleton.Flush(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAspNetTraceAppender.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubAspNetTraceAppender</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAspNetTraceAppender.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAspNetTraceAppender.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAspNetTraceAppender.IsAsSevereAsThreshold(log4net.Core.Level)">
            <summary>Establecer el stub de AppenderSkeleton.IsAsSevereAsThreshold(Level level)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAspNetTraceAppender.IsAsSevereAsThresholdLevel">
            <summary>Establecer el stub de AppenderSkeleton.IsAsSevereAsThreshold(Level level)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAspNetTraceAppender.Layout">
            <summary>Establecer el stub de AppenderSkeleton.get_Layout()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAspNetTraceAppender.LayoutGet">
            <summary>Establecer el stub de AppenderSkeleton.get_Layout()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAspNetTraceAppender.LayoutSetILayout">
            <summary>Establecer el stub de AppenderSkeleton.set_Layout(ILayout value)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAspNetTraceAppender.OnClose">
            <summary>Establecer el stub de AppenderSkeleton.OnClose()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAspNetTraceAppender.OnClose01">
            <summary>Establecer el stub de AppenderSkeleton.OnClose()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubAspNetTraceAppender.PreAppendCheck">
            <summary>Establecer el stub de AppenderSkeleton.PreAppendCheck()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAspNetTraceAppender.PreAppendCheck01">
            <summary>Establecer el stub de AppenderSkeleton.PreAppendCheck()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubAspNetTraceAppender.RequiresLayout">
            <summary>Establecer el stub de AspNetTraceAppender.get_RequiresLayout()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubAspNetTraceAppender.RequiresLayoutGet">
            <summary>Establecer el stub de AspNetTraceAppender.get_RequiresLayout()</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.StubBufferingAppenderSkeleton">
            <summary>Tipo stub de log4net.Appender.BufferingAppenderSkeleton</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.#ctor(System.Boolean)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.ActivateOptions">
            <summary>Establecer el stub de BufferingAppenderSkeleton.ActivateOptions()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.ActivateOptions01">
            <summary>Establecer el stub de BufferingAppenderSkeleton.ActivateOptions()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.AddFilter(log4net.Filter.IFilter)">
            <summary>Establecer el stub de AppenderSkeleton.AddFilter(IFilter filter)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.AddFilterIFilter">
            <summary>Establecer el stub de AppenderSkeleton.AddFilter(IFilter filter)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.Append(log4net.Core.LoggingEvent[])">
            <summary>Establecer el stub de AppenderSkeleton.Append(LoggingEvent[] loggingEvents)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.Append(log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de BufferingAppenderSkeleton.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.AppendLoggingEvent">
            <summary>Establecer el stub de BufferingAppenderSkeleton.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.AppendLoggingEventArray">
            <summary>Establecer el stub de AppenderSkeleton.Append(LoggingEvent[] loggingEvents)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.AttachBackingFieldToErrorHandler">
            <summary>Asocia delegados para emular StubBufferingAppenderSkeleton.ErrorHandler como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.AttachBackingFieldToFix">
            <summary>Asocia delegados para emular StubBufferingAppenderSkeleton.Fix como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.AttachBackingFieldToLayout">
            <summary>Asocia delegados para emular StubBufferingAppenderSkeleton.Layout como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.AttachBackingFieldToOnlyFixPartialEventData">
            <summary>Asocia delegados para emular StubBufferingAppenderSkeleton.OnlyFixPartialEventData como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.ClearFilters">
            <summary>Establecer el stub de AppenderSkeleton.ClearFilters()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.ClearFilters01">
            <summary>Establecer el stub de AppenderSkeleton.ClearFilters()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.ErrorHandler">
            <summary>Establecer el stub de AppenderSkeleton.get_ErrorHandler()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.ErrorHandlerGet">
            <summary>Establecer el stub de AppenderSkeleton.get_ErrorHandler()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.ErrorHandlerSetIErrorHandler">
            <summary>Establecer el stub de AppenderSkeleton.set_ErrorHandler(IErrorHandler value)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.FilterEvent(log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.FilterEventLoggingEvent">
            <summary>Establecer el stub de AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.FilterHead">
            <summary>Establecer el stub de AppenderSkeleton.get_FilterHead()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.FilterHeadGet">
            <summary>Establecer el stub de AppenderSkeleton.get_FilterHead()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.Fix">
            <summary>Establecer el stub de BufferingAppenderSkeleton.get_Fix()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.FixGet">
            <summary>Establecer el stub de BufferingAppenderSkeleton.get_Fix()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.FixSetFixFlags">
            <summary>Establecer el stub de BufferingAppenderSkeleton.set_Fix(FixFlags value)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.Flush(System.Int32)">
            <summary>Establecer el stub de BufferingAppenderSkeleton.Flush(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.Flush">
            <summary>Establecer el stub de BufferingAppenderSkeleton.Flush()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.Flush(System.Boolean)">
            <summary>Establecer el stub de BufferingAppenderSkeleton.Flush(Boolean flushLossyBuffer)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.Flush01">
            <summary>Establecer el stub de BufferingAppenderSkeleton.Flush()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.FlushBoolean">
            <summary>Establecer el stub de BufferingAppenderSkeleton.Flush(Boolean flushLossyBuffer)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.FlushInt32">
            <summary>Establecer el stub de BufferingAppenderSkeleton.Flush(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubBufferingAppenderSkeleton</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.IsAsSevereAsThreshold(log4net.Core.Level)">
            <summary>Establecer el stub de AppenderSkeleton.IsAsSevereAsThreshold(Level level)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.IsAsSevereAsThresholdLevel">
            <summary>Establecer el stub de AppenderSkeleton.IsAsSevereAsThreshold(Level level)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.Layout">
            <summary>Establecer el stub de AppenderSkeleton.get_Layout()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.LayoutGet">
            <summary>Establecer el stub de AppenderSkeleton.get_Layout()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.LayoutSetILayout">
            <summary>Establecer el stub de AppenderSkeleton.set_Layout(ILayout value)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.OnClose">
            <summary>Establecer el stub de BufferingAppenderSkeleton.OnClose()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.OnClose01">
            <summary>Establecer el stub de BufferingAppenderSkeleton.OnClose()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.OnlyFixPartialEventData">
            <summary>Establecer el stub de BufferingAppenderSkeleton.get_OnlyFixPartialEventData()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.OnlyFixPartialEventDataGet">
            <summary>Establecer el stub de BufferingAppenderSkeleton.get_OnlyFixPartialEventData()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.OnlyFixPartialEventDataSetBoolean">
            <summary>Establecer el stub de BufferingAppenderSkeleton.set_OnlyFixPartialEventData(Boolean value)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.PreAppendCheck">
            <summary>Establecer el stub de AppenderSkeleton.PreAppendCheck()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.PreAppendCheck01">
            <summary>Establecer el stub de AppenderSkeleton.PreAppendCheck()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.RequiresLayout">
            <summary>Establecer el stub de AppenderSkeleton.get_RequiresLayout()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.RequiresLayoutGet">
            <summary>Establecer el stub de AppenderSkeleton.get_RequiresLayout()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.SendBuffer(log4net.Core.LoggingEvent[])">
            <summary>Establecer el stub de BufferingAppenderSkeleton.SendBuffer(LoggingEvent[] events)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.SendBufferLoggingEventArray">
            <summary>Establecer el stub de BufferingAppenderSkeleton.SendBuffer(LoggingEvent[] events)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.SendFromBuffer(log4net.Core.LoggingEvent,log4net.Util.CyclicBuffer)">
            <summary>Establecer el stub de BufferingAppenderSkeleton.SendFromBuffer(LoggingEvent firstLoggingEvent, CyclicBuffer buffer)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingAppenderSkeleton.SendFromBufferLoggingEventCyclicBuffer">
            <summary>Establecer el stub de BufferingAppenderSkeleton.SendFromBuffer(LoggingEvent firstLoggingEvent, CyclicBuffer buffer)</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.StubBufferingForwardingAppender">
            <summary>Tipo stub de log4net.Appender.BufferingForwardingAppender</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingForwardingAppender.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingForwardingAppender.ActivateOptions">
            <summary>Establecer el stub de BufferingAppenderSkeleton.ActivateOptions()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingForwardingAppender.ActivateOptions01">
            <summary>Establecer el stub de BufferingAppenderSkeleton.ActivateOptions()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingForwardingAppender.AddAppender(log4net.Appender.IAppender)">
            <summary>Establecer el stub de BufferingForwardingAppender.AddAppender(IAppender newAppender)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingForwardingAppender.AddAppenderIAppender">
            <summary>Establecer el stub de BufferingForwardingAppender.AddAppender(IAppender newAppender)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingForwardingAppender.AddFilter(log4net.Filter.IFilter)">
            <summary>Establecer el stub de AppenderSkeleton.AddFilter(IFilter filter)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingForwardingAppender.AddFilterIFilter">
            <summary>Establecer el stub de AppenderSkeleton.AddFilter(IFilter filter)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingForwardingAppender.Append(log4net.Core.LoggingEvent[])">
            <summary>Establecer el stub de AppenderSkeleton.Append(LoggingEvent[] loggingEvents)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingForwardingAppender.Append(log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de BufferingAppenderSkeleton.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingForwardingAppender.AppendLoggingEvent">
            <summary>Establecer el stub de BufferingAppenderSkeleton.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingForwardingAppender.AppendLoggingEventArray">
            <summary>Establecer el stub de AppenderSkeleton.Append(LoggingEvent[] loggingEvents)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubBufferingForwardingAppender.Appenders">
            <summary>Establecer el stub de BufferingForwardingAppender.get_Appenders()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingForwardingAppender.AppendersGet">
            <summary>Establecer el stub de BufferingForwardingAppender.get_Appenders()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingForwardingAppender.AttachBackingFieldToErrorHandler">
            <summary>Asocia delegados para emular StubBufferingForwardingAppender.ErrorHandler como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingForwardingAppender.AttachBackingFieldToFix">
            <summary>Asocia delegados para emular StubBufferingForwardingAppender.Fix como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingForwardingAppender.AttachBackingFieldToLayout">
            <summary>Asocia delegados para emular StubBufferingForwardingAppender.Layout como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingForwardingAppender.AttachBackingFieldToOnlyFixPartialEventData">
            <summary>Asocia delegados para emular StubBufferingForwardingAppender.OnlyFixPartialEventData como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubBufferingForwardingAppender.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingForwardingAppender.ClearFilters">
            <summary>Establecer el stub de AppenderSkeleton.ClearFilters()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingForwardingAppender.ClearFilters01">
            <summary>Establecer el stub de AppenderSkeleton.ClearFilters()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubBufferingForwardingAppender.ErrorHandler">
            <summary>Establecer el stub de AppenderSkeleton.get_ErrorHandler()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingForwardingAppender.ErrorHandlerGet">
            <summary>Establecer el stub de AppenderSkeleton.get_ErrorHandler()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingForwardingAppender.ErrorHandlerSetIErrorHandler">
            <summary>Establecer el stub de AppenderSkeleton.set_ErrorHandler(IErrorHandler value)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingForwardingAppender.FilterEvent(log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingForwardingAppender.FilterEventLoggingEvent">
            <summary>Establecer el stub de AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubBufferingForwardingAppender.FilterHead">
            <summary>Establecer el stub de AppenderSkeleton.get_FilterHead()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingForwardingAppender.FilterHeadGet">
            <summary>Establecer el stub de AppenderSkeleton.get_FilterHead()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubBufferingForwardingAppender.Fix">
            <summary>Establecer el stub de BufferingAppenderSkeleton.get_Fix()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingForwardingAppender.FixGet">
            <summary>Establecer el stub de BufferingAppenderSkeleton.get_Fix()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingForwardingAppender.FixSetFixFlags">
            <summary>Establecer el stub de BufferingAppenderSkeleton.set_Fix(FixFlags value)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingForwardingAppender.Flush(System.Int32)">
            <summary>Establecer el stub de BufferingAppenderSkeleton.Flush(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingForwardingAppender.Flush">
            <summary>Establecer el stub de BufferingAppenderSkeleton.Flush()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingForwardingAppender.Flush(System.Boolean)">
            <summary>Establecer el stub de BufferingAppenderSkeleton.Flush(Boolean flushLossyBuffer)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingForwardingAppender.Flush01">
            <summary>Establecer el stub de BufferingAppenderSkeleton.Flush()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingForwardingAppender.FlushBoolean">
            <summary>Establecer el stub de BufferingAppenderSkeleton.Flush(Boolean flushLossyBuffer)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingForwardingAppender.FlushInt32">
            <summary>Establecer el stub de BufferingAppenderSkeleton.Flush(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingForwardingAppender.GetAppender(System.String)">
            <summary>Establecer el stub de BufferingForwardingAppender.GetAppender(String name)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingForwardingAppender.GetAppenderString">
            <summary>Establecer el stub de BufferingForwardingAppender.GetAppender(String name)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingForwardingAppender.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubBufferingForwardingAppender</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubBufferingForwardingAppender.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubBufferingForwardingAppender.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingForwardingAppender.IsAsSevereAsThreshold(log4net.Core.Level)">
            <summary>Establecer el stub de AppenderSkeleton.IsAsSevereAsThreshold(Level level)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingForwardingAppender.IsAsSevereAsThresholdLevel">
            <summary>Establecer el stub de AppenderSkeleton.IsAsSevereAsThreshold(Level level)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubBufferingForwardingAppender.Layout">
            <summary>Establecer el stub de AppenderSkeleton.get_Layout()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingForwardingAppender.LayoutGet">
            <summary>Establecer el stub de AppenderSkeleton.get_Layout()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingForwardingAppender.LayoutSetILayout">
            <summary>Establecer el stub de AppenderSkeleton.set_Layout(ILayout value)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingForwardingAppender.OnClose">
            <summary>Establecer el stub de BufferingForwardingAppender.OnClose()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingForwardingAppender.OnClose01">
            <summary>Establecer el stub de BufferingForwardingAppender.OnClose()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubBufferingForwardingAppender.OnlyFixPartialEventData">
            <summary>Establecer el stub de BufferingAppenderSkeleton.get_OnlyFixPartialEventData()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingForwardingAppender.OnlyFixPartialEventDataGet">
            <summary>Establecer el stub de BufferingAppenderSkeleton.get_OnlyFixPartialEventData()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingForwardingAppender.OnlyFixPartialEventDataSetBoolean">
            <summary>Establecer el stub de BufferingAppenderSkeleton.set_OnlyFixPartialEventData(Boolean value)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingForwardingAppender.PreAppendCheck">
            <summary>Establecer el stub de AppenderSkeleton.PreAppendCheck()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingForwardingAppender.PreAppendCheck01">
            <summary>Establecer el stub de AppenderSkeleton.PreAppendCheck()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingForwardingAppender.RemoveAllAppenders">
            <summary>Establecer el stub de BufferingForwardingAppender.RemoveAllAppenders()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingForwardingAppender.RemoveAllAppenders01">
            <summary>Establecer el stub de BufferingForwardingAppender.RemoveAllAppenders()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingForwardingAppender.RemoveAppender(log4net.Appender.IAppender)">
            <summary>Establecer el stub de BufferingForwardingAppender.RemoveAppender(IAppender appender)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingForwardingAppender.RemoveAppender(System.String)">
            <summary>Establecer el stub de BufferingForwardingAppender.RemoveAppender(String name)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingForwardingAppender.RemoveAppenderIAppender">
            <summary>Establecer el stub de BufferingForwardingAppender.RemoveAppender(IAppender appender)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingForwardingAppender.RemoveAppenderString">
            <summary>Establecer el stub de BufferingForwardingAppender.RemoveAppender(String name)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubBufferingForwardingAppender.RequiresLayout">
            <summary>Establecer el stub de AppenderSkeleton.get_RequiresLayout()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingForwardingAppender.RequiresLayoutGet">
            <summary>Establecer el stub de AppenderSkeleton.get_RequiresLayout()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingForwardingAppender.SendBuffer(log4net.Core.LoggingEvent[])">
            <summary>Establecer el stub de BufferingForwardingAppender.SendBuffer(LoggingEvent[] events)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingForwardingAppender.SendBufferLoggingEventArray">
            <summary>Establecer el stub de BufferingForwardingAppender.SendBuffer(LoggingEvent[] events)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubBufferingForwardingAppender.SendFromBuffer(log4net.Core.LoggingEvent,log4net.Util.CyclicBuffer)">
            <summary>Establecer el stub de BufferingAppenderSkeleton.SendFromBuffer(LoggingEvent firstLoggingEvent, CyclicBuffer buffer)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubBufferingForwardingAppender.SendFromBufferLoggingEventCyclicBuffer">
            <summary>Establecer el stub de BufferingAppenderSkeleton.SendFromBuffer(LoggingEvent firstLoggingEvent, CyclicBuffer buffer)</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.StubColoredConsoleAppender">
            <summary>Tipo stub de log4net.Appender.ColoredConsoleAppender</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubColoredConsoleAppender.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubColoredConsoleAppender.#ctor(log4net.Layout.ILayout)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubColoredConsoleAppender.#ctor(log4net.Layout.ILayout,System.Boolean)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubColoredConsoleAppender.ActivateOptions">
            <summary>Establecer el stub de ColoredConsoleAppender.ActivateOptions()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubColoredConsoleAppender.ActivateOptions01">
            <summary>Establecer el stub de ColoredConsoleAppender.ActivateOptions()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubColoredConsoleAppender.AddFilter(log4net.Filter.IFilter)">
            <summary>Establecer el stub de AppenderSkeleton.AddFilter(IFilter filter)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubColoredConsoleAppender.AddFilterIFilter">
            <summary>Establecer el stub de AppenderSkeleton.AddFilter(IFilter filter)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubColoredConsoleAppender.Append(log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de ColoredConsoleAppender.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubColoredConsoleAppender.Append(log4net.Core.LoggingEvent[])">
            <summary>Establecer el stub de AppenderSkeleton.Append(LoggingEvent[] loggingEvents)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubColoredConsoleAppender.AppendLoggingEvent">
            <summary>Establecer el stub de ColoredConsoleAppender.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubColoredConsoleAppender.AppendLoggingEventArray">
            <summary>Establecer el stub de AppenderSkeleton.Append(LoggingEvent[] loggingEvents)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubColoredConsoleAppender.AttachBackingFieldToErrorHandler">
            <summary>Asocia delegados para emular StubColoredConsoleAppender.ErrorHandler como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubColoredConsoleAppender.AttachBackingFieldToLayout">
            <summary>Asocia delegados para emular StubColoredConsoleAppender.Layout como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubColoredConsoleAppender.AttachBackingFieldToTarget">
            <summary>Asocia delegados para emular StubColoredConsoleAppender.Target como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubColoredConsoleAppender.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubColoredConsoleAppender.ClearFilters">
            <summary>Establecer el stub de AppenderSkeleton.ClearFilters()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubColoredConsoleAppender.ClearFilters01">
            <summary>Establecer el stub de AppenderSkeleton.ClearFilters()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubColoredConsoleAppender.ErrorHandler">
            <summary>Establecer el stub de AppenderSkeleton.get_ErrorHandler()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubColoredConsoleAppender.ErrorHandlerGet">
            <summary>Establecer el stub de AppenderSkeleton.get_ErrorHandler()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubColoredConsoleAppender.ErrorHandlerSetIErrorHandler">
            <summary>Establecer el stub de AppenderSkeleton.set_ErrorHandler(IErrorHandler value)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubColoredConsoleAppender.FilterEvent(log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubColoredConsoleAppender.FilterEventLoggingEvent">
            <summary>Establecer el stub de AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubColoredConsoleAppender.FilterHead">
            <summary>Establecer el stub de AppenderSkeleton.get_FilterHead()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubColoredConsoleAppender.FilterHeadGet">
            <summary>Establecer el stub de AppenderSkeleton.get_FilterHead()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubColoredConsoleAppender.Flush(System.Int32)">
            <summary>Establecer el stub de AppenderSkeleton.Flush(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubColoredConsoleAppender.FlushInt32">
            <summary>Establecer el stub de AppenderSkeleton.Flush(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubColoredConsoleAppender.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubColoredConsoleAppender</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubColoredConsoleAppender.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubColoredConsoleAppender.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubColoredConsoleAppender.IsAsSevereAsThreshold(log4net.Core.Level)">
            <summary>Establecer el stub de AppenderSkeleton.IsAsSevereAsThreshold(Level level)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubColoredConsoleAppender.IsAsSevereAsThresholdLevel">
            <summary>Establecer el stub de AppenderSkeleton.IsAsSevereAsThreshold(Level level)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubColoredConsoleAppender.Layout">
            <summary>Establecer el stub de AppenderSkeleton.get_Layout()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubColoredConsoleAppender.LayoutGet">
            <summary>Establecer el stub de AppenderSkeleton.get_Layout()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubColoredConsoleAppender.LayoutSetILayout">
            <summary>Establecer el stub de AppenderSkeleton.set_Layout(ILayout value)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubColoredConsoleAppender.OnClose">
            <summary>Establecer el stub de AppenderSkeleton.OnClose()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubColoredConsoleAppender.OnClose01">
            <summary>Establecer el stub de AppenderSkeleton.OnClose()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubColoredConsoleAppender.PreAppendCheck">
            <summary>Establecer el stub de AppenderSkeleton.PreAppendCheck()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubColoredConsoleAppender.PreAppendCheck01">
            <summary>Establecer el stub de AppenderSkeleton.PreAppendCheck()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubColoredConsoleAppender.RequiresLayout">
            <summary>Establecer el stub de ColoredConsoleAppender.get_RequiresLayout()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubColoredConsoleAppender.RequiresLayoutGet">
            <summary>Establecer el stub de ColoredConsoleAppender.get_RequiresLayout()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubColoredConsoleAppender.Target">
            <summary>Establecer el stub de ColoredConsoleAppender.get_Target()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubColoredConsoleAppender.TargetGet">
            <summary>Establecer el stub de ColoredConsoleAppender.get_Target()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubColoredConsoleAppender.TargetSetString">
            <summary>Establecer el stub de ColoredConsoleAppender.set_Target(String value)</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.StubConsoleAppender">
            <summary>Tipo stub de log4net.Appender.ConsoleAppender</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubConsoleAppender.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubConsoleAppender.#ctor(log4net.Layout.ILayout)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubConsoleAppender.#ctor(log4net.Layout.ILayout,System.Boolean)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubConsoleAppender.ActivateOptions">
            <summary>Establecer el stub de AppenderSkeleton.ActivateOptions()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubConsoleAppender.ActivateOptions01">
            <summary>Establecer el stub de AppenderSkeleton.ActivateOptions()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubConsoleAppender.AddFilter(log4net.Filter.IFilter)">
            <summary>Establecer el stub de AppenderSkeleton.AddFilter(IFilter filter)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubConsoleAppender.AddFilterIFilter">
            <summary>Establecer el stub de AppenderSkeleton.AddFilter(IFilter filter)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubConsoleAppender.Append(log4net.Core.LoggingEvent[])">
            <summary>Establecer el stub de AppenderSkeleton.Append(LoggingEvent[] loggingEvents)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubConsoleAppender.Append(log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de ConsoleAppender.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubConsoleAppender.AppendLoggingEvent">
            <summary>Establecer el stub de ConsoleAppender.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubConsoleAppender.AppendLoggingEventArray">
            <summary>Establecer el stub de AppenderSkeleton.Append(LoggingEvent[] loggingEvents)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubConsoleAppender.AttachBackingFieldToErrorHandler">
            <summary>Asocia delegados para emular StubConsoleAppender.ErrorHandler como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubConsoleAppender.AttachBackingFieldToLayout">
            <summary>Asocia delegados para emular StubConsoleAppender.Layout como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubConsoleAppender.AttachBackingFieldToTarget">
            <summary>Asocia delegados para emular StubConsoleAppender.Target como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubConsoleAppender.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubConsoleAppender.ClearFilters">
            <summary>Establecer el stub de AppenderSkeleton.ClearFilters()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubConsoleAppender.ClearFilters01">
            <summary>Establecer el stub de AppenderSkeleton.ClearFilters()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubConsoleAppender.ErrorHandler">
            <summary>Establecer el stub de AppenderSkeleton.get_ErrorHandler()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubConsoleAppender.ErrorHandlerGet">
            <summary>Establecer el stub de AppenderSkeleton.get_ErrorHandler()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubConsoleAppender.ErrorHandlerSetIErrorHandler">
            <summary>Establecer el stub de AppenderSkeleton.set_ErrorHandler(IErrorHandler value)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubConsoleAppender.FilterEvent(log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubConsoleAppender.FilterEventLoggingEvent">
            <summary>Establecer el stub de AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubConsoleAppender.FilterHead">
            <summary>Establecer el stub de AppenderSkeleton.get_FilterHead()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubConsoleAppender.FilterHeadGet">
            <summary>Establecer el stub de AppenderSkeleton.get_FilterHead()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubConsoleAppender.Flush(System.Int32)">
            <summary>Establecer el stub de AppenderSkeleton.Flush(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubConsoleAppender.FlushInt32">
            <summary>Establecer el stub de AppenderSkeleton.Flush(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubConsoleAppender.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubConsoleAppender</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubConsoleAppender.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubConsoleAppender.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubConsoleAppender.IsAsSevereAsThreshold(log4net.Core.Level)">
            <summary>Establecer el stub de AppenderSkeleton.IsAsSevereAsThreshold(Level level)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubConsoleAppender.IsAsSevereAsThresholdLevel">
            <summary>Establecer el stub de AppenderSkeleton.IsAsSevereAsThreshold(Level level)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubConsoleAppender.Layout">
            <summary>Establecer el stub de AppenderSkeleton.get_Layout()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubConsoleAppender.LayoutGet">
            <summary>Establecer el stub de AppenderSkeleton.get_Layout()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubConsoleAppender.LayoutSetILayout">
            <summary>Establecer el stub de AppenderSkeleton.set_Layout(ILayout value)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubConsoleAppender.OnClose">
            <summary>Establecer el stub de AppenderSkeleton.OnClose()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubConsoleAppender.OnClose01">
            <summary>Establecer el stub de AppenderSkeleton.OnClose()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubConsoleAppender.PreAppendCheck">
            <summary>Establecer el stub de AppenderSkeleton.PreAppendCheck()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubConsoleAppender.PreAppendCheck01">
            <summary>Establecer el stub de AppenderSkeleton.PreAppendCheck()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubConsoleAppender.RequiresLayout">
            <summary>Establecer el stub de ConsoleAppender.get_RequiresLayout()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubConsoleAppender.RequiresLayoutGet">
            <summary>Establecer el stub de ConsoleAppender.get_RequiresLayout()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubConsoleAppender.Target">
            <summary>Establecer el stub de ConsoleAppender.get_Target()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubConsoleAppender.TargetGet">
            <summary>Establecer el stub de ConsoleAppender.get_Target()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubConsoleAppender.TargetSetString">
            <summary>Establecer el stub de ConsoleAppender.set_Target(String value)</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.StubDebugAppender">
            <summary>Tipo stub de log4net.Appender.DebugAppender</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubDebugAppender.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubDebugAppender.#ctor(log4net.Layout.ILayout)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubDebugAppender.ActivateOptions">
            <summary>Establecer el stub de AppenderSkeleton.ActivateOptions()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubDebugAppender.ActivateOptions01">
            <summary>Establecer el stub de AppenderSkeleton.ActivateOptions()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubDebugAppender.AddFilter(log4net.Filter.IFilter)">
            <summary>Establecer el stub de AppenderSkeleton.AddFilter(IFilter filter)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubDebugAppender.AddFilterIFilter">
            <summary>Establecer el stub de AppenderSkeleton.AddFilter(IFilter filter)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubDebugAppender.Append(log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de DebugAppender.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubDebugAppender.Append(log4net.Core.LoggingEvent[])">
            <summary>Establecer el stub de AppenderSkeleton.Append(LoggingEvent[] loggingEvents)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubDebugAppender.AppendLoggingEvent">
            <summary>Establecer el stub de DebugAppender.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubDebugAppender.AppendLoggingEventArray">
            <summary>Establecer el stub de AppenderSkeleton.Append(LoggingEvent[] loggingEvents)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubDebugAppender.AttachBackingFieldToErrorHandler">
            <summary>Asocia delegados para emular StubDebugAppender.ErrorHandler como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubDebugAppender.AttachBackingFieldToLayout">
            <summary>Asocia delegados para emular StubDebugAppender.Layout como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubDebugAppender.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubDebugAppender.ClearFilters">
            <summary>Establecer el stub de AppenderSkeleton.ClearFilters()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubDebugAppender.ClearFilters01">
            <summary>Establecer el stub de AppenderSkeleton.ClearFilters()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubDebugAppender.ErrorHandler">
            <summary>Establecer el stub de AppenderSkeleton.get_ErrorHandler()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubDebugAppender.ErrorHandlerGet">
            <summary>Establecer el stub de AppenderSkeleton.get_ErrorHandler()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubDebugAppender.ErrorHandlerSetIErrorHandler">
            <summary>Establecer el stub de AppenderSkeleton.set_ErrorHandler(IErrorHandler value)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubDebugAppender.FilterEvent(log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubDebugAppender.FilterEventLoggingEvent">
            <summary>Establecer el stub de AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubDebugAppender.FilterHead">
            <summary>Establecer el stub de AppenderSkeleton.get_FilterHead()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubDebugAppender.FilterHeadGet">
            <summary>Establecer el stub de AppenderSkeleton.get_FilterHead()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubDebugAppender.Flush(System.Int32)">
            <summary>Establecer el stub de DebugAppender.Flush(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubDebugAppender.FlushInt32">
            <summary>Establecer el stub de DebugAppender.Flush(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubDebugAppender.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubDebugAppender</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubDebugAppender.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubDebugAppender.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubDebugAppender.IsAsSevereAsThreshold(log4net.Core.Level)">
            <summary>Establecer el stub de AppenderSkeleton.IsAsSevereAsThreshold(Level level)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubDebugAppender.IsAsSevereAsThresholdLevel">
            <summary>Establecer el stub de AppenderSkeleton.IsAsSevereAsThreshold(Level level)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubDebugAppender.Layout">
            <summary>Establecer el stub de AppenderSkeleton.get_Layout()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubDebugAppender.LayoutGet">
            <summary>Establecer el stub de AppenderSkeleton.get_Layout()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubDebugAppender.LayoutSetILayout">
            <summary>Establecer el stub de AppenderSkeleton.set_Layout(ILayout value)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubDebugAppender.OnClose">
            <summary>Establecer el stub de AppenderSkeleton.OnClose()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubDebugAppender.OnClose01">
            <summary>Establecer el stub de AppenderSkeleton.OnClose()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubDebugAppender.PreAppendCheck">
            <summary>Establecer el stub de AppenderSkeleton.PreAppendCheck()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubDebugAppender.PreAppendCheck01">
            <summary>Establecer el stub de AppenderSkeleton.PreAppendCheck()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubDebugAppender.RequiresLayout">
            <summary>Establecer el stub de DebugAppender.get_RequiresLayout()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubDebugAppender.RequiresLayoutGet">
            <summary>Establecer el stub de DebugAppender.get_RequiresLayout()</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.StubEventLogAppender">
            <summary>Tipo stub de log4net.Appender.EventLogAppender</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubEventLogAppender.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubEventLogAppender.#ctor(log4net.Layout.ILayout)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubEventLogAppender.ActivateOptions">
            <summary>Establecer el stub de EventLogAppender.ActivateOptions()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubEventLogAppender.ActivateOptions01">
            <summary>Establecer el stub de EventLogAppender.ActivateOptions()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubEventLogAppender.AddFilter(log4net.Filter.IFilter)">
            <summary>Establecer el stub de AppenderSkeleton.AddFilter(IFilter filter)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubEventLogAppender.AddFilterIFilter">
            <summary>Establecer el stub de AppenderSkeleton.AddFilter(IFilter filter)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubEventLogAppender.Append(log4net.Core.LoggingEvent[])">
            <summary>Establecer el stub de AppenderSkeleton.Append(LoggingEvent[] loggingEvents)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubEventLogAppender.Append(log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de EventLogAppender.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubEventLogAppender.AppendLoggingEvent">
            <summary>Establecer el stub de EventLogAppender.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubEventLogAppender.AppendLoggingEventArray">
            <summary>Establecer el stub de AppenderSkeleton.Append(LoggingEvent[] loggingEvents)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubEventLogAppender.AttachBackingFieldToErrorHandler">
            <summary>Asocia delegados para emular StubEventLogAppender.ErrorHandler como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubEventLogAppender.AttachBackingFieldToLayout">
            <summary>Asocia delegados para emular StubEventLogAppender.Layout como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubEventLogAppender.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubEventLogAppender.ClearFilters">
            <summary>Establecer el stub de AppenderSkeleton.ClearFilters()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubEventLogAppender.ClearFilters01">
            <summary>Establecer el stub de AppenderSkeleton.ClearFilters()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubEventLogAppender.ErrorHandler">
            <summary>Establecer el stub de AppenderSkeleton.get_ErrorHandler()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubEventLogAppender.ErrorHandlerGet">
            <summary>Establecer el stub de AppenderSkeleton.get_ErrorHandler()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubEventLogAppender.ErrorHandlerSetIErrorHandler">
            <summary>Establecer el stub de AppenderSkeleton.set_ErrorHandler(IErrorHandler value)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubEventLogAppender.FilterEvent(log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubEventLogAppender.FilterEventLoggingEvent">
            <summary>Establecer el stub de AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubEventLogAppender.FilterHead">
            <summary>Establecer el stub de AppenderSkeleton.get_FilterHead()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubEventLogAppender.FilterHeadGet">
            <summary>Establecer el stub de AppenderSkeleton.get_FilterHead()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubEventLogAppender.Flush(System.Int32)">
            <summary>Establecer el stub de AppenderSkeleton.Flush(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubEventLogAppender.FlushInt32">
            <summary>Establecer el stub de AppenderSkeleton.Flush(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubEventLogAppender.GetEntryType(log4net.Core.Level)">
            <summary>Establecer el stub de EventLogAppender.GetEntryType(Level level)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubEventLogAppender.GetEntryTypeLevel">
            <summary>Establecer el stub de EventLogAppender.GetEntryType(Level level)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubEventLogAppender.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubEventLogAppender</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubEventLogAppender.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubEventLogAppender.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubEventLogAppender.IsAsSevereAsThreshold(log4net.Core.Level)">
            <summary>Establecer el stub de AppenderSkeleton.IsAsSevereAsThreshold(Level level)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubEventLogAppender.IsAsSevereAsThresholdLevel">
            <summary>Establecer el stub de AppenderSkeleton.IsAsSevereAsThreshold(Level level)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubEventLogAppender.Layout">
            <summary>Establecer el stub de AppenderSkeleton.get_Layout()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubEventLogAppender.LayoutGet">
            <summary>Establecer el stub de AppenderSkeleton.get_Layout()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubEventLogAppender.LayoutSetILayout">
            <summary>Establecer el stub de AppenderSkeleton.set_Layout(ILayout value)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubEventLogAppender.OnClose">
            <summary>Establecer el stub de AppenderSkeleton.OnClose()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubEventLogAppender.OnClose01">
            <summary>Establecer el stub de AppenderSkeleton.OnClose()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubEventLogAppender.PreAppendCheck">
            <summary>Establecer el stub de AppenderSkeleton.PreAppendCheck()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubEventLogAppender.PreAppendCheck01">
            <summary>Establecer el stub de AppenderSkeleton.PreAppendCheck()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubEventLogAppender.RequiresLayout">
            <summary>Establecer el stub de EventLogAppender.get_RequiresLayout()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubEventLogAppender.RequiresLayoutGet">
            <summary>Establecer el stub de EventLogAppender.get_RequiresLayout()</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.StubFileAppender">
            <summary>Tipo stub de log4net.Appender.FileAppender</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubFileAppender.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubFileAppender.#ctor(log4net.Layout.ILayout,System.String)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubFileAppender.#ctor(log4net.Layout.ILayout,System.String,System.Boolean)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubFileAppender.ActivateOptions">
            <summary>Establecer el stub de FileAppender.ActivateOptions()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubFileAppender.ActivateOptions01">
            <summary>Establecer el stub de FileAppender.ActivateOptions()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubFileAppender.AddFilter(log4net.Filter.IFilter)">
            <summary>Establecer el stub de AppenderSkeleton.AddFilter(IFilter filter)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubFileAppender.AddFilterIFilter">
            <summary>Establecer el stub de AppenderSkeleton.AddFilter(IFilter filter)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubFileAppender.Append(log4net.Core.LoggingEvent[])">
            <summary>Establecer el stub de FileAppender.Append(LoggingEvent[] loggingEvents)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubFileAppender.Append(log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de FileAppender.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubFileAppender.AppendLoggingEvent">
            <summary>Establecer el stub de FileAppender.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubFileAppender.AppendLoggingEventArray">
            <summary>Establecer el stub de FileAppender.Append(LoggingEvent[] loggingEvents)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubFileAppender.AttachBackingFieldToErrorHandler">
            <summary>Asocia delegados para emular StubFileAppender.ErrorHandler como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubFileAppender.AttachBackingFieldToFile">
            <summary>Asocia delegados para emular StubFileAppender.File como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubFileAppender.AttachBackingFieldToLayout">
            <summary>Asocia delegados para emular StubFileAppender.Layout como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubFileAppender.AttachBackingFieldToWriter">
            <summary>Asocia delegados para emular StubFileAppender.Writer como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubFileAppender.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubFileAppender.ClearFilters">
            <summary>Establecer el stub de AppenderSkeleton.ClearFilters()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubFileAppender.ClearFilters01">
            <summary>Establecer el stub de AppenderSkeleton.ClearFilters()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubFileAppender.CloseWriter">
            <summary>Establecer el stub de FileAppender.CloseWriter()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubFileAppender.CloseWriter01">
            <summary>Establecer el stub de FileAppender.CloseWriter()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubFileAppender.ErrorHandler">
            <summary>Establecer el stub de TextWriterAppender.get_ErrorHandler()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubFileAppender.ErrorHandlerGet">
            <summary>Establecer el stub de TextWriterAppender.get_ErrorHandler()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubFileAppender.ErrorHandlerSetIErrorHandler">
            <summary>Establecer el stub de TextWriterAppender.set_ErrorHandler(IErrorHandler value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubFileAppender.File">
            <summary>Establecer el stub de FileAppender.get_File()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubFileAppender.FileGet">
            <summary>Establecer el stub de FileAppender.get_File()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubFileAppender.FileSetString">
            <summary>Establecer el stub de FileAppender.set_File(String value)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubFileAppender.FilterEvent(log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubFileAppender.FilterEventLoggingEvent">
            <summary>Establecer el stub de AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubFileAppender.FilterHead">
            <summary>Establecer el stub de AppenderSkeleton.get_FilterHead()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubFileAppender.FilterHeadGet">
            <summary>Establecer el stub de AppenderSkeleton.get_FilterHead()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubFileAppender.Flush(System.Int32)">
            <summary>Establecer el stub de TextWriterAppender.Flush(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubFileAppender.FlushInt32">
            <summary>Establecer el stub de TextWriterAppender.Flush(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubFileAppender.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubFileAppender</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubFileAppender.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubFileAppender.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubFileAppender.IsAsSevereAsThreshold(log4net.Core.Level)">
            <summary>Establecer el stub de AppenderSkeleton.IsAsSevereAsThreshold(Level level)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubFileAppender.IsAsSevereAsThresholdLevel">
            <summary>Establecer el stub de AppenderSkeleton.IsAsSevereAsThreshold(Level level)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubFileAppender.Layout">
            <summary>Establecer el stub de AppenderSkeleton.get_Layout()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubFileAppender.LayoutGet">
            <summary>Establecer el stub de AppenderSkeleton.get_Layout()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubFileAppender.LayoutSetILayout">
            <summary>Establecer el stub de AppenderSkeleton.set_Layout(ILayout value)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubFileAppender.OnClose">
            <summary>Establecer el stub de FileAppender.OnClose()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubFileAppender.OnClose01">
            <summary>Establecer el stub de FileAppender.OnClose()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubFileAppender.OpenFile(System.String,System.Boolean)">
            <summary>Establecer el stub de FileAppender.OpenFile(String fileName, Boolean append)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubFileAppender.OpenFileStringBoolean">
            <summary>Establecer el stub de FileAppender.OpenFile(String fileName, Boolean append)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubFileAppender.PreAppendCheck">
            <summary>Establecer el stub de TextWriterAppender.PreAppendCheck()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubFileAppender.PreAppendCheck01">
            <summary>Establecer el stub de TextWriterAppender.PreAppendCheck()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubFileAppender.PrepareWriter">
            <summary>Establecer el stub de FileAppender.PrepareWriter()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubFileAppender.PrepareWriter01">
            <summary>Establecer el stub de FileAppender.PrepareWriter()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubFileAppender.RequiresLayout">
            <summary>Establecer el stub de TextWriterAppender.get_RequiresLayout()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubFileAppender.RequiresLayoutGet">
            <summary>Establecer el stub de TextWriterAppender.get_RequiresLayout()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubFileAppender.Reset">
            <summary>Establecer el stub de FileAppender.Reset()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubFileAppender.Reset01">
            <summary>Establecer el stub de FileAppender.Reset()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubFileAppender.SafeOpenFile(System.String,System.Boolean)">
            <summary>Establecer el stub de FileAppender.SafeOpenFile(String fileName, Boolean append)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubFileAppender.SafeOpenFileStringBoolean">
            <summary>Establecer el stub de FileAppender.SafeOpenFile(String fileName, Boolean append)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubFileAppender.SetQWForFiles(System.IO.Stream)">
            <summary>Establecer el stub de FileAppender.SetQWForFiles(Stream fileStream)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubFileAppender.SetQWForFiles(System.IO.TextWriter)">
            <summary>Establecer el stub de FileAppender.SetQWForFiles(TextWriter writer)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubFileAppender.SetQWForFilesStream">
            <summary>Establecer el stub de FileAppender.SetQWForFiles(Stream fileStream)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubFileAppender.SetQWForFilesTextWriter">
            <summary>Establecer el stub de FileAppender.SetQWForFiles(TextWriter writer)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubFileAppender.WriteFooter">
            <summary>Establecer el stub de FileAppender.WriteFooter()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubFileAppender.WriteFooter01">
            <summary>Establecer el stub de FileAppender.WriteFooter()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubFileAppender.WriteFooterAndCloseWriter">
            <summary>Establecer el stub de TextWriterAppender.WriteFooterAndCloseWriter()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubFileAppender.WriteFooterAndCloseWriter01">
            <summary>Establecer el stub de TextWriterAppender.WriteFooterAndCloseWriter()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubFileAppender.WriteHeader">
            <summary>Establecer el stub de FileAppender.WriteHeader()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubFileAppender.WriteHeader01">
            <summary>Establecer el stub de FileAppender.WriteHeader()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubFileAppender.Writer">
            <summary>Establecer el stub de TextWriterAppender.get_Writer()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubFileAppender.WriterGet">
            <summary>Establecer el stub de TextWriterAppender.get_Writer()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubFileAppender.WriterSetTextWriter">
            <summary>Establecer el stub de TextWriterAppender.set_Writer(TextWriter value)</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.StubForwardingAppender">
            <summary>Tipo stub de log4net.Appender.ForwardingAppender</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubForwardingAppender.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubForwardingAppender.ActivateOptions">
            <summary>Establecer el stub de AppenderSkeleton.ActivateOptions()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubForwardingAppender.ActivateOptions01">
            <summary>Establecer el stub de AppenderSkeleton.ActivateOptions()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubForwardingAppender.AddAppender(log4net.Appender.IAppender)">
            <summary>Establecer el stub de ForwardingAppender.AddAppender(IAppender newAppender)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubForwardingAppender.AddAppenderIAppender">
            <summary>Establecer el stub de ForwardingAppender.AddAppender(IAppender newAppender)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubForwardingAppender.AddFilter(log4net.Filter.IFilter)">
            <summary>Establecer el stub de AppenderSkeleton.AddFilter(IFilter filter)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubForwardingAppender.AddFilterIFilter">
            <summary>Establecer el stub de AppenderSkeleton.AddFilter(IFilter filter)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubForwardingAppender.Append(log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de ForwardingAppender.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubForwardingAppender.Append(log4net.Core.LoggingEvent[])">
            <summary>Establecer el stub de ForwardingAppender.Append(LoggingEvent[] loggingEvents)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubForwardingAppender.AppendLoggingEvent">
            <summary>Establecer el stub de ForwardingAppender.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubForwardingAppender.AppendLoggingEventArray">
            <summary>Establecer el stub de ForwardingAppender.Append(LoggingEvent[] loggingEvents)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubForwardingAppender.Appenders">
            <summary>Establecer el stub de ForwardingAppender.get_Appenders()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubForwardingAppender.AppendersGet">
            <summary>Establecer el stub de ForwardingAppender.get_Appenders()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubForwardingAppender.AttachBackingFieldToErrorHandler">
            <summary>Asocia delegados para emular StubForwardingAppender.ErrorHandler como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubForwardingAppender.AttachBackingFieldToLayout">
            <summary>Asocia delegados para emular StubForwardingAppender.Layout como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubForwardingAppender.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubForwardingAppender.ClearFilters">
            <summary>Establecer el stub de AppenderSkeleton.ClearFilters()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubForwardingAppender.ClearFilters01">
            <summary>Establecer el stub de AppenderSkeleton.ClearFilters()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubForwardingAppender.ErrorHandler">
            <summary>Establecer el stub de AppenderSkeleton.get_ErrorHandler()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubForwardingAppender.ErrorHandlerGet">
            <summary>Establecer el stub de AppenderSkeleton.get_ErrorHandler()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubForwardingAppender.ErrorHandlerSetIErrorHandler">
            <summary>Establecer el stub de AppenderSkeleton.set_ErrorHandler(IErrorHandler value)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubForwardingAppender.FilterEvent(log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubForwardingAppender.FilterEventLoggingEvent">
            <summary>Establecer el stub de AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubForwardingAppender.FilterHead">
            <summary>Establecer el stub de AppenderSkeleton.get_FilterHead()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubForwardingAppender.FilterHeadGet">
            <summary>Establecer el stub de AppenderSkeleton.get_FilterHead()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubForwardingAppender.Flush(System.Int32)">
            <summary>Establecer el stub de AppenderSkeleton.Flush(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubForwardingAppender.FlushInt32">
            <summary>Establecer el stub de AppenderSkeleton.Flush(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubForwardingAppender.GetAppender(System.String)">
            <summary>Establecer el stub de ForwardingAppender.GetAppender(String name)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubForwardingAppender.GetAppenderString">
            <summary>Establecer el stub de ForwardingAppender.GetAppender(String name)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubForwardingAppender.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubForwardingAppender</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubForwardingAppender.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubForwardingAppender.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubForwardingAppender.IsAsSevereAsThreshold(log4net.Core.Level)">
            <summary>Establecer el stub de AppenderSkeleton.IsAsSevereAsThreshold(Level level)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubForwardingAppender.IsAsSevereAsThresholdLevel">
            <summary>Establecer el stub de AppenderSkeleton.IsAsSevereAsThreshold(Level level)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubForwardingAppender.Layout">
            <summary>Establecer el stub de AppenderSkeleton.get_Layout()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubForwardingAppender.LayoutGet">
            <summary>Establecer el stub de AppenderSkeleton.get_Layout()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubForwardingAppender.LayoutSetILayout">
            <summary>Establecer el stub de AppenderSkeleton.set_Layout(ILayout value)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubForwardingAppender.OnClose">
            <summary>Establecer el stub de ForwardingAppender.OnClose()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubForwardingAppender.OnClose01">
            <summary>Establecer el stub de ForwardingAppender.OnClose()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubForwardingAppender.PreAppendCheck">
            <summary>Establecer el stub de AppenderSkeleton.PreAppendCheck()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubForwardingAppender.PreAppendCheck01">
            <summary>Establecer el stub de AppenderSkeleton.PreAppendCheck()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubForwardingAppender.RemoveAllAppenders">
            <summary>Establecer el stub de ForwardingAppender.RemoveAllAppenders()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubForwardingAppender.RemoveAllAppenders01">
            <summary>Establecer el stub de ForwardingAppender.RemoveAllAppenders()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubForwardingAppender.RemoveAppender(log4net.Appender.IAppender)">
            <summary>Establecer el stub de ForwardingAppender.RemoveAppender(IAppender appender)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubForwardingAppender.RemoveAppender(System.String)">
            <summary>Establecer el stub de ForwardingAppender.RemoveAppender(String name)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubForwardingAppender.RemoveAppenderIAppender">
            <summary>Establecer el stub de ForwardingAppender.RemoveAppender(IAppender appender)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubForwardingAppender.RemoveAppenderString">
            <summary>Establecer el stub de ForwardingAppender.RemoveAppender(String name)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubForwardingAppender.RequiresLayout">
            <summary>Establecer el stub de AppenderSkeleton.get_RequiresLayout()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubForwardingAppender.RequiresLayoutGet">
            <summary>Establecer el stub de AppenderSkeleton.get_RequiresLayout()</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.StubIAppender">
            <summary>Tipo stub de log4net.Appender.IAppender</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubIAppender.#ctor">
            <summary>Inicializa una nueva instancia de type StubIAppender</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubIAppender.AttachBackingFieldToName">
            <summary>Asocia delegados para emular StubIAppender.Name como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubIAppender.Close">
            <summary>Establecer el stub de IAppender.Close()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubIAppender.DoAppendLoggingEvent">
            <summary>Establecer el stub de IAppender.DoAppend(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubIAppender.log4net#Appender#IAppender#Name">
            <summary>Establecer el stub de IAppender.get_Name()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubIAppender.NameGet">
            <summary>Establecer el stub de IAppender.get_Name()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubIAppender.NameSetString">
            <summary>Establecer el stub de IAppender.set_Name(String value)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubIAppender.log4net#Appender#IAppender#Close">
            <summary>Establecer el stub de IAppender.Close()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubIAppender.log4net#Appender#IAppender#DoAppend(log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de IAppender.DoAppend(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.StubIBulkAppender">
            <summary>Tipo stub de log4net.Appender.IBulkAppender</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubIBulkAppender.#ctor">
            <summary>Inicializa una nueva instancia de type StubIBulkAppender</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubIBulkAppender.AttachBackingFieldToName">
            <summary>Asocia delegados para emular StubIBulkAppender.Name como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubIBulkAppender.Close">
            <summary>Establecer el stub de IAppender.Close()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubIBulkAppender.DoAppendLoggingEvent">
            <summary>Establecer el stub de IAppender.DoAppend(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubIBulkAppender.DoAppendLoggingEventArray">
            <summary>Establecer el stub de IBulkAppender.DoAppend(LoggingEvent[] loggingEvents)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubIBulkAppender.log4net#Appender#IAppender#Name">
            <summary>Establecer el stub de IAppender.get_Name()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubIBulkAppender.NameGet">
            <summary>Establecer el stub de IAppender.get_Name()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubIBulkAppender.NameSetString">
            <summary>Establecer el stub de IAppender.set_Name(String value)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubIBulkAppender.log4net#Appender#IAppender#Close">
            <summary>Establecer el stub de IAppender.Close()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubIBulkAppender.log4net#Appender#IAppender#DoAppend(log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de IAppender.DoAppend(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubIBulkAppender.log4net#Appender#IBulkAppender#DoAppend(log4net.Core.LoggingEvent[])">
            <summary>Establecer el stub de IBulkAppender.DoAppend(LoggingEvent[] loggingEvents)</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.StubIFlushable">
            <summary>Tipo stub de log4net.Appender.IFlushable</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubIFlushable.#ctor">
            <summary>Inicializa una nueva instancia de type StubIFlushable</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubIFlushable.FlushInt32">
            <summary>Establecer el stub de IFlushable.Flush(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubIFlushable.log4net#Appender#IFlushable#Flush(System.Int32)">
            <summary>Establecer el stub de IFlushable.Flush(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.StubLocalSyslogAppender">
            <summary>Tipo stub de log4net.Appender.LocalSyslogAppender</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubLocalSyslogAppender.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubLocalSyslogAppender.ActivateOptions">
            <summary>Establecer el stub de LocalSyslogAppender.ActivateOptions()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubLocalSyslogAppender.ActivateOptions01">
            <summary>Establecer el stub de LocalSyslogAppender.ActivateOptions()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubLocalSyslogAppender.AddFilter(log4net.Filter.IFilter)">
            <summary>Establecer el stub de AppenderSkeleton.AddFilter(IFilter filter)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubLocalSyslogAppender.AddFilterIFilter">
            <summary>Establecer el stub de AppenderSkeleton.AddFilter(IFilter filter)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubLocalSyslogAppender.Append(log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de LocalSyslogAppender.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubLocalSyslogAppender.Append(log4net.Core.LoggingEvent[])">
            <summary>Establecer el stub de AppenderSkeleton.Append(LoggingEvent[] loggingEvents)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubLocalSyslogAppender.AppendLoggingEvent">
            <summary>Establecer el stub de LocalSyslogAppender.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubLocalSyslogAppender.AppendLoggingEventArray">
            <summary>Establecer el stub de AppenderSkeleton.Append(LoggingEvent[] loggingEvents)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubLocalSyslogAppender.AttachBackingFieldToErrorHandler">
            <summary>Asocia delegados para emular StubLocalSyslogAppender.ErrorHandler como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubLocalSyslogAppender.AttachBackingFieldToLayout">
            <summary>Asocia delegados para emular StubLocalSyslogAppender.Layout como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubLocalSyslogAppender.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubLocalSyslogAppender.ClearFilters">
            <summary>Establecer el stub de AppenderSkeleton.ClearFilters()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubLocalSyslogAppender.ClearFilters01">
            <summary>Establecer el stub de AppenderSkeleton.ClearFilters()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubLocalSyslogAppender.ErrorHandler">
            <summary>Establecer el stub de AppenderSkeleton.get_ErrorHandler()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubLocalSyslogAppender.ErrorHandlerGet">
            <summary>Establecer el stub de AppenderSkeleton.get_ErrorHandler()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubLocalSyslogAppender.ErrorHandlerSetIErrorHandler">
            <summary>Establecer el stub de AppenderSkeleton.set_ErrorHandler(IErrorHandler value)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubLocalSyslogAppender.FilterEvent(log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubLocalSyslogAppender.FilterEventLoggingEvent">
            <summary>Establecer el stub de AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubLocalSyslogAppender.FilterHead">
            <summary>Establecer el stub de AppenderSkeleton.get_FilterHead()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubLocalSyslogAppender.FilterHeadGet">
            <summary>Establecer el stub de AppenderSkeleton.get_FilterHead()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubLocalSyslogAppender.Flush(System.Int32)">
            <summary>Establecer el stub de AppenderSkeleton.Flush(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubLocalSyslogAppender.FlushInt32">
            <summary>Establecer el stub de AppenderSkeleton.Flush(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubLocalSyslogAppender.GetSeverity(log4net.Core.Level)">
            <summary>Establecer el stub de LocalSyslogAppender.GetSeverity(Level level)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubLocalSyslogAppender.GetSeverityLevel">
            <summary>Establecer el stub de LocalSyslogAppender.GetSeverity(Level level)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubLocalSyslogAppender.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubLocalSyslogAppender</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubLocalSyslogAppender.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubLocalSyslogAppender.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubLocalSyslogAppender.IsAsSevereAsThreshold(log4net.Core.Level)">
            <summary>Establecer el stub de AppenderSkeleton.IsAsSevereAsThreshold(Level level)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubLocalSyslogAppender.IsAsSevereAsThresholdLevel">
            <summary>Establecer el stub de AppenderSkeleton.IsAsSevereAsThreshold(Level level)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubLocalSyslogAppender.Layout">
            <summary>Establecer el stub de AppenderSkeleton.get_Layout()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubLocalSyslogAppender.LayoutGet">
            <summary>Establecer el stub de AppenderSkeleton.get_Layout()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubLocalSyslogAppender.LayoutSetILayout">
            <summary>Establecer el stub de AppenderSkeleton.set_Layout(ILayout value)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubLocalSyslogAppender.OnClose">
            <summary>Establecer el stub de LocalSyslogAppender.OnClose()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubLocalSyslogAppender.OnClose01">
            <summary>Establecer el stub de LocalSyslogAppender.OnClose()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubLocalSyslogAppender.PreAppendCheck">
            <summary>Establecer el stub de AppenderSkeleton.PreAppendCheck()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubLocalSyslogAppender.PreAppendCheck01">
            <summary>Establecer el stub de AppenderSkeleton.PreAppendCheck()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubLocalSyslogAppender.RequiresLayout">
            <summary>Establecer el stub de LocalSyslogAppender.get_RequiresLayout()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubLocalSyslogAppender.RequiresLayoutGet">
            <summary>Establecer el stub de LocalSyslogAppender.get_RequiresLayout()</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.StubManagedColoredConsoleAppender">
            <summary>Tipo stub de log4net.Appender.ManagedColoredConsoleAppender</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubManagedColoredConsoleAppender.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubManagedColoredConsoleAppender.ActivateOptions">
            <summary>Establecer el stub de ManagedColoredConsoleAppender.ActivateOptions()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubManagedColoredConsoleAppender.ActivateOptions01">
            <summary>Establecer el stub de ManagedColoredConsoleAppender.ActivateOptions()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubManagedColoredConsoleAppender.AddFilter(log4net.Filter.IFilter)">
            <summary>Establecer el stub de AppenderSkeleton.AddFilter(IFilter filter)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubManagedColoredConsoleAppender.AddFilterIFilter">
            <summary>Establecer el stub de AppenderSkeleton.AddFilter(IFilter filter)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubManagedColoredConsoleAppender.Append(log4net.Core.LoggingEvent[])">
            <summary>Establecer el stub de AppenderSkeleton.Append(LoggingEvent[] loggingEvents)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubManagedColoredConsoleAppender.Append(log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de ManagedColoredConsoleAppender.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubManagedColoredConsoleAppender.AppendLoggingEvent">
            <summary>Establecer el stub de ManagedColoredConsoleAppender.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubManagedColoredConsoleAppender.AppendLoggingEventArray">
            <summary>Establecer el stub de AppenderSkeleton.Append(LoggingEvent[] loggingEvents)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubManagedColoredConsoleAppender.AttachBackingFieldToErrorHandler">
            <summary>Asocia delegados para emular StubManagedColoredConsoleAppender.ErrorHandler como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubManagedColoredConsoleAppender.AttachBackingFieldToLayout">
            <summary>Asocia delegados para emular StubManagedColoredConsoleAppender.Layout como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubManagedColoredConsoleAppender.AttachBackingFieldToTarget">
            <summary>Asocia delegados para emular StubManagedColoredConsoleAppender.Target como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubManagedColoredConsoleAppender.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubManagedColoredConsoleAppender.ClearFilters">
            <summary>Establecer el stub de AppenderSkeleton.ClearFilters()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubManagedColoredConsoleAppender.ClearFilters01">
            <summary>Establecer el stub de AppenderSkeleton.ClearFilters()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubManagedColoredConsoleAppender.ErrorHandler">
            <summary>Establecer el stub de AppenderSkeleton.get_ErrorHandler()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubManagedColoredConsoleAppender.ErrorHandlerGet">
            <summary>Establecer el stub de AppenderSkeleton.get_ErrorHandler()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubManagedColoredConsoleAppender.ErrorHandlerSetIErrorHandler">
            <summary>Establecer el stub de AppenderSkeleton.set_ErrorHandler(IErrorHandler value)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubManagedColoredConsoleAppender.FilterEvent(log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubManagedColoredConsoleAppender.FilterEventLoggingEvent">
            <summary>Establecer el stub de AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubManagedColoredConsoleAppender.FilterHead">
            <summary>Establecer el stub de AppenderSkeleton.get_FilterHead()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubManagedColoredConsoleAppender.FilterHeadGet">
            <summary>Establecer el stub de AppenderSkeleton.get_FilterHead()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubManagedColoredConsoleAppender.Flush(System.Int32)">
            <summary>Establecer el stub de AppenderSkeleton.Flush(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubManagedColoredConsoleAppender.FlushInt32">
            <summary>Establecer el stub de AppenderSkeleton.Flush(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubManagedColoredConsoleAppender.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubManagedColoredConsoleAppender</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubManagedColoredConsoleAppender.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubManagedColoredConsoleAppender.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubManagedColoredConsoleAppender.IsAsSevereAsThreshold(log4net.Core.Level)">
            <summary>Establecer el stub de AppenderSkeleton.IsAsSevereAsThreshold(Level level)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubManagedColoredConsoleAppender.IsAsSevereAsThresholdLevel">
            <summary>Establecer el stub de AppenderSkeleton.IsAsSevereAsThreshold(Level level)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubManagedColoredConsoleAppender.Layout">
            <summary>Establecer el stub de AppenderSkeleton.get_Layout()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubManagedColoredConsoleAppender.LayoutGet">
            <summary>Establecer el stub de AppenderSkeleton.get_Layout()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubManagedColoredConsoleAppender.LayoutSetILayout">
            <summary>Establecer el stub de AppenderSkeleton.set_Layout(ILayout value)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubManagedColoredConsoleAppender.OnClose">
            <summary>Establecer el stub de AppenderSkeleton.OnClose()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubManagedColoredConsoleAppender.OnClose01">
            <summary>Establecer el stub de AppenderSkeleton.OnClose()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubManagedColoredConsoleAppender.PreAppendCheck">
            <summary>Establecer el stub de AppenderSkeleton.PreAppendCheck()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubManagedColoredConsoleAppender.PreAppendCheck01">
            <summary>Establecer el stub de AppenderSkeleton.PreAppendCheck()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubManagedColoredConsoleAppender.RequiresLayout">
            <summary>Establecer el stub de ManagedColoredConsoleAppender.get_RequiresLayout()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubManagedColoredConsoleAppender.RequiresLayoutGet">
            <summary>Establecer el stub de ManagedColoredConsoleAppender.get_RequiresLayout()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubManagedColoredConsoleAppender.Target">
            <summary>Establecer el stub de ManagedColoredConsoleAppender.get_Target()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubManagedColoredConsoleAppender.TargetGet">
            <summary>Establecer el stub de ManagedColoredConsoleAppender.get_Target()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubManagedColoredConsoleAppender.TargetSetString">
            <summary>Establecer el stub de ManagedColoredConsoleAppender.set_Target(String value)</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.StubMemoryAppender">
            <summary>Tipo stub de log4net.Appender.MemoryAppender</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubMemoryAppender.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubMemoryAppender.ActivateOptions">
            <summary>Establecer el stub de AppenderSkeleton.ActivateOptions()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubMemoryAppender.ActivateOptions01">
            <summary>Establecer el stub de AppenderSkeleton.ActivateOptions()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubMemoryAppender.AddFilter(log4net.Filter.IFilter)">
            <summary>Establecer el stub de AppenderSkeleton.AddFilter(IFilter filter)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubMemoryAppender.AddFilterIFilter">
            <summary>Establecer el stub de AppenderSkeleton.AddFilter(IFilter filter)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubMemoryAppender.Append(log4net.Core.LoggingEvent[])">
            <summary>Establecer el stub de AppenderSkeleton.Append(LoggingEvent[] loggingEvents)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubMemoryAppender.Append(log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de MemoryAppender.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubMemoryAppender.AppendLoggingEvent">
            <summary>Establecer el stub de MemoryAppender.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubMemoryAppender.AppendLoggingEventArray">
            <summary>Establecer el stub de AppenderSkeleton.Append(LoggingEvent[] loggingEvents)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubMemoryAppender.AttachBackingFieldToErrorHandler">
            <summary>Asocia delegados para emular StubMemoryAppender.ErrorHandler como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubMemoryAppender.AttachBackingFieldToFix">
            <summary>Asocia delegados para emular StubMemoryAppender.Fix como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubMemoryAppender.AttachBackingFieldToLayout">
            <summary>Asocia delegados para emular StubMemoryAppender.Layout como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubMemoryAppender.AttachBackingFieldToOnlyFixPartialEventData">
            <summary>Asocia delegados para emular StubMemoryAppender.OnlyFixPartialEventData como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubMemoryAppender.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubMemoryAppender.Clear">
            <summary>Establecer el stub de MemoryAppender.Clear()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubMemoryAppender.Clear01">
            <summary>Establecer el stub de MemoryAppender.Clear()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubMemoryAppender.ClearFilters">
            <summary>Establecer el stub de AppenderSkeleton.ClearFilters()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubMemoryAppender.ClearFilters01">
            <summary>Establecer el stub de AppenderSkeleton.ClearFilters()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubMemoryAppender.ErrorHandler">
            <summary>Establecer el stub de AppenderSkeleton.get_ErrorHandler()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubMemoryAppender.ErrorHandlerGet">
            <summary>Establecer el stub de AppenderSkeleton.get_ErrorHandler()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubMemoryAppender.ErrorHandlerSetIErrorHandler">
            <summary>Establecer el stub de AppenderSkeleton.set_ErrorHandler(IErrorHandler value)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubMemoryAppender.FilterEvent(log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubMemoryAppender.FilterEventLoggingEvent">
            <summary>Establecer el stub de AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubMemoryAppender.FilterHead">
            <summary>Establecer el stub de AppenderSkeleton.get_FilterHead()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubMemoryAppender.FilterHeadGet">
            <summary>Establecer el stub de AppenderSkeleton.get_FilterHead()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubMemoryAppender.Fix">
            <summary>Establecer el stub de MemoryAppender.get_Fix()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubMemoryAppender.FixGet">
            <summary>Establecer el stub de MemoryAppender.get_Fix()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubMemoryAppender.FixSetFixFlags">
            <summary>Establecer el stub de MemoryAppender.set_Fix(FixFlags value)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubMemoryAppender.Flush(System.Int32)">
            <summary>Establecer el stub de AppenderSkeleton.Flush(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubMemoryAppender.FlushInt32">
            <summary>Establecer el stub de AppenderSkeleton.Flush(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubMemoryAppender.GetEvents">
            <summary>Establecer el stub de MemoryAppender.GetEvents()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubMemoryAppender.GetEvents01">
            <summary>Establecer el stub de MemoryAppender.GetEvents()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubMemoryAppender.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubMemoryAppender</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubMemoryAppender.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubMemoryAppender.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubMemoryAppender.IsAsSevereAsThreshold(log4net.Core.Level)">
            <summary>Establecer el stub de AppenderSkeleton.IsAsSevereAsThreshold(Level level)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubMemoryAppender.IsAsSevereAsThresholdLevel">
            <summary>Establecer el stub de AppenderSkeleton.IsAsSevereAsThreshold(Level level)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubMemoryAppender.Layout">
            <summary>Establecer el stub de AppenderSkeleton.get_Layout()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubMemoryAppender.LayoutGet">
            <summary>Establecer el stub de AppenderSkeleton.get_Layout()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubMemoryAppender.LayoutSetILayout">
            <summary>Establecer el stub de AppenderSkeleton.set_Layout(ILayout value)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubMemoryAppender.OnClose">
            <summary>Establecer el stub de AppenderSkeleton.OnClose()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubMemoryAppender.OnClose01">
            <summary>Establecer el stub de AppenderSkeleton.OnClose()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubMemoryAppender.OnlyFixPartialEventData">
            <summary>Establecer el stub de MemoryAppender.get_OnlyFixPartialEventData()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubMemoryAppender.OnlyFixPartialEventDataGet">
            <summary>Establecer el stub de MemoryAppender.get_OnlyFixPartialEventData()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubMemoryAppender.OnlyFixPartialEventDataSetBoolean">
            <summary>Establecer el stub de MemoryAppender.set_OnlyFixPartialEventData(Boolean value)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubMemoryAppender.PopAllEvents">
            <summary>Establecer el stub de MemoryAppender.PopAllEvents()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubMemoryAppender.PopAllEvents01">
            <summary>Establecer el stub de MemoryAppender.PopAllEvents()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubMemoryAppender.PreAppendCheck">
            <summary>Establecer el stub de AppenderSkeleton.PreAppendCheck()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubMemoryAppender.PreAppendCheck01">
            <summary>Establecer el stub de AppenderSkeleton.PreAppendCheck()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubMemoryAppender.RequiresLayout">
            <summary>Establecer el stub de AppenderSkeleton.get_RequiresLayout()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubMemoryAppender.RequiresLayoutGet">
            <summary>Establecer el stub de AppenderSkeleton.get_RequiresLayout()</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.StubNetSendAppender">
            <summary>Tipo stub de log4net.Appender.NetSendAppender</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubNetSendAppender.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubNetSendAppender.ActivateOptions">
            <summary>Establecer el stub de NetSendAppender.ActivateOptions()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubNetSendAppender.ActivateOptions01">
            <summary>Establecer el stub de NetSendAppender.ActivateOptions()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubNetSendAppender.AddFilter(log4net.Filter.IFilter)">
            <summary>Establecer el stub de AppenderSkeleton.AddFilter(IFilter filter)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubNetSendAppender.AddFilterIFilter">
            <summary>Establecer el stub de AppenderSkeleton.AddFilter(IFilter filter)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubNetSendAppender.Append(log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de NetSendAppender.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubNetSendAppender.Append(log4net.Core.LoggingEvent[])">
            <summary>Establecer el stub de AppenderSkeleton.Append(LoggingEvent[] loggingEvents)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubNetSendAppender.AppendLoggingEvent">
            <summary>Establecer el stub de NetSendAppender.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubNetSendAppender.AppendLoggingEventArray">
            <summary>Establecer el stub de AppenderSkeleton.Append(LoggingEvent[] loggingEvents)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubNetSendAppender.AttachBackingFieldToErrorHandler">
            <summary>Asocia delegados para emular StubNetSendAppender.ErrorHandler como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubNetSendAppender.AttachBackingFieldToLayout">
            <summary>Asocia delegados para emular StubNetSendAppender.Layout como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubNetSendAppender.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubNetSendAppender.ClearFilters">
            <summary>Establecer el stub de AppenderSkeleton.ClearFilters()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubNetSendAppender.ClearFilters01">
            <summary>Establecer el stub de AppenderSkeleton.ClearFilters()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubNetSendAppender.ErrorHandler">
            <summary>Establecer el stub de AppenderSkeleton.get_ErrorHandler()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubNetSendAppender.ErrorHandlerGet">
            <summary>Establecer el stub de AppenderSkeleton.get_ErrorHandler()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubNetSendAppender.ErrorHandlerSetIErrorHandler">
            <summary>Establecer el stub de AppenderSkeleton.set_ErrorHandler(IErrorHandler value)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubNetSendAppender.FilterEvent(log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubNetSendAppender.FilterEventLoggingEvent">
            <summary>Establecer el stub de AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubNetSendAppender.FilterHead">
            <summary>Establecer el stub de AppenderSkeleton.get_FilterHead()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubNetSendAppender.FilterHeadGet">
            <summary>Establecer el stub de AppenderSkeleton.get_FilterHead()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubNetSendAppender.Flush(System.Int32)">
            <summary>Establecer el stub de AppenderSkeleton.Flush(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubNetSendAppender.FlushInt32">
            <summary>Establecer el stub de AppenderSkeleton.Flush(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubNetSendAppender.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubNetSendAppender</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubNetSendAppender.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubNetSendAppender.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubNetSendAppender.IsAsSevereAsThreshold(log4net.Core.Level)">
            <summary>Establecer el stub de AppenderSkeleton.IsAsSevereAsThreshold(Level level)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubNetSendAppender.IsAsSevereAsThresholdLevel">
            <summary>Establecer el stub de AppenderSkeleton.IsAsSevereAsThreshold(Level level)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubNetSendAppender.Layout">
            <summary>Establecer el stub de AppenderSkeleton.get_Layout()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubNetSendAppender.LayoutGet">
            <summary>Establecer el stub de AppenderSkeleton.get_Layout()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubNetSendAppender.LayoutSetILayout">
            <summary>Establecer el stub de AppenderSkeleton.set_Layout(ILayout value)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubNetSendAppender.OnClose">
            <summary>Establecer el stub de AppenderSkeleton.OnClose()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubNetSendAppender.OnClose01">
            <summary>Establecer el stub de AppenderSkeleton.OnClose()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubNetSendAppender.PreAppendCheck">
            <summary>Establecer el stub de AppenderSkeleton.PreAppendCheck()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubNetSendAppender.PreAppendCheck01">
            <summary>Establecer el stub de AppenderSkeleton.PreAppendCheck()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubNetSendAppender.RequiresLayout">
            <summary>Establecer el stub de NetSendAppender.get_RequiresLayout()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubNetSendAppender.RequiresLayoutGet">
            <summary>Establecer el stub de NetSendAppender.get_RequiresLayout()</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.StubOutputDebugStringAppender">
            <summary>Tipo stub de log4net.Appender.OutputDebugStringAppender</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubOutputDebugStringAppender.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubOutputDebugStringAppender.ActivateOptions">
            <summary>Establecer el stub de AppenderSkeleton.ActivateOptions()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubOutputDebugStringAppender.ActivateOptions01">
            <summary>Establecer el stub de AppenderSkeleton.ActivateOptions()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubOutputDebugStringAppender.AddFilter(log4net.Filter.IFilter)">
            <summary>Establecer el stub de AppenderSkeleton.AddFilter(IFilter filter)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubOutputDebugStringAppender.AddFilterIFilter">
            <summary>Establecer el stub de AppenderSkeleton.AddFilter(IFilter filter)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubOutputDebugStringAppender.Append(log4net.Core.LoggingEvent[])">
            <summary>Establecer el stub de AppenderSkeleton.Append(LoggingEvent[] loggingEvents)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubOutputDebugStringAppender.Append(log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de OutputDebugStringAppender.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubOutputDebugStringAppender.AppendLoggingEvent">
            <summary>Establecer el stub de OutputDebugStringAppender.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubOutputDebugStringAppender.AppendLoggingEventArray">
            <summary>Establecer el stub de AppenderSkeleton.Append(LoggingEvent[] loggingEvents)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubOutputDebugStringAppender.AttachBackingFieldToErrorHandler">
            <summary>Asocia delegados para emular StubOutputDebugStringAppender.ErrorHandler como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubOutputDebugStringAppender.AttachBackingFieldToLayout">
            <summary>Asocia delegados para emular StubOutputDebugStringAppender.Layout como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubOutputDebugStringAppender.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubOutputDebugStringAppender.ClearFilters">
            <summary>Establecer el stub de AppenderSkeleton.ClearFilters()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubOutputDebugStringAppender.ClearFilters01">
            <summary>Establecer el stub de AppenderSkeleton.ClearFilters()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubOutputDebugStringAppender.ErrorHandler">
            <summary>Establecer el stub de AppenderSkeleton.get_ErrorHandler()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubOutputDebugStringAppender.ErrorHandlerGet">
            <summary>Establecer el stub de AppenderSkeleton.get_ErrorHandler()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubOutputDebugStringAppender.ErrorHandlerSetIErrorHandler">
            <summary>Establecer el stub de AppenderSkeleton.set_ErrorHandler(IErrorHandler value)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubOutputDebugStringAppender.FilterEvent(log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubOutputDebugStringAppender.FilterEventLoggingEvent">
            <summary>Establecer el stub de AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubOutputDebugStringAppender.FilterHead">
            <summary>Establecer el stub de AppenderSkeleton.get_FilterHead()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubOutputDebugStringAppender.FilterHeadGet">
            <summary>Establecer el stub de AppenderSkeleton.get_FilterHead()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubOutputDebugStringAppender.Flush(System.Int32)">
            <summary>Establecer el stub de AppenderSkeleton.Flush(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubOutputDebugStringAppender.FlushInt32">
            <summary>Establecer el stub de AppenderSkeleton.Flush(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubOutputDebugStringAppender.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubOutputDebugStringAppender</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubOutputDebugStringAppender.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubOutputDebugStringAppender.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubOutputDebugStringAppender.IsAsSevereAsThreshold(log4net.Core.Level)">
            <summary>Establecer el stub de AppenderSkeleton.IsAsSevereAsThreshold(Level level)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubOutputDebugStringAppender.IsAsSevereAsThresholdLevel">
            <summary>Establecer el stub de AppenderSkeleton.IsAsSevereAsThreshold(Level level)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubOutputDebugStringAppender.Layout">
            <summary>Establecer el stub de AppenderSkeleton.get_Layout()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubOutputDebugStringAppender.LayoutGet">
            <summary>Establecer el stub de AppenderSkeleton.get_Layout()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubOutputDebugStringAppender.LayoutSetILayout">
            <summary>Establecer el stub de AppenderSkeleton.set_Layout(ILayout value)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubOutputDebugStringAppender.OnClose">
            <summary>Establecer el stub de AppenderSkeleton.OnClose()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubOutputDebugStringAppender.OnClose01">
            <summary>Establecer el stub de AppenderSkeleton.OnClose()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubOutputDebugStringAppender.PreAppendCheck">
            <summary>Establecer el stub de AppenderSkeleton.PreAppendCheck()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubOutputDebugStringAppender.PreAppendCheck01">
            <summary>Establecer el stub de AppenderSkeleton.PreAppendCheck()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubOutputDebugStringAppender.RequiresLayout">
            <summary>Establecer el stub de OutputDebugStringAppender.get_RequiresLayout()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubOutputDebugStringAppender.RequiresLayoutGet">
            <summary>Establecer el stub de OutputDebugStringAppender.get_RequiresLayout()</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.StubRemoteSyslogAppender">
            <summary>Tipo stub de log4net.Appender.RemoteSyslogAppender</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRemoteSyslogAppender.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRemoteSyslogAppender.ActivateOptions">
            <summary>Establecer el stub de RemoteSyslogAppender.ActivateOptions()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRemoteSyslogAppender.ActivateOptions01">
            <summary>Establecer el stub de RemoteSyslogAppender.ActivateOptions()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRemoteSyslogAppender.AddFilter(log4net.Filter.IFilter)">
            <summary>Establecer el stub de AppenderSkeleton.AddFilter(IFilter filter)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRemoteSyslogAppender.AddFilterIFilter">
            <summary>Establecer el stub de AppenderSkeleton.AddFilter(IFilter filter)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRemoteSyslogAppender.Append(log4net.Core.LoggingEvent[])">
            <summary>Establecer el stub de AppenderSkeleton.Append(LoggingEvent[] loggingEvents)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRemoteSyslogAppender.Append(log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de RemoteSyslogAppender.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRemoteSyslogAppender.AppendLoggingEvent">
            <summary>Establecer el stub de RemoteSyslogAppender.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRemoteSyslogAppender.AppendLoggingEventArray">
            <summary>Establecer el stub de AppenderSkeleton.Append(LoggingEvent[] loggingEvents)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRemoteSyslogAppender.AttachBackingFieldToErrorHandler">
            <summary>Asocia delegados para emular StubRemoteSyslogAppender.ErrorHandler como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRemoteSyslogAppender.AttachBackingFieldToLayout">
            <summary>Asocia delegados para emular StubRemoteSyslogAppender.Layout como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubRemoteSyslogAppender.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRemoteSyslogAppender.ClearFilters">
            <summary>Establecer el stub de AppenderSkeleton.ClearFilters()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRemoteSyslogAppender.ClearFilters01">
            <summary>Establecer el stub de AppenderSkeleton.ClearFilters()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubRemoteSyslogAppender.ErrorHandler">
            <summary>Establecer el stub de AppenderSkeleton.get_ErrorHandler()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRemoteSyslogAppender.ErrorHandlerGet">
            <summary>Establecer el stub de AppenderSkeleton.get_ErrorHandler()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRemoteSyslogAppender.ErrorHandlerSetIErrorHandler">
            <summary>Establecer el stub de AppenderSkeleton.set_ErrorHandler(IErrorHandler value)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRemoteSyslogAppender.FilterEvent(log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRemoteSyslogAppender.FilterEventLoggingEvent">
            <summary>Establecer el stub de AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubRemoteSyslogAppender.FilterHead">
            <summary>Establecer el stub de AppenderSkeleton.get_FilterHead()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRemoteSyslogAppender.FilterHeadGet">
            <summary>Establecer el stub de AppenderSkeleton.get_FilterHead()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRemoteSyslogAppender.Flush(System.Int32)">
            <summary>Establecer el stub de AppenderSkeleton.Flush(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRemoteSyslogAppender.FlushInt32">
            <summary>Establecer el stub de AppenderSkeleton.Flush(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRemoteSyslogAppender.GetSeverity(log4net.Core.Level)">
            <summary>Establecer el stub de RemoteSyslogAppender.GetSeverity(Level level)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRemoteSyslogAppender.GetSeverityLevel">
            <summary>Establecer el stub de RemoteSyslogAppender.GetSeverity(Level level)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRemoteSyslogAppender.InitializeClientConnection">
            <summary>Establecer el stub de UdpAppender.InitializeClientConnection()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRemoteSyslogAppender.InitializeClientConnection01">
            <summary>Establecer el stub de UdpAppender.InitializeClientConnection()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRemoteSyslogAppender.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubRemoteSyslogAppender</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubRemoteSyslogAppender.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubRemoteSyslogAppender.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRemoteSyslogAppender.IsAsSevereAsThreshold(log4net.Core.Level)">
            <summary>Establecer el stub de AppenderSkeleton.IsAsSevereAsThreshold(Level level)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRemoteSyslogAppender.IsAsSevereAsThresholdLevel">
            <summary>Establecer el stub de AppenderSkeleton.IsAsSevereAsThreshold(Level level)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubRemoteSyslogAppender.Layout">
            <summary>Establecer el stub de AppenderSkeleton.get_Layout()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRemoteSyslogAppender.LayoutGet">
            <summary>Establecer el stub de AppenderSkeleton.get_Layout()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRemoteSyslogAppender.LayoutSetILayout">
            <summary>Establecer el stub de AppenderSkeleton.set_Layout(ILayout value)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRemoteSyslogAppender.OnClose">
            <summary>Establecer el stub de UdpAppender.OnClose()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRemoteSyslogAppender.OnClose01">
            <summary>Establecer el stub de UdpAppender.OnClose()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRemoteSyslogAppender.PreAppendCheck">
            <summary>Establecer el stub de AppenderSkeleton.PreAppendCheck()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRemoteSyslogAppender.PreAppendCheck01">
            <summary>Establecer el stub de AppenderSkeleton.PreAppendCheck()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubRemoteSyslogAppender.RequiresLayout">
            <summary>Establecer el stub de UdpAppender.get_RequiresLayout()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRemoteSyslogAppender.RequiresLayoutGet">
            <summary>Establecer el stub de UdpAppender.get_RequiresLayout()</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.StubRemotingAppender">
            <summary>Tipo stub de log4net.Appender.RemotingAppender</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRemotingAppender.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRemotingAppender.ActivateOptions">
            <summary>Establecer el stub de RemotingAppender.ActivateOptions()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRemotingAppender.ActivateOptions01">
            <summary>Establecer el stub de RemotingAppender.ActivateOptions()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRemotingAppender.AddFilter(log4net.Filter.IFilter)">
            <summary>Establecer el stub de AppenderSkeleton.AddFilter(IFilter filter)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRemotingAppender.AddFilterIFilter">
            <summary>Establecer el stub de AppenderSkeleton.AddFilter(IFilter filter)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRemotingAppender.Append(log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de BufferingAppenderSkeleton.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRemotingAppender.Append(log4net.Core.LoggingEvent[])">
            <summary>Establecer el stub de AppenderSkeleton.Append(LoggingEvent[] loggingEvents)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRemotingAppender.AppendLoggingEvent">
            <summary>Establecer el stub de BufferingAppenderSkeleton.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRemotingAppender.AppendLoggingEventArray">
            <summary>Establecer el stub de AppenderSkeleton.Append(LoggingEvent[] loggingEvents)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRemotingAppender.AttachBackingFieldToErrorHandler">
            <summary>Asocia delegados para emular StubRemotingAppender.ErrorHandler como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRemotingAppender.AttachBackingFieldToFix">
            <summary>Asocia delegados para emular StubRemotingAppender.Fix como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRemotingAppender.AttachBackingFieldToLayout">
            <summary>Asocia delegados para emular StubRemotingAppender.Layout como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRemotingAppender.AttachBackingFieldToOnlyFixPartialEventData">
            <summary>Asocia delegados para emular StubRemotingAppender.OnlyFixPartialEventData como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubRemotingAppender.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRemotingAppender.ClearFilters">
            <summary>Establecer el stub de AppenderSkeleton.ClearFilters()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRemotingAppender.ClearFilters01">
            <summary>Establecer el stub de AppenderSkeleton.ClearFilters()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubRemotingAppender.ErrorHandler">
            <summary>Establecer el stub de AppenderSkeleton.get_ErrorHandler()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRemotingAppender.ErrorHandlerGet">
            <summary>Establecer el stub de AppenderSkeleton.get_ErrorHandler()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRemotingAppender.ErrorHandlerSetIErrorHandler">
            <summary>Establecer el stub de AppenderSkeleton.set_ErrorHandler(IErrorHandler value)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRemotingAppender.FilterEvent(log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRemotingAppender.FilterEventLoggingEvent">
            <summary>Establecer el stub de AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubRemotingAppender.FilterHead">
            <summary>Establecer el stub de AppenderSkeleton.get_FilterHead()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRemotingAppender.FilterHeadGet">
            <summary>Establecer el stub de AppenderSkeleton.get_FilterHead()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubRemotingAppender.Fix">
            <summary>Establecer el stub de BufferingAppenderSkeleton.get_Fix()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRemotingAppender.FixGet">
            <summary>Establecer el stub de BufferingAppenderSkeleton.get_Fix()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRemotingAppender.FixSetFixFlags">
            <summary>Establecer el stub de BufferingAppenderSkeleton.set_Fix(FixFlags value)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRemotingAppender.Flush(System.Int32)">
            <summary>Establecer el stub de RemotingAppender.Flush(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRemotingAppender.Flush">
            <summary>Establecer el stub de BufferingAppenderSkeleton.Flush()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRemotingAppender.Flush(System.Boolean)">
            <summary>Establecer el stub de BufferingAppenderSkeleton.Flush(Boolean flushLossyBuffer)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRemotingAppender.Flush01">
            <summary>Establecer el stub de BufferingAppenderSkeleton.Flush()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRemotingAppender.FlushBoolean">
            <summary>Establecer el stub de BufferingAppenderSkeleton.Flush(Boolean flushLossyBuffer)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRemotingAppender.FlushInt32">
            <summary>Establecer el stub de RemotingAppender.Flush(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRemotingAppender.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubRemotingAppender</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubRemotingAppender.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubRemotingAppender.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRemotingAppender.IsAsSevereAsThreshold(log4net.Core.Level)">
            <summary>Establecer el stub de AppenderSkeleton.IsAsSevereAsThreshold(Level level)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRemotingAppender.IsAsSevereAsThresholdLevel">
            <summary>Establecer el stub de AppenderSkeleton.IsAsSevereAsThreshold(Level level)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubRemotingAppender.Layout">
            <summary>Establecer el stub de AppenderSkeleton.get_Layout()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRemotingAppender.LayoutGet">
            <summary>Establecer el stub de AppenderSkeleton.get_Layout()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRemotingAppender.LayoutSetILayout">
            <summary>Establecer el stub de AppenderSkeleton.set_Layout(ILayout value)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRemotingAppender.OnClose">
            <summary>Establecer el stub de RemotingAppender.OnClose()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRemotingAppender.OnClose01">
            <summary>Establecer el stub de RemotingAppender.OnClose()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubRemotingAppender.OnlyFixPartialEventData">
            <summary>Establecer el stub de BufferingAppenderSkeleton.get_OnlyFixPartialEventData()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRemotingAppender.OnlyFixPartialEventDataGet">
            <summary>Establecer el stub de BufferingAppenderSkeleton.get_OnlyFixPartialEventData()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRemotingAppender.OnlyFixPartialEventDataSetBoolean">
            <summary>Establecer el stub de BufferingAppenderSkeleton.set_OnlyFixPartialEventData(Boolean value)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRemotingAppender.PreAppendCheck">
            <summary>Establecer el stub de AppenderSkeleton.PreAppendCheck()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRemotingAppender.PreAppendCheck01">
            <summary>Establecer el stub de AppenderSkeleton.PreAppendCheck()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubRemotingAppender.RequiresLayout">
            <summary>Establecer el stub de AppenderSkeleton.get_RequiresLayout()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRemotingAppender.RequiresLayoutGet">
            <summary>Establecer el stub de AppenderSkeleton.get_RequiresLayout()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRemotingAppender.SendBuffer(log4net.Core.LoggingEvent[])">
            <summary>Establecer el stub de RemotingAppender.SendBuffer(LoggingEvent[] events)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRemotingAppender.SendBufferLoggingEventArray">
            <summary>Establecer el stub de RemotingAppender.SendBuffer(LoggingEvent[] events)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRemotingAppender.SendFromBuffer(log4net.Core.LoggingEvent,log4net.Util.CyclicBuffer)">
            <summary>Establecer el stub de BufferingAppenderSkeleton.SendFromBuffer(LoggingEvent firstLoggingEvent, CyclicBuffer buffer)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRemotingAppender.SendFromBufferLoggingEventCyclicBuffer">
            <summary>Establecer el stub de BufferingAppenderSkeleton.SendFromBuffer(LoggingEvent firstLoggingEvent, CyclicBuffer buffer)</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.StubRollingFileAppender">
            <summary>Tipo stub de log4net.Appender.RollingFileAppender</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRollingFileAppender.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRollingFileAppender.ActivateOptions">
            <summary>Establecer el stub de RollingFileAppender.ActivateOptions()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRollingFileAppender.ActivateOptions01">
            <summary>Establecer el stub de RollingFileAppender.ActivateOptions()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRollingFileAppender.AddFilter(log4net.Filter.IFilter)">
            <summary>Establecer el stub de AppenderSkeleton.AddFilter(IFilter filter)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRollingFileAppender.AddFilterIFilter">
            <summary>Establecer el stub de AppenderSkeleton.AddFilter(IFilter filter)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRollingFileAppender.AdjustFileBeforeAppend">
            <summary>Establecer el stub de RollingFileAppender.AdjustFileBeforeAppend()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRollingFileAppender.AdjustFileBeforeAppend01">
            <summary>Establecer el stub de RollingFileAppender.AdjustFileBeforeAppend()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRollingFileAppender.Append(log4net.Core.LoggingEvent[])">
            <summary>Establecer el stub de RollingFileAppender.Append(LoggingEvent[] loggingEvents)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRollingFileAppender.Append(log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de RollingFileAppender.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRollingFileAppender.AppendLoggingEvent">
            <summary>Establecer el stub de RollingFileAppender.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRollingFileAppender.AppendLoggingEventArray">
            <summary>Establecer el stub de RollingFileAppender.Append(LoggingEvent[] loggingEvents)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRollingFileAppender.AttachBackingFieldToErrorHandler">
            <summary>Asocia delegados para emular StubRollingFileAppender.ErrorHandler como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRollingFileAppender.AttachBackingFieldToFile">
            <summary>Asocia delegados para emular StubRollingFileAppender.File como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRollingFileAppender.AttachBackingFieldToLayout">
            <summary>Asocia delegados para emular StubRollingFileAppender.Layout como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRollingFileAppender.AttachBackingFieldToWriter">
            <summary>Asocia delegados para emular StubRollingFileAppender.Writer como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubRollingFileAppender.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRollingFileAppender.ClearFilters">
            <summary>Establecer el stub de AppenderSkeleton.ClearFilters()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRollingFileAppender.ClearFilters01">
            <summary>Establecer el stub de AppenderSkeleton.ClearFilters()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRollingFileAppender.CloseWriter">
            <summary>Establecer el stub de FileAppender.CloseWriter()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRollingFileAppender.CloseWriter01">
            <summary>Establecer el stub de FileAppender.CloseWriter()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubRollingFileAppender.ErrorHandler">
            <summary>Establecer el stub de TextWriterAppender.get_ErrorHandler()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRollingFileAppender.ErrorHandlerGet">
            <summary>Establecer el stub de TextWriterAppender.get_ErrorHandler()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRollingFileAppender.ErrorHandlerSetIErrorHandler">
            <summary>Establecer el stub de TextWriterAppender.set_ErrorHandler(IErrorHandler value)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubRollingFileAppender.File">
            <summary>Establecer el stub de FileAppender.get_File()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRollingFileAppender.FileGet">
            <summary>Establecer el stub de FileAppender.get_File()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRollingFileAppender.FileSetString">
            <summary>Establecer el stub de FileAppender.set_File(String value)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRollingFileAppender.FilterEvent(log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRollingFileAppender.FilterEventLoggingEvent">
            <summary>Establecer el stub de AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubRollingFileAppender.FilterHead">
            <summary>Establecer el stub de AppenderSkeleton.get_FilterHead()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRollingFileAppender.FilterHeadGet">
            <summary>Establecer el stub de AppenderSkeleton.get_FilterHead()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRollingFileAppender.Flush(System.Int32)">
            <summary>Establecer el stub de TextWriterAppender.Flush(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRollingFileAppender.FlushInt32">
            <summary>Establecer el stub de TextWriterAppender.Flush(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRollingFileAppender.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubRollingFileAppender</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubRollingFileAppender.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubRollingFileAppender.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRollingFileAppender.IsAsSevereAsThreshold(log4net.Core.Level)">
            <summary>Establecer el stub de AppenderSkeleton.IsAsSevereAsThreshold(Level level)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRollingFileAppender.IsAsSevereAsThresholdLevel">
            <summary>Establecer el stub de AppenderSkeleton.IsAsSevereAsThreshold(Level level)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubRollingFileAppender.Layout">
            <summary>Establecer el stub de AppenderSkeleton.get_Layout()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRollingFileAppender.LayoutGet">
            <summary>Establecer el stub de AppenderSkeleton.get_Layout()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRollingFileAppender.LayoutSetILayout">
            <summary>Establecer el stub de AppenderSkeleton.set_Layout(ILayout value)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRollingFileAppender.OnClose">
            <summary>Establecer el stub de FileAppender.OnClose()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRollingFileAppender.OnClose01">
            <summary>Establecer el stub de FileAppender.OnClose()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRollingFileAppender.OpenFile(System.String,System.Boolean)">
            <summary>Establecer el stub de RollingFileAppender.OpenFile(String fileName, Boolean append)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRollingFileAppender.OpenFileStringBoolean">
            <summary>Establecer el stub de RollingFileAppender.OpenFile(String fileName, Boolean append)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRollingFileAppender.PreAppendCheck">
            <summary>Establecer el stub de TextWriterAppender.PreAppendCheck()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRollingFileAppender.PreAppendCheck01">
            <summary>Establecer el stub de TextWriterAppender.PreAppendCheck()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRollingFileAppender.PrepareWriter">
            <summary>Establecer el stub de FileAppender.PrepareWriter()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRollingFileAppender.PrepareWriter01">
            <summary>Establecer el stub de FileAppender.PrepareWriter()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubRollingFileAppender.RequiresLayout">
            <summary>Establecer el stub de TextWriterAppender.get_RequiresLayout()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRollingFileAppender.RequiresLayoutGet">
            <summary>Establecer el stub de TextWriterAppender.get_RequiresLayout()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRollingFileAppender.Reset">
            <summary>Establecer el stub de FileAppender.Reset()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRollingFileAppender.Reset01">
            <summary>Establecer el stub de FileAppender.Reset()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRollingFileAppender.SafeOpenFile(System.String,System.Boolean)">
            <summary>Establecer el stub de FileAppender.SafeOpenFile(String fileName, Boolean append)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRollingFileAppender.SafeOpenFileStringBoolean">
            <summary>Establecer el stub de FileAppender.SafeOpenFile(String fileName, Boolean append)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRollingFileAppender.SetQWForFiles(System.IO.Stream)">
            <summary>Establecer el stub de FileAppender.SetQWForFiles(Stream fileStream)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRollingFileAppender.SetQWForFiles(System.IO.TextWriter)">
            <summary>Establecer el stub de RollingFileAppender.SetQWForFiles(TextWriter writer)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRollingFileAppender.SetQWForFilesStream">
            <summary>Establecer el stub de FileAppender.SetQWForFiles(Stream fileStream)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRollingFileAppender.SetQWForFilesTextWriter">
            <summary>Establecer el stub de RollingFileAppender.SetQWForFiles(TextWriter writer)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRollingFileAppender.WriteFooter">
            <summary>Establecer el stub de FileAppender.WriteFooter()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRollingFileAppender.WriteFooter01">
            <summary>Establecer el stub de FileAppender.WriteFooter()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRollingFileAppender.WriteFooterAndCloseWriter">
            <summary>Establecer el stub de TextWriterAppender.WriteFooterAndCloseWriter()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRollingFileAppender.WriteFooterAndCloseWriter01">
            <summary>Establecer el stub de TextWriterAppender.WriteFooterAndCloseWriter()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubRollingFileAppender.WriteHeader">
            <summary>Establecer el stub de FileAppender.WriteHeader()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRollingFileAppender.WriteHeader01">
            <summary>Establecer el stub de FileAppender.WriteHeader()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubRollingFileAppender.Writer">
            <summary>Establecer el stub de TextWriterAppender.get_Writer()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRollingFileAppender.WriterGet">
            <summary>Establecer el stub de TextWriterAppender.get_Writer()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubRollingFileAppender.WriterSetTextWriter">
            <summary>Establecer el stub de TextWriterAppender.set_Writer(TextWriter value)</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.StubSmtpAppender">
            <summary>Tipo stub de log4net.Appender.SmtpAppender</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubSmtpAppender.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubSmtpAppender.ActivateOptions">
            <summary>Establecer el stub de BufferingAppenderSkeleton.ActivateOptions()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpAppender.ActivateOptions01">
            <summary>Establecer el stub de BufferingAppenderSkeleton.ActivateOptions()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubSmtpAppender.AddFilter(log4net.Filter.IFilter)">
            <summary>Establecer el stub de AppenderSkeleton.AddFilter(IFilter filter)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpAppender.AddFilterIFilter">
            <summary>Establecer el stub de AppenderSkeleton.AddFilter(IFilter filter)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubSmtpAppender.Append(log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de BufferingAppenderSkeleton.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubSmtpAppender.Append(log4net.Core.LoggingEvent[])">
            <summary>Establecer el stub de AppenderSkeleton.Append(LoggingEvent[] loggingEvents)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpAppender.AppendLoggingEvent">
            <summary>Establecer el stub de BufferingAppenderSkeleton.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpAppender.AppendLoggingEventArray">
            <summary>Establecer el stub de AppenderSkeleton.Append(LoggingEvent[] loggingEvents)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubSmtpAppender.AttachBackingFieldToErrorHandler">
            <summary>Asocia delegados para emular StubSmtpAppender.ErrorHandler como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubSmtpAppender.AttachBackingFieldToFix">
            <summary>Asocia delegados para emular StubSmtpAppender.Fix como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubSmtpAppender.AttachBackingFieldToLayout">
            <summary>Asocia delegados para emular StubSmtpAppender.Layout como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubSmtpAppender.AttachBackingFieldToOnlyFixPartialEventData">
            <summary>Asocia delegados para emular StubSmtpAppender.OnlyFixPartialEventData como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubSmtpAppender.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubSmtpAppender.ClearFilters">
            <summary>Establecer el stub de AppenderSkeleton.ClearFilters()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpAppender.ClearFilters01">
            <summary>Establecer el stub de AppenderSkeleton.ClearFilters()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubSmtpAppender.ErrorHandler">
            <summary>Establecer el stub de AppenderSkeleton.get_ErrorHandler()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpAppender.ErrorHandlerGet">
            <summary>Establecer el stub de AppenderSkeleton.get_ErrorHandler()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpAppender.ErrorHandlerSetIErrorHandler">
            <summary>Establecer el stub de AppenderSkeleton.set_ErrorHandler(IErrorHandler value)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubSmtpAppender.FilterEvent(log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpAppender.FilterEventLoggingEvent">
            <summary>Establecer el stub de AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubSmtpAppender.FilterHead">
            <summary>Establecer el stub de AppenderSkeleton.get_FilterHead()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpAppender.FilterHeadGet">
            <summary>Establecer el stub de AppenderSkeleton.get_FilterHead()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubSmtpAppender.Fix">
            <summary>Establecer el stub de BufferingAppenderSkeleton.get_Fix()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpAppender.FixGet">
            <summary>Establecer el stub de BufferingAppenderSkeleton.get_Fix()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpAppender.FixSetFixFlags">
            <summary>Establecer el stub de BufferingAppenderSkeleton.set_Fix(FixFlags value)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubSmtpAppender.Flush(System.Int32)">
            <summary>Establecer el stub de BufferingAppenderSkeleton.Flush(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubSmtpAppender.Flush">
            <summary>Establecer el stub de BufferingAppenderSkeleton.Flush()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubSmtpAppender.Flush(System.Boolean)">
            <summary>Establecer el stub de BufferingAppenderSkeleton.Flush(Boolean flushLossyBuffer)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpAppender.Flush01">
            <summary>Establecer el stub de BufferingAppenderSkeleton.Flush()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpAppender.FlushBoolean">
            <summary>Establecer el stub de BufferingAppenderSkeleton.Flush(Boolean flushLossyBuffer)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpAppender.FlushInt32">
            <summary>Establecer el stub de BufferingAppenderSkeleton.Flush(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubSmtpAppender.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubSmtpAppender</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubSmtpAppender.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubSmtpAppender.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubSmtpAppender.IsAsSevereAsThreshold(log4net.Core.Level)">
            <summary>Establecer el stub de AppenderSkeleton.IsAsSevereAsThreshold(Level level)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpAppender.IsAsSevereAsThresholdLevel">
            <summary>Establecer el stub de AppenderSkeleton.IsAsSevereAsThreshold(Level level)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubSmtpAppender.Layout">
            <summary>Establecer el stub de AppenderSkeleton.get_Layout()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpAppender.LayoutGet">
            <summary>Establecer el stub de AppenderSkeleton.get_Layout()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpAppender.LayoutSetILayout">
            <summary>Establecer el stub de AppenderSkeleton.set_Layout(ILayout value)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubSmtpAppender.OnClose">
            <summary>Establecer el stub de BufferingAppenderSkeleton.OnClose()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpAppender.OnClose01">
            <summary>Establecer el stub de BufferingAppenderSkeleton.OnClose()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubSmtpAppender.OnlyFixPartialEventData">
            <summary>Establecer el stub de BufferingAppenderSkeleton.get_OnlyFixPartialEventData()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpAppender.OnlyFixPartialEventDataGet">
            <summary>Establecer el stub de BufferingAppenderSkeleton.get_OnlyFixPartialEventData()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpAppender.OnlyFixPartialEventDataSetBoolean">
            <summary>Establecer el stub de BufferingAppenderSkeleton.set_OnlyFixPartialEventData(Boolean value)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubSmtpAppender.PreAppendCheck">
            <summary>Establecer el stub de AppenderSkeleton.PreAppendCheck()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpAppender.PreAppendCheck01">
            <summary>Establecer el stub de AppenderSkeleton.PreAppendCheck()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubSmtpAppender.RequiresLayout">
            <summary>Establecer el stub de SmtpAppender.get_RequiresLayout()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpAppender.RequiresLayoutGet">
            <summary>Establecer el stub de SmtpAppender.get_RequiresLayout()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubSmtpAppender.SendBuffer(log4net.Core.LoggingEvent[])">
            <summary>Establecer el stub de SmtpAppender.SendBuffer(LoggingEvent[] events)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpAppender.SendBufferLoggingEventArray">
            <summary>Establecer el stub de SmtpAppender.SendBuffer(LoggingEvent[] events)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubSmtpAppender.SendEmail(System.String)">
            <summary>Establecer el stub de SmtpAppender.SendEmail(String messageBody)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpAppender.SendEmailString">
            <summary>Establecer el stub de SmtpAppender.SendEmail(String messageBody)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubSmtpAppender.SendFromBuffer(log4net.Core.LoggingEvent,log4net.Util.CyclicBuffer)">
            <summary>Establecer el stub de BufferingAppenderSkeleton.SendFromBuffer(LoggingEvent firstLoggingEvent, CyclicBuffer buffer)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpAppender.SendFromBufferLoggingEventCyclicBuffer">
            <summary>Establecer el stub de BufferingAppenderSkeleton.SendFromBuffer(LoggingEvent firstLoggingEvent, CyclicBuffer buffer)</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.StubSmtpPickupDirAppender">
            <summary>Tipo stub de log4net.Appender.SmtpPickupDirAppender</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubSmtpPickupDirAppender.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubSmtpPickupDirAppender.ActivateOptions">
            <summary>Establecer el stub de SmtpPickupDirAppender.ActivateOptions()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpPickupDirAppender.ActivateOptions01">
            <summary>Establecer el stub de SmtpPickupDirAppender.ActivateOptions()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubSmtpPickupDirAppender.AddFilter(log4net.Filter.IFilter)">
            <summary>Establecer el stub de AppenderSkeleton.AddFilter(IFilter filter)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpPickupDirAppender.AddFilterIFilter">
            <summary>Establecer el stub de AppenderSkeleton.AddFilter(IFilter filter)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubSmtpPickupDirAppender.Append(log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de BufferingAppenderSkeleton.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubSmtpPickupDirAppender.Append(log4net.Core.LoggingEvent[])">
            <summary>Establecer el stub de AppenderSkeleton.Append(LoggingEvent[] loggingEvents)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpPickupDirAppender.AppendLoggingEvent">
            <summary>Establecer el stub de BufferingAppenderSkeleton.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpPickupDirAppender.AppendLoggingEventArray">
            <summary>Establecer el stub de AppenderSkeleton.Append(LoggingEvent[] loggingEvents)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubSmtpPickupDirAppender.AttachBackingFieldToErrorHandler">
            <summary>Asocia delegados para emular StubSmtpPickupDirAppender.ErrorHandler como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubSmtpPickupDirAppender.AttachBackingFieldToFix">
            <summary>Asocia delegados para emular StubSmtpPickupDirAppender.Fix como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubSmtpPickupDirAppender.AttachBackingFieldToLayout">
            <summary>Asocia delegados para emular StubSmtpPickupDirAppender.Layout como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubSmtpPickupDirAppender.AttachBackingFieldToOnlyFixPartialEventData">
            <summary>Asocia delegados para emular StubSmtpPickupDirAppender.OnlyFixPartialEventData como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubSmtpPickupDirAppender.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubSmtpPickupDirAppender.ClearFilters">
            <summary>Establecer el stub de AppenderSkeleton.ClearFilters()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpPickupDirAppender.ClearFilters01">
            <summary>Establecer el stub de AppenderSkeleton.ClearFilters()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubSmtpPickupDirAppender.ErrorHandler">
            <summary>Establecer el stub de AppenderSkeleton.get_ErrorHandler()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpPickupDirAppender.ErrorHandlerGet">
            <summary>Establecer el stub de AppenderSkeleton.get_ErrorHandler()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpPickupDirAppender.ErrorHandlerSetIErrorHandler">
            <summary>Establecer el stub de AppenderSkeleton.set_ErrorHandler(IErrorHandler value)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubSmtpPickupDirAppender.FilterEvent(log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpPickupDirAppender.FilterEventLoggingEvent">
            <summary>Establecer el stub de AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubSmtpPickupDirAppender.FilterHead">
            <summary>Establecer el stub de AppenderSkeleton.get_FilterHead()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpPickupDirAppender.FilterHeadGet">
            <summary>Establecer el stub de AppenderSkeleton.get_FilterHead()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubSmtpPickupDirAppender.Fix">
            <summary>Establecer el stub de BufferingAppenderSkeleton.get_Fix()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpPickupDirAppender.FixGet">
            <summary>Establecer el stub de BufferingAppenderSkeleton.get_Fix()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpPickupDirAppender.FixSetFixFlags">
            <summary>Establecer el stub de BufferingAppenderSkeleton.set_Fix(FixFlags value)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubSmtpPickupDirAppender.Flush(System.Int32)">
            <summary>Establecer el stub de BufferingAppenderSkeleton.Flush(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubSmtpPickupDirAppender.Flush">
            <summary>Establecer el stub de BufferingAppenderSkeleton.Flush()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubSmtpPickupDirAppender.Flush(System.Boolean)">
            <summary>Establecer el stub de BufferingAppenderSkeleton.Flush(Boolean flushLossyBuffer)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpPickupDirAppender.Flush01">
            <summary>Establecer el stub de BufferingAppenderSkeleton.Flush()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpPickupDirAppender.FlushBoolean">
            <summary>Establecer el stub de BufferingAppenderSkeleton.Flush(Boolean flushLossyBuffer)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpPickupDirAppender.FlushInt32">
            <summary>Establecer el stub de BufferingAppenderSkeleton.Flush(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubSmtpPickupDirAppender.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubSmtpPickupDirAppender</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubSmtpPickupDirAppender.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubSmtpPickupDirAppender.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubSmtpPickupDirAppender.IsAsSevereAsThreshold(log4net.Core.Level)">
            <summary>Establecer el stub de AppenderSkeleton.IsAsSevereAsThreshold(Level level)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpPickupDirAppender.IsAsSevereAsThresholdLevel">
            <summary>Establecer el stub de AppenderSkeleton.IsAsSevereAsThreshold(Level level)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubSmtpPickupDirAppender.Layout">
            <summary>Establecer el stub de AppenderSkeleton.get_Layout()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpPickupDirAppender.LayoutGet">
            <summary>Establecer el stub de AppenderSkeleton.get_Layout()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpPickupDirAppender.LayoutSetILayout">
            <summary>Establecer el stub de AppenderSkeleton.set_Layout(ILayout value)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubSmtpPickupDirAppender.OnClose">
            <summary>Establecer el stub de BufferingAppenderSkeleton.OnClose()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpPickupDirAppender.OnClose01">
            <summary>Establecer el stub de BufferingAppenderSkeleton.OnClose()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubSmtpPickupDirAppender.OnlyFixPartialEventData">
            <summary>Establecer el stub de BufferingAppenderSkeleton.get_OnlyFixPartialEventData()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpPickupDirAppender.OnlyFixPartialEventDataGet">
            <summary>Establecer el stub de BufferingAppenderSkeleton.get_OnlyFixPartialEventData()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpPickupDirAppender.OnlyFixPartialEventDataSetBoolean">
            <summary>Establecer el stub de BufferingAppenderSkeleton.set_OnlyFixPartialEventData(Boolean value)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubSmtpPickupDirAppender.PreAppendCheck">
            <summary>Establecer el stub de AppenderSkeleton.PreAppendCheck()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpPickupDirAppender.PreAppendCheck01">
            <summary>Establecer el stub de AppenderSkeleton.PreAppendCheck()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubSmtpPickupDirAppender.RequiresLayout">
            <summary>Establecer el stub de SmtpPickupDirAppender.get_RequiresLayout()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpPickupDirAppender.RequiresLayoutGet">
            <summary>Establecer el stub de SmtpPickupDirAppender.get_RequiresLayout()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubSmtpPickupDirAppender.SendBuffer(log4net.Core.LoggingEvent[])">
            <summary>Establecer el stub de SmtpPickupDirAppender.SendBuffer(LoggingEvent[] events)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpPickupDirAppender.SendBufferLoggingEventArray">
            <summary>Establecer el stub de SmtpPickupDirAppender.SendBuffer(LoggingEvent[] events)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubSmtpPickupDirAppender.SendFromBuffer(log4net.Core.LoggingEvent,log4net.Util.CyclicBuffer)">
            <summary>Establecer el stub de BufferingAppenderSkeleton.SendFromBuffer(LoggingEvent firstLoggingEvent, CyclicBuffer buffer)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubSmtpPickupDirAppender.SendFromBufferLoggingEventCyclicBuffer">
            <summary>Establecer el stub de BufferingAppenderSkeleton.SendFromBuffer(LoggingEvent firstLoggingEvent, CyclicBuffer buffer)</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.StubTelnetAppender">
            <summary>Tipo stub de log4net.Appender.TelnetAppender</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTelnetAppender.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTelnetAppender.ActivateOptions">
            <summary>Establecer el stub de TelnetAppender.ActivateOptions()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTelnetAppender.ActivateOptions01">
            <summary>Establecer el stub de TelnetAppender.ActivateOptions()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTelnetAppender.AddFilter(log4net.Filter.IFilter)">
            <summary>Establecer el stub de AppenderSkeleton.AddFilter(IFilter filter)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTelnetAppender.AddFilterIFilter">
            <summary>Establecer el stub de AppenderSkeleton.AddFilter(IFilter filter)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTelnetAppender.Append(log4net.Core.LoggingEvent[])">
            <summary>Establecer el stub de AppenderSkeleton.Append(LoggingEvent[] loggingEvents)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTelnetAppender.Append(log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de TelnetAppender.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTelnetAppender.AppendLoggingEvent">
            <summary>Establecer el stub de TelnetAppender.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTelnetAppender.AppendLoggingEventArray">
            <summary>Establecer el stub de AppenderSkeleton.Append(LoggingEvent[] loggingEvents)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTelnetAppender.AttachBackingFieldToErrorHandler">
            <summary>Asocia delegados para emular StubTelnetAppender.ErrorHandler como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTelnetAppender.AttachBackingFieldToLayout">
            <summary>Asocia delegados para emular StubTelnetAppender.Layout como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubTelnetAppender.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTelnetAppender.ClearFilters">
            <summary>Establecer el stub de AppenderSkeleton.ClearFilters()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTelnetAppender.ClearFilters01">
            <summary>Establecer el stub de AppenderSkeleton.ClearFilters()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubTelnetAppender.ErrorHandler">
            <summary>Establecer el stub de AppenderSkeleton.get_ErrorHandler()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTelnetAppender.ErrorHandlerGet">
            <summary>Establecer el stub de AppenderSkeleton.get_ErrorHandler()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTelnetAppender.ErrorHandlerSetIErrorHandler">
            <summary>Establecer el stub de AppenderSkeleton.set_ErrorHandler(IErrorHandler value)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTelnetAppender.FilterEvent(log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTelnetAppender.FilterEventLoggingEvent">
            <summary>Establecer el stub de AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubTelnetAppender.FilterHead">
            <summary>Establecer el stub de AppenderSkeleton.get_FilterHead()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTelnetAppender.FilterHeadGet">
            <summary>Establecer el stub de AppenderSkeleton.get_FilterHead()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTelnetAppender.Flush(System.Int32)">
            <summary>Establecer el stub de AppenderSkeleton.Flush(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTelnetAppender.FlushInt32">
            <summary>Establecer el stub de AppenderSkeleton.Flush(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTelnetAppender.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubTelnetAppender</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubTelnetAppender.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubTelnetAppender.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTelnetAppender.IsAsSevereAsThreshold(log4net.Core.Level)">
            <summary>Establecer el stub de AppenderSkeleton.IsAsSevereAsThreshold(Level level)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTelnetAppender.IsAsSevereAsThresholdLevel">
            <summary>Establecer el stub de AppenderSkeleton.IsAsSevereAsThreshold(Level level)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubTelnetAppender.Layout">
            <summary>Establecer el stub de AppenderSkeleton.get_Layout()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTelnetAppender.LayoutGet">
            <summary>Establecer el stub de AppenderSkeleton.get_Layout()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTelnetAppender.LayoutSetILayout">
            <summary>Establecer el stub de AppenderSkeleton.set_Layout(ILayout value)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTelnetAppender.OnClose">
            <summary>Establecer el stub de TelnetAppender.OnClose()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTelnetAppender.OnClose01">
            <summary>Establecer el stub de TelnetAppender.OnClose()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTelnetAppender.PreAppendCheck">
            <summary>Establecer el stub de AppenderSkeleton.PreAppendCheck()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTelnetAppender.PreAppendCheck01">
            <summary>Establecer el stub de AppenderSkeleton.PreAppendCheck()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubTelnetAppender.RequiresLayout">
            <summary>Establecer el stub de TelnetAppender.get_RequiresLayout()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTelnetAppender.RequiresLayoutGet">
            <summary>Establecer el stub de TelnetAppender.get_RequiresLayout()</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.StubTextWriterAppender">
            <summary>Tipo stub de log4net.Appender.TextWriterAppender</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTextWriterAppender.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTextWriterAppender.#ctor(log4net.Layout.ILayout,System.IO.Stream)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTextWriterAppender.#ctor(log4net.Layout.ILayout,System.IO.TextWriter)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTextWriterAppender.ActivateOptions">
            <summary>Establecer el stub de AppenderSkeleton.ActivateOptions()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTextWriterAppender.ActivateOptions01">
            <summary>Establecer el stub de AppenderSkeleton.ActivateOptions()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTextWriterAppender.AddFilter(log4net.Filter.IFilter)">
            <summary>Establecer el stub de AppenderSkeleton.AddFilter(IFilter filter)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTextWriterAppender.AddFilterIFilter">
            <summary>Establecer el stub de AppenderSkeleton.AddFilter(IFilter filter)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTextWriterAppender.Append(log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de TextWriterAppender.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTextWriterAppender.Append(log4net.Core.LoggingEvent[])">
            <summary>Establecer el stub de TextWriterAppender.Append(LoggingEvent[] loggingEvents)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTextWriterAppender.AppendLoggingEvent">
            <summary>Establecer el stub de TextWriterAppender.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTextWriterAppender.AppendLoggingEventArray">
            <summary>Establecer el stub de TextWriterAppender.Append(LoggingEvent[] loggingEvents)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTextWriterAppender.AttachBackingFieldToErrorHandler">
            <summary>Asocia delegados para emular StubTextWriterAppender.ErrorHandler como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTextWriterAppender.AttachBackingFieldToLayout">
            <summary>Asocia delegados para emular StubTextWriterAppender.Layout como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTextWriterAppender.AttachBackingFieldToWriter">
            <summary>Asocia delegados para emular StubTextWriterAppender.Writer como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubTextWriterAppender.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTextWriterAppender.ClearFilters">
            <summary>Establecer el stub de AppenderSkeleton.ClearFilters()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTextWriterAppender.ClearFilters01">
            <summary>Establecer el stub de AppenderSkeleton.ClearFilters()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTextWriterAppender.CloseWriter">
            <summary>Establecer el stub de TextWriterAppender.CloseWriter()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTextWriterAppender.CloseWriter01">
            <summary>Establecer el stub de TextWriterAppender.CloseWriter()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubTextWriterAppender.ErrorHandler">
            <summary>Establecer el stub de TextWriterAppender.get_ErrorHandler()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTextWriterAppender.ErrorHandlerGet">
            <summary>Establecer el stub de TextWriterAppender.get_ErrorHandler()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTextWriterAppender.ErrorHandlerSetIErrorHandler">
            <summary>Establecer el stub de TextWriterAppender.set_ErrorHandler(IErrorHandler value)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTextWriterAppender.FilterEvent(log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTextWriterAppender.FilterEventLoggingEvent">
            <summary>Establecer el stub de AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubTextWriterAppender.FilterHead">
            <summary>Establecer el stub de AppenderSkeleton.get_FilterHead()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTextWriterAppender.FilterHeadGet">
            <summary>Establecer el stub de AppenderSkeleton.get_FilterHead()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTextWriterAppender.Flush(System.Int32)">
            <summary>Establecer el stub de TextWriterAppender.Flush(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTextWriterAppender.FlushInt32">
            <summary>Establecer el stub de TextWriterAppender.Flush(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTextWriterAppender.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubTextWriterAppender</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubTextWriterAppender.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubTextWriterAppender.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTextWriterAppender.IsAsSevereAsThreshold(log4net.Core.Level)">
            <summary>Establecer el stub de AppenderSkeleton.IsAsSevereAsThreshold(Level level)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTextWriterAppender.IsAsSevereAsThresholdLevel">
            <summary>Establecer el stub de AppenderSkeleton.IsAsSevereAsThreshold(Level level)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubTextWriterAppender.Layout">
            <summary>Establecer el stub de AppenderSkeleton.get_Layout()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTextWriterAppender.LayoutGet">
            <summary>Establecer el stub de AppenderSkeleton.get_Layout()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTextWriterAppender.LayoutSetILayout">
            <summary>Establecer el stub de AppenderSkeleton.set_Layout(ILayout value)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTextWriterAppender.OnClose">
            <summary>Establecer el stub de TextWriterAppender.OnClose()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTextWriterAppender.OnClose01">
            <summary>Establecer el stub de TextWriterAppender.OnClose()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTextWriterAppender.PreAppendCheck">
            <summary>Establecer el stub de TextWriterAppender.PreAppendCheck()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTextWriterAppender.PreAppendCheck01">
            <summary>Establecer el stub de TextWriterAppender.PreAppendCheck()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTextWriterAppender.PrepareWriter">
            <summary>Establecer el stub de TextWriterAppender.PrepareWriter()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTextWriterAppender.PrepareWriter01">
            <summary>Establecer el stub de TextWriterAppender.PrepareWriter()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubTextWriterAppender.RequiresLayout">
            <summary>Establecer el stub de TextWriterAppender.get_RequiresLayout()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTextWriterAppender.RequiresLayoutGet">
            <summary>Establecer el stub de TextWriterAppender.get_RequiresLayout()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTextWriterAppender.Reset">
            <summary>Establecer el stub de TextWriterAppender.Reset()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTextWriterAppender.Reset01">
            <summary>Establecer el stub de TextWriterAppender.Reset()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTextWriterAppender.WriteFooter">
            <summary>Establecer el stub de TextWriterAppender.WriteFooter()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTextWriterAppender.WriteFooter01">
            <summary>Establecer el stub de TextWriterAppender.WriteFooter()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTextWriterAppender.WriteFooterAndCloseWriter">
            <summary>Establecer el stub de TextWriterAppender.WriteFooterAndCloseWriter()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTextWriterAppender.WriteFooterAndCloseWriter01">
            <summary>Establecer el stub de TextWriterAppender.WriteFooterAndCloseWriter()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTextWriterAppender.WriteHeader">
            <summary>Establecer el stub de TextWriterAppender.WriteHeader()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTextWriterAppender.WriteHeader01">
            <summary>Establecer el stub de TextWriterAppender.WriteHeader()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubTextWriterAppender.Writer">
            <summary>Establecer el stub de TextWriterAppender.get_Writer()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTextWriterAppender.WriterGet">
            <summary>Establecer el stub de TextWriterAppender.get_Writer()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTextWriterAppender.WriterSetTextWriter">
            <summary>Establecer el stub de TextWriterAppender.set_Writer(TextWriter value)</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.StubTraceAppender">
            <summary>Tipo stub de log4net.Appender.TraceAppender</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTraceAppender.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTraceAppender.#ctor(log4net.Layout.ILayout)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTraceAppender.ActivateOptions">
            <summary>Establecer el stub de AppenderSkeleton.ActivateOptions()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTraceAppender.ActivateOptions01">
            <summary>Establecer el stub de AppenderSkeleton.ActivateOptions()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTraceAppender.AddFilter(log4net.Filter.IFilter)">
            <summary>Establecer el stub de AppenderSkeleton.AddFilter(IFilter filter)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTraceAppender.AddFilterIFilter">
            <summary>Establecer el stub de AppenderSkeleton.AddFilter(IFilter filter)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTraceAppender.Append(log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de TraceAppender.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTraceAppender.Append(log4net.Core.LoggingEvent[])">
            <summary>Establecer el stub de AppenderSkeleton.Append(LoggingEvent[] loggingEvents)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTraceAppender.AppendLoggingEvent">
            <summary>Establecer el stub de TraceAppender.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTraceAppender.AppendLoggingEventArray">
            <summary>Establecer el stub de AppenderSkeleton.Append(LoggingEvent[] loggingEvents)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTraceAppender.AttachBackingFieldToErrorHandler">
            <summary>Asocia delegados para emular StubTraceAppender.ErrorHandler como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTraceAppender.AttachBackingFieldToLayout">
            <summary>Asocia delegados para emular StubTraceAppender.Layout como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubTraceAppender.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTraceAppender.ClearFilters">
            <summary>Establecer el stub de AppenderSkeleton.ClearFilters()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTraceAppender.ClearFilters01">
            <summary>Establecer el stub de AppenderSkeleton.ClearFilters()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubTraceAppender.ErrorHandler">
            <summary>Establecer el stub de AppenderSkeleton.get_ErrorHandler()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTraceAppender.ErrorHandlerGet">
            <summary>Establecer el stub de AppenderSkeleton.get_ErrorHandler()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTraceAppender.ErrorHandlerSetIErrorHandler">
            <summary>Establecer el stub de AppenderSkeleton.set_ErrorHandler(IErrorHandler value)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTraceAppender.FilterEvent(log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTraceAppender.FilterEventLoggingEvent">
            <summary>Establecer el stub de AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubTraceAppender.FilterHead">
            <summary>Establecer el stub de AppenderSkeleton.get_FilterHead()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTraceAppender.FilterHeadGet">
            <summary>Establecer el stub de AppenderSkeleton.get_FilterHead()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTraceAppender.Flush(System.Int32)">
            <summary>Establecer el stub de TraceAppender.Flush(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTraceAppender.FlushInt32">
            <summary>Establecer el stub de TraceAppender.Flush(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTraceAppender.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubTraceAppender</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubTraceAppender.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubTraceAppender.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTraceAppender.IsAsSevereAsThreshold(log4net.Core.Level)">
            <summary>Establecer el stub de AppenderSkeleton.IsAsSevereAsThreshold(Level level)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTraceAppender.IsAsSevereAsThresholdLevel">
            <summary>Establecer el stub de AppenderSkeleton.IsAsSevereAsThreshold(Level level)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubTraceAppender.Layout">
            <summary>Establecer el stub de AppenderSkeleton.get_Layout()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTraceAppender.LayoutGet">
            <summary>Establecer el stub de AppenderSkeleton.get_Layout()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTraceAppender.LayoutSetILayout">
            <summary>Establecer el stub de AppenderSkeleton.set_Layout(ILayout value)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTraceAppender.OnClose">
            <summary>Establecer el stub de AppenderSkeleton.OnClose()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTraceAppender.OnClose01">
            <summary>Establecer el stub de AppenderSkeleton.OnClose()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubTraceAppender.PreAppendCheck">
            <summary>Establecer el stub de AppenderSkeleton.PreAppendCheck()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTraceAppender.PreAppendCheck01">
            <summary>Establecer el stub de AppenderSkeleton.PreAppendCheck()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubTraceAppender.RequiresLayout">
            <summary>Establecer el stub de TraceAppender.get_RequiresLayout()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubTraceAppender.RequiresLayoutGet">
            <summary>Establecer el stub de TraceAppender.get_RequiresLayout()</summary>
        </member>
        <member name="T:log4net.Appender.Fakes.StubUdpAppender">
            <summary>Tipo stub de log4net.Appender.UdpAppender</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubUdpAppender.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubUdpAppender.ActivateOptions">
            <summary>Establecer el stub de UdpAppender.ActivateOptions()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubUdpAppender.ActivateOptions01">
            <summary>Establecer el stub de UdpAppender.ActivateOptions()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubUdpAppender.AddFilter(log4net.Filter.IFilter)">
            <summary>Establecer el stub de AppenderSkeleton.AddFilter(IFilter filter)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubUdpAppender.AddFilterIFilter">
            <summary>Establecer el stub de AppenderSkeleton.AddFilter(IFilter filter)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubUdpAppender.Append(log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de UdpAppender.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubUdpAppender.Append(log4net.Core.LoggingEvent[])">
            <summary>Establecer el stub de AppenderSkeleton.Append(LoggingEvent[] loggingEvents)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubUdpAppender.AppendLoggingEvent">
            <summary>Establecer el stub de UdpAppender.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubUdpAppender.AppendLoggingEventArray">
            <summary>Establecer el stub de AppenderSkeleton.Append(LoggingEvent[] loggingEvents)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubUdpAppender.AttachBackingFieldToErrorHandler">
            <summary>Asocia delegados para emular StubUdpAppender.ErrorHandler como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubUdpAppender.AttachBackingFieldToLayout">
            <summary>Asocia delegados para emular StubUdpAppender.Layout como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubUdpAppender.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubUdpAppender.ClearFilters">
            <summary>Establecer el stub de AppenderSkeleton.ClearFilters()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubUdpAppender.ClearFilters01">
            <summary>Establecer el stub de AppenderSkeleton.ClearFilters()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubUdpAppender.ErrorHandler">
            <summary>Establecer el stub de AppenderSkeleton.get_ErrorHandler()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubUdpAppender.ErrorHandlerGet">
            <summary>Establecer el stub de AppenderSkeleton.get_ErrorHandler()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubUdpAppender.ErrorHandlerSetIErrorHandler">
            <summary>Establecer el stub de AppenderSkeleton.set_ErrorHandler(IErrorHandler value)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubUdpAppender.FilterEvent(log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubUdpAppender.FilterEventLoggingEvent">
            <summary>Establecer el stub de AppenderSkeleton.FilterEvent(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubUdpAppender.FilterHead">
            <summary>Establecer el stub de AppenderSkeleton.get_FilterHead()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubUdpAppender.FilterHeadGet">
            <summary>Establecer el stub de AppenderSkeleton.get_FilterHead()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubUdpAppender.Flush(System.Int32)">
            <summary>Establecer el stub de AppenderSkeleton.Flush(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubUdpAppender.FlushInt32">
            <summary>Establecer el stub de AppenderSkeleton.Flush(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubUdpAppender.InitializeClientConnection">
            <summary>Establecer el stub de UdpAppender.InitializeClientConnection()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubUdpAppender.InitializeClientConnection01">
            <summary>Establecer el stub de UdpAppender.InitializeClientConnection()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubUdpAppender.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubUdpAppender</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubUdpAppender.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubUdpAppender.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubUdpAppender.IsAsSevereAsThreshold(log4net.Core.Level)">
            <summary>Establecer el stub de AppenderSkeleton.IsAsSevereAsThreshold(Level level)</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubUdpAppender.IsAsSevereAsThresholdLevel">
            <summary>Establecer el stub de AppenderSkeleton.IsAsSevereAsThreshold(Level level)</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubUdpAppender.Layout">
            <summary>Establecer el stub de AppenderSkeleton.get_Layout()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubUdpAppender.LayoutGet">
            <summary>Establecer el stub de AppenderSkeleton.get_Layout()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubUdpAppender.LayoutSetILayout">
            <summary>Establecer el stub de AppenderSkeleton.set_Layout(ILayout value)</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubUdpAppender.OnClose">
            <summary>Establecer el stub de UdpAppender.OnClose()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubUdpAppender.OnClose01">
            <summary>Establecer el stub de UdpAppender.OnClose()</summary>
        </member>
        <member name="M:log4net.Appender.Fakes.StubUdpAppender.PreAppendCheck">
            <summary>Establecer el stub de AppenderSkeleton.PreAppendCheck()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubUdpAppender.PreAppendCheck01">
            <summary>Establecer el stub de AppenderSkeleton.PreAppendCheck()</summary>
        </member>
        <member name="P:log4net.Appender.Fakes.StubUdpAppender.RequiresLayout">
            <summary>Establecer el stub de UdpAppender.get_RequiresLayout()</summary>
        </member>
        <member name="F:log4net.Appender.Fakes.StubUdpAppender.RequiresLayoutGet">
            <summary>Establecer el stub de UdpAppender.get_RequiresLayout()</summary>
        </member>
        <member name="T:log4net.Config.Fakes.ShimAliasRepositoryAttribute">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Config.AliasRepositoryAttribute</summary>
        </member>
        <member name="M:log4net.Config.Fakes.ShimAliasRepositoryAttribute.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Config.Fakes.ShimAliasRepositoryAttribute.#ctor(log4net.Config.AliasRepositoryAttribute)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Config.Fakes.ShimAliasRepositoryAttribute.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimAliasRepositoryAttribute.AllInstances.NameGet">
            <summary>Establecer el shim de AliasRepositoryAttribute.get_Name()</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimAliasRepositoryAttribute.AllInstances.NameSetString">
            <summary>Establecer el shim de AliasRepositoryAttribute.set_Name(String value)</summary>
        </member>
        <member name="M:log4net.Config.Fakes.ShimAliasRepositoryAttribute.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Config.Fakes.ShimAliasRepositoryAttribute.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimAliasRepositoryAttribute.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimAliasRepositoryAttribute.ConstructorString">
            <summary>Establecer el shim de AliasRepositoryAttribute.AliasRepositoryAttribute(String name)</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimAliasRepositoryAttribute.NameGet">
            <summary>Establecer el shim de AliasRepositoryAttribute.get_Name()</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimAliasRepositoryAttribute.NameSetString">
            <summary>Establecer el shim de AliasRepositoryAttribute.set_Name(String value)</summary>
        </member>
        <member name="T:log4net.Config.Fakes.ShimBasicConfigurator">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Config.BasicConfigurator</summary>
        </member>
        <member name="M:log4net.Config.Fakes.ShimBasicConfigurator.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Config.Fakes.ShimBasicConfigurator.#ctor(log4net.Config.BasicConfigurator)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Config.Fakes.ShimBasicConfigurator.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="M:log4net.Config.Fakes.ShimBasicConfigurator.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Config.Fakes.ShimBasicConfigurator.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimBasicConfigurator.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimBasicConfigurator.Configure">
            <summary>Establecer el shim de BasicConfigurator.Configure()</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimBasicConfigurator.ConfigureIAppender">
            <summary>Establecer el shim de BasicConfigurator.Configure(IAppender appender)</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimBasicConfigurator.ConfigureIAppenderArray">
            <summary>Establecer el shim de BasicConfigurator.Configure(IAppender[] appenders)</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimBasicConfigurator.ConfigureILoggerRepository">
            <summary>Establecer el shim de BasicConfigurator.Configure(ILoggerRepository repository)</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimBasicConfigurator.ConfigureILoggerRepositoryIAppender">
            <summary>Establecer el shim de BasicConfigurator.Configure(ILoggerRepository repository, IAppender appender)</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimBasicConfigurator.ConfigureILoggerRepositoryIAppenderArray">
            <summary>Establecer el shim de BasicConfigurator.Configure(ILoggerRepository repository, IAppender[] appenders)</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimBasicConfigurator.Constructor">
            <summary>Establecer el shim de BasicConfigurator.BasicConfigurator()</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimBasicConfigurator.InternalConfigureILoggerRepositoryIAppenderArray">
            <summary>Establecer el shim de BasicConfigurator.InternalConfigure(ILoggerRepository repository, IAppender[] appenders)</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimBasicConfigurator.StaticConstructor">
            <summary>Establecer el shim de BasicConfigurator.BasicConfigurator()</summary>
        </member>
        <member name="T:log4net.Config.Fakes.ShimConfiguratorAttribute">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Config.ConfiguratorAttribute</summary>
        </member>
        <member name="M:log4net.Config.Fakes.ShimConfiguratorAttribute.#ctor(log4net.Config.ConfiguratorAttribute)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Config.Fakes.ShimConfiguratorAttribute.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimConfiguratorAttribute.AllInstances.CompareToObject">
            <summary>Establecer el shim de ConfiguratorAttribute.CompareTo(Object obj)</summary>
        </member>
        <member name="M:log4net.Config.Fakes.ShimConfiguratorAttribute.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Config.Fakes.ShimConfiguratorAttribute.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimConfiguratorAttribute.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Config.Fakes.ShimConfiguratorAttribute.Bind(System.IComparable)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimConfiguratorAttribute.CompareToObject">
            <summary>Establecer el shim de ConfiguratorAttribute.CompareTo(Object obj)</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimConfiguratorAttribute.ConstructorInt32">
            <summary>Establecer el shim de ConfiguratorAttribute.ConfiguratorAttribute(Int32 priority)</summary>
        </member>
        <member name="T:log4net.Config.Fakes.ShimLog4NetConfigurationSectionHandler">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Config.Log4NetConfigurationSectionHandler</summary>
        </member>
        <member name="M:log4net.Config.Fakes.ShimLog4NetConfigurationSectionHandler.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Config.Fakes.ShimLog4NetConfigurationSectionHandler.#ctor(log4net.Config.Log4NetConfigurationSectionHandler)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Config.Fakes.ShimLog4NetConfigurationSectionHandler.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimLog4NetConfigurationSectionHandler.AllInstances.CreateObjectObjectXmlNode">
            <summary>Establecer el shim de Log4NetConfigurationSectionHandler.Create(Object parent, Object configContext, XmlNode section)</summary>
        </member>
        <member name="M:log4net.Config.Fakes.ShimLog4NetConfigurationSectionHandler.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Config.Fakes.ShimLog4NetConfigurationSectionHandler.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimLog4NetConfigurationSectionHandler.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Config.Fakes.ShimLog4NetConfigurationSectionHandler.Bind(System.Configuration.IConfigurationSectionHandler)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimLog4NetConfigurationSectionHandler.Constructor">
            <summary>Establecer el shim de Log4NetConfigurationSectionHandler.Log4NetConfigurationSectionHandler()</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimLog4NetConfigurationSectionHandler.CreateObjectObjectXmlNode">
            <summary>Establecer el shim de Log4NetConfigurationSectionHandler.Create(Object parent, Object configContext, XmlNode section)</summary>
        </member>
        <member name="T:log4net.Config.Fakes.ShimPluginAttribute">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Config.PluginAttribute</summary>
        </member>
        <member name="M:log4net.Config.Fakes.ShimPluginAttribute.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Config.Fakes.ShimPluginAttribute.#ctor(log4net.Config.PluginAttribute)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Config.Fakes.ShimPluginAttribute.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimPluginAttribute.AllInstances.CreatePlugin">
            <summary>Establecer el shim de PluginAttribute.CreatePlugin()</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimPluginAttribute.AllInstances.ToString01">
            <summary>Establecer el shim de PluginAttribute.ToString()</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimPluginAttribute.AllInstances.TypeGet">
            <summary>Establecer el shim de PluginAttribute.get_Type()</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimPluginAttribute.AllInstances.TypeNameGet">
            <summary>Establecer el shim de PluginAttribute.get_TypeName()</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimPluginAttribute.AllInstances.TypeNameSetString">
            <summary>Establecer el shim de PluginAttribute.set_TypeName(String value)</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimPluginAttribute.AllInstances.TypeSetType">
            <summary>Establecer el shim de PluginAttribute.set_Type(Type value)</summary>
        </member>
        <member name="M:log4net.Config.Fakes.ShimPluginAttribute.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Config.Fakes.ShimPluginAttribute.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimPluginAttribute.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Config.Fakes.ShimPluginAttribute.Bind(log4net.Plugin.IPluginFactory)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimPluginAttribute.ConstructorString">
            <summary>Establecer el shim de PluginAttribute.PluginAttribute(String typeName)</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimPluginAttribute.ConstructorType">
            <summary>Establecer el shim de PluginAttribute.PluginAttribute(Type type)</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimPluginAttribute.CreatePlugin">
            <summary>Establecer el shim de PluginAttribute.CreatePlugin()</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimPluginAttribute.ToString">
            <summary>Establecer el shim de PluginAttribute.ToString()</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimPluginAttribute.TypeGet">
            <summary>Establecer el shim de PluginAttribute.get_Type()</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimPluginAttribute.TypeNameGet">
            <summary>Establecer el shim de PluginAttribute.get_TypeName()</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimPluginAttribute.TypeNameSetString">
            <summary>Establecer el shim de PluginAttribute.set_TypeName(String value)</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimPluginAttribute.TypeSetType">
            <summary>Establecer el shim de PluginAttribute.set_Type(Type value)</summary>
        </member>
        <member name="T:log4net.Config.Fakes.ShimRepositoryAttribute">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Config.RepositoryAttribute</summary>
        </member>
        <member name="M:log4net.Config.Fakes.ShimRepositoryAttribute.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Config.Fakes.ShimRepositoryAttribute.#ctor(log4net.Config.RepositoryAttribute)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Config.Fakes.ShimRepositoryAttribute.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimRepositoryAttribute.AllInstances.NameGet">
            <summary>Establecer el shim de RepositoryAttribute.get_Name()</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimRepositoryAttribute.AllInstances.NameSetString">
            <summary>Establecer el shim de RepositoryAttribute.set_Name(String value)</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimRepositoryAttribute.AllInstances.RepositoryTypeGet">
            <summary>Establecer el shim de RepositoryAttribute.get_RepositoryType()</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimRepositoryAttribute.AllInstances.RepositoryTypeSetType">
            <summary>Establecer el shim de RepositoryAttribute.set_RepositoryType(Type value)</summary>
        </member>
        <member name="M:log4net.Config.Fakes.ShimRepositoryAttribute.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Config.Fakes.ShimRepositoryAttribute.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimRepositoryAttribute.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimRepositoryAttribute.Constructor">
            <summary>Establecer el shim de RepositoryAttribute.RepositoryAttribute()</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimRepositoryAttribute.ConstructorString">
            <summary>Establecer el shim de RepositoryAttribute.RepositoryAttribute(String name)</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimRepositoryAttribute.NameGet">
            <summary>Establecer el shim de RepositoryAttribute.get_Name()</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimRepositoryAttribute.NameSetString">
            <summary>Establecer el shim de RepositoryAttribute.set_Name(String value)</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimRepositoryAttribute.RepositoryTypeGet">
            <summary>Establecer el shim de RepositoryAttribute.get_RepositoryType()</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimRepositoryAttribute.RepositoryTypeSetType">
            <summary>Establecer el shim de RepositoryAttribute.set_RepositoryType(Type value)</summary>
        </member>
        <member name="T:log4net.Config.Fakes.ShimSecurityContextProviderAttribute">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Config.SecurityContextProviderAttribute</summary>
        </member>
        <member name="M:log4net.Config.Fakes.ShimSecurityContextProviderAttribute.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Config.Fakes.ShimSecurityContextProviderAttribute.#ctor(log4net.Config.SecurityContextProviderAttribute)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Config.Fakes.ShimSecurityContextProviderAttribute.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimSecurityContextProviderAttribute.AllInstances.ConfigureAssemblyILoggerRepository">
            <summary>Establecer el shim de SecurityContextProviderAttribute.Configure(Assembly sourceAssembly, ILoggerRepository targetRepository)</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimSecurityContextProviderAttribute.AllInstances.ProviderTypeGet">
            <summary>Establecer el shim de SecurityContextProviderAttribute.get_ProviderType()</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimSecurityContextProviderAttribute.AllInstances.ProviderTypeSetType">
            <summary>Establecer el shim de SecurityContextProviderAttribute.set_ProviderType(Type value)</summary>
        </member>
        <member name="M:log4net.Config.Fakes.ShimSecurityContextProviderAttribute.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Config.Fakes.ShimSecurityContextProviderAttribute.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimSecurityContextProviderAttribute.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Config.Fakes.ShimSecurityContextProviderAttribute.Bind(System.IComparable)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimSecurityContextProviderAttribute.ConfigureAssemblyILoggerRepository">
            <summary>Establecer el shim de SecurityContextProviderAttribute.Configure(Assembly sourceAssembly, ILoggerRepository targetRepository)</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimSecurityContextProviderAttribute.ConstructorType">
            <summary>Establecer el shim de SecurityContextProviderAttribute.SecurityContextProviderAttribute(Type providerType)</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimSecurityContextProviderAttribute.ProviderTypeGet">
            <summary>Establecer el shim de SecurityContextProviderAttribute.get_ProviderType()</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimSecurityContextProviderAttribute.ProviderTypeSetType">
            <summary>Establecer el shim de SecurityContextProviderAttribute.set_ProviderType(Type value)</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimSecurityContextProviderAttribute.StaticConstructor">
            <summary>Establecer el shim de SecurityContextProviderAttribute.SecurityContextProviderAttribute()</summary>
        </member>
        <member name="T:log4net.Config.Fakes.ShimXmlConfigurator">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Config.XmlConfigurator</summary>
        </member>
        <member name="M:log4net.Config.Fakes.ShimXmlConfigurator.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Config.Fakes.ShimXmlConfigurator.#ctor(log4net.Config.XmlConfigurator)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Config.Fakes.ShimXmlConfigurator.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="M:log4net.Config.Fakes.ShimXmlConfigurator.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Config.Fakes.ShimXmlConfigurator.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimXmlConfigurator.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimXmlConfigurator.Configure">
            <summary>Establecer el shim de XmlConfigurator.Configure()</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimXmlConfigurator.ConfigureAndWatchFileInfo">
            <summary>Establecer el shim de XmlConfigurator.ConfigureAndWatch(FileInfo configFile)</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimXmlConfigurator.ConfigureAndWatchILoggerRepositoryFileInfo">
            <summary>Establecer el shim de XmlConfigurator.ConfigureAndWatch(ILoggerRepository repository, FileInfo configFile)</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimXmlConfigurator.ConfigureFileInfo">
            <summary>Establecer el shim de XmlConfigurator.Configure(FileInfo configFile)</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimXmlConfigurator.ConfigureILoggerRepository">
            <summary>Establecer el shim de XmlConfigurator.Configure(ILoggerRepository repository)</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimXmlConfigurator.ConfigureILoggerRepositoryFileInfo">
            <summary>Establecer el shim de XmlConfigurator.Configure(ILoggerRepository repository, FileInfo configFile)</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimXmlConfigurator.ConfigureILoggerRepositoryStream">
            <summary>Establecer el shim de XmlConfigurator.Configure(ILoggerRepository repository, Stream configStream)</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimXmlConfigurator.ConfigureILoggerRepositoryUri">
            <summary>Establecer el shim de XmlConfigurator.Configure(ILoggerRepository repository, Uri configUri)</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimXmlConfigurator.ConfigureILoggerRepositoryXmlElement">
            <summary>Establecer el shim de XmlConfigurator.Configure(ILoggerRepository repository, XmlElement element)</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimXmlConfigurator.ConfigureStream">
            <summary>Establecer el shim de XmlConfigurator.Configure(Stream configStream)</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimXmlConfigurator.ConfigureUri">
            <summary>Establecer el shim de XmlConfigurator.Configure(Uri configUri)</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimXmlConfigurator.ConfigureXmlElement">
            <summary>Establecer el shim de XmlConfigurator.Configure(XmlElement element)</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimXmlConfigurator.Constructor">
            <summary>Establecer el shim de XmlConfigurator.XmlConfigurator()</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimXmlConfigurator.InternalConfigureAndWatchILoggerRepositoryFileInfo">
            <summary>Establecer el shim de XmlConfigurator.InternalConfigureAndWatch(ILoggerRepository repository, FileInfo configFile)</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimXmlConfigurator.InternalConfigureFromXmlILoggerRepositoryXmlElement">
            <summary>Establecer el shim de XmlConfigurator.InternalConfigureFromXml(ILoggerRepository repository, XmlElement element)</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimXmlConfigurator.InternalConfigureILoggerRepository">
            <summary>Establecer el shim de XmlConfigurator.InternalConfigure(ILoggerRepository repository)</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimXmlConfigurator.InternalConfigureILoggerRepositoryFileInfo">
            <summary>Establecer el shim de XmlConfigurator.InternalConfigure(ILoggerRepository repository, FileInfo configFile)</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimXmlConfigurator.InternalConfigureILoggerRepositoryStream">
            <summary>Establecer el shim de XmlConfigurator.InternalConfigure(ILoggerRepository repository, Stream configStream)</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimXmlConfigurator.InternalConfigureILoggerRepositoryUri">
            <summary>Establecer el shim de XmlConfigurator.InternalConfigure(ILoggerRepository repository, Uri configUri)</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimXmlConfigurator.StaticConstructor">
            <summary>Establecer el shim de XmlConfigurator.XmlConfigurator()</summary>
        </member>
        <member name="T:log4net.Config.Fakes.ShimXmlConfiguratorAttribute">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Config.XmlConfiguratorAttribute</summary>
        </member>
        <member name="M:log4net.Config.Fakes.ShimXmlConfiguratorAttribute.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Config.Fakes.ShimXmlConfiguratorAttribute.#ctor(log4net.Config.XmlConfiguratorAttribute)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Config.Fakes.ShimXmlConfiguratorAttribute.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimXmlConfiguratorAttribute.AllInstances.ConfigFileExtensionGet">
            <summary>Establecer el shim de XmlConfiguratorAttribute.get_ConfigFileExtension()</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimXmlConfiguratorAttribute.AllInstances.ConfigFileExtensionSetString">
            <summary>Establecer el shim de XmlConfiguratorAttribute.set_ConfigFileExtension(String value)</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimXmlConfiguratorAttribute.AllInstances.ConfigFileGet">
            <summary>Establecer el shim de XmlConfiguratorAttribute.get_ConfigFile()</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimXmlConfiguratorAttribute.AllInstances.ConfigFileSetString">
            <summary>Establecer el shim de XmlConfiguratorAttribute.set_ConfigFile(String value)</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimXmlConfiguratorAttribute.AllInstances.ConfigureAssemblyILoggerRepository">
            <summary>Establecer el shim de XmlConfiguratorAttribute.Configure(Assembly sourceAssembly, ILoggerRepository targetRepository)</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimXmlConfiguratorAttribute.AllInstances.ConfigureFromFileAssemblyILoggerRepository">
            <summary>Establecer el shim de XmlConfiguratorAttribute.ConfigureFromFile(Assembly sourceAssembly, ILoggerRepository targetRepository)</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimXmlConfiguratorAttribute.AllInstances.ConfigureFromFileILoggerRepositoryFileInfo">
            <summary>Establecer el shim de XmlConfiguratorAttribute.ConfigureFromFile(ILoggerRepository targetRepository, FileInfo configFile)</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimXmlConfiguratorAttribute.AllInstances.ConfigureFromUriAssemblyILoggerRepository">
            <summary>Establecer el shim de XmlConfiguratorAttribute.ConfigureFromUri(Assembly sourceAssembly, ILoggerRepository targetRepository)</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimXmlConfiguratorAttribute.AllInstances.WatchGet">
            <summary>Establecer el shim de XmlConfiguratorAttribute.get_Watch()</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimXmlConfiguratorAttribute.AllInstances.WatchSetBoolean">
            <summary>Establecer el shim de XmlConfiguratorAttribute.set_Watch(Boolean value)</summary>
        </member>
        <member name="M:log4net.Config.Fakes.ShimXmlConfiguratorAttribute.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Config.Fakes.ShimXmlConfiguratorAttribute.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimXmlConfiguratorAttribute.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Config.Fakes.ShimXmlConfiguratorAttribute.Bind(System.IComparable)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimXmlConfiguratorAttribute.ConfigFileExtensionGet">
            <summary>Establecer el shim de XmlConfiguratorAttribute.get_ConfigFileExtension()</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimXmlConfiguratorAttribute.ConfigFileExtensionSetString">
            <summary>Establecer el shim de XmlConfiguratorAttribute.set_ConfigFileExtension(String value)</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimXmlConfiguratorAttribute.ConfigFileGet">
            <summary>Establecer el shim de XmlConfiguratorAttribute.get_ConfigFile()</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimXmlConfiguratorAttribute.ConfigFileSetString">
            <summary>Establecer el shim de XmlConfiguratorAttribute.set_ConfigFile(String value)</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimXmlConfiguratorAttribute.ConfigureAssemblyILoggerRepository">
            <summary>Establecer el shim de XmlConfiguratorAttribute.Configure(Assembly sourceAssembly, ILoggerRepository targetRepository)</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimXmlConfiguratorAttribute.ConfigureFromFileAssemblyILoggerRepository">
            <summary>Establecer el shim de XmlConfiguratorAttribute.ConfigureFromFile(Assembly sourceAssembly, ILoggerRepository targetRepository)</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimXmlConfiguratorAttribute.ConfigureFromFileILoggerRepositoryFileInfo">
            <summary>Establecer el shim de XmlConfiguratorAttribute.ConfigureFromFile(ILoggerRepository targetRepository, FileInfo configFile)</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimXmlConfiguratorAttribute.ConfigureFromUriAssemblyILoggerRepository">
            <summary>Establecer el shim de XmlConfiguratorAttribute.ConfigureFromUri(Assembly sourceAssembly, ILoggerRepository targetRepository)</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimXmlConfiguratorAttribute.Constructor">
            <summary>Establecer el shim de XmlConfiguratorAttribute.XmlConfiguratorAttribute()</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimXmlConfiguratorAttribute.StaticConstructor">
            <summary>Establecer el shim de XmlConfiguratorAttribute.XmlConfiguratorAttribute()</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimXmlConfiguratorAttribute.WatchGet">
            <summary>Establecer el shim de XmlConfiguratorAttribute.get_Watch()</summary>
        </member>
        <member name="P:log4net.Config.Fakes.ShimXmlConfiguratorAttribute.WatchSetBoolean">
            <summary>Establecer el shim de XmlConfiguratorAttribute.set_Watch(Boolean value)</summary>
        </member>
        <member name="T:log4net.Config.Fakes.StubAliasRepositoryAttribute">
            <summary>Tipo stub de log4net.Config.AliasRepositoryAttribute</summary>
        </member>
        <member name="M:log4net.Config.Fakes.StubAliasRepositoryAttribute.#ctor(System.String)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:log4net.Config.Fakes.StubAliasRepositoryAttribute.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:log4net.Config.Fakes.StubAliasRepositoryAttribute.Equals(System.Object)">
            <summary>Establecer el stub de Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:log4net.Config.Fakes.StubAliasRepositoryAttribute.EqualsObject">
            <summary>Establecer el stub de Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:log4net.Config.Fakes.StubAliasRepositoryAttribute.GetHashCode">
            <summary>Establecer el stub de Attribute.GetHashCode()</summary>
        </member>
        <member name="F:log4net.Config.Fakes.StubAliasRepositoryAttribute.GetHashCode01">
            <summary>Establecer el stub de Attribute.GetHashCode()</summary>
        </member>
        <member name="M:log4net.Config.Fakes.StubAliasRepositoryAttribute.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubAliasRepositoryAttribute</summary>
        </member>
        <member name="P:log4net.Config.Fakes.StubAliasRepositoryAttribute.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Config.Fakes.StubAliasRepositoryAttribute.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="M:log4net.Config.Fakes.StubAliasRepositoryAttribute.IsDefaultAttribute">
            <summary>Establecer el stub de Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:log4net.Config.Fakes.StubAliasRepositoryAttribute.IsDefaultAttribute01">
            <summary>Establecer el stub de Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:log4net.Config.Fakes.StubAliasRepositoryAttribute.Match(System.Object)">
            <summary>Establecer el stub de Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:log4net.Config.Fakes.StubAliasRepositoryAttribute.MatchObject">
            <summary>Establecer el stub de Attribute.Match(Object obj)</summary>
        </member>
        <member name="P:log4net.Config.Fakes.StubAliasRepositoryAttribute.TypeId">
            <summary>Establecer el stub de Attribute.get_TypeId()</summary>
        </member>
        <member name="F:log4net.Config.Fakes.StubAliasRepositoryAttribute.TypeIdGet">
            <summary>Establecer el stub de Attribute.get_TypeId()</summary>
        </member>
        <member name="T:log4net.Config.Fakes.StubConfiguratorAttribute">
            <summary>Tipo stub de log4net.Config.ConfiguratorAttribute</summary>
        </member>
        <member name="M:log4net.Config.Fakes.StubConfiguratorAttribute.#ctor(System.Int32)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:log4net.Config.Fakes.StubConfiguratorAttribute.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:log4net.Config.Fakes.StubConfiguratorAttribute.Configure(System.Reflection.Assembly,log4net.Repository.ILoggerRepository)">
            <summary>Establecer el stub de ConfiguratorAttribute.Configure(Assembly sourceAssembly, ILoggerRepository targetRepository)</summary>
        </member>
        <member name="F:log4net.Config.Fakes.StubConfiguratorAttribute.ConfigureAssemblyILoggerRepository">
            <summary>Establecer el stub de ConfiguratorAttribute.Configure(Assembly sourceAssembly, ILoggerRepository targetRepository)</summary>
        </member>
        <member name="M:log4net.Config.Fakes.StubConfiguratorAttribute.Equals(System.Object)">
            <summary>Establecer el stub de Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:log4net.Config.Fakes.StubConfiguratorAttribute.EqualsObject">
            <summary>Establecer el stub de Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:log4net.Config.Fakes.StubConfiguratorAttribute.GetHashCode">
            <summary>Establecer el stub de Attribute.GetHashCode()</summary>
        </member>
        <member name="F:log4net.Config.Fakes.StubConfiguratorAttribute.GetHashCode01">
            <summary>Establecer el stub de Attribute.GetHashCode()</summary>
        </member>
        <member name="M:log4net.Config.Fakes.StubConfiguratorAttribute.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubConfiguratorAttribute</summary>
        </member>
        <member name="P:log4net.Config.Fakes.StubConfiguratorAttribute.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Config.Fakes.StubConfiguratorAttribute.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="M:log4net.Config.Fakes.StubConfiguratorAttribute.IsDefaultAttribute">
            <summary>Establecer el stub de Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:log4net.Config.Fakes.StubConfiguratorAttribute.IsDefaultAttribute01">
            <summary>Establecer el stub de Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:log4net.Config.Fakes.StubConfiguratorAttribute.Match(System.Object)">
            <summary>Establecer el stub de Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:log4net.Config.Fakes.StubConfiguratorAttribute.MatchObject">
            <summary>Establecer el stub de Attribute.Match(Object obj)</summary>
        </member>
        <member name="P:log4net.Config.Fakes.StubConfiguratorAttribute.TypeId">
            <summary>Establecer el stub de Attribute.get_TypeId()</summary>
        </member>
        <member name="F:log4net.Config.Fakes.StubConfiguratorAttribute.TypeIdGet">
            <summary>Establecer el stub de Attribute.get_TypeId()</summary>
        </member>
        <member name="T:log4net.Config.Fakes.StubLog4NetConfigurationSectionHandler">
            <summary>Tipo stub de log4net.Config.Log4NetConfigurationSectionHandler</summary>
        </member>
        <member name="M:log4net.Config.Fakes.StubLog4NetConfigurationSectionHandler.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:log4net.Config.Fakes.StubLog4NetConfigurationSectionHandler.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:log4net.Config.Fakes.StubLog4NetConfigurationSectionHandler.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubLog4NetConfigurationSectionHandler</summary>
        </member>
        <member name="P:log4net.Config.Fakes.StubLog4NetConfigurationSectionHandler.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Config.Fakes.StubLog4NetConfigurationSectionHandler.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:log4net.Config.Fakes.StubRepositoryAttribute">
            <summary>Tipo stub de log4net.Config.RepositoryAttribute</summary>
        </member>
        <member name="M:log4net.Config.Fakes.StubRepositoryAttribute.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Config.Fakes.StubRepositoryAttribute.#ctor(System.String)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:log4net.Config.Fakes.StubRepositoryAttribute.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:log4net.Config.Fakes.StubRepositoryAttribute.Equals(System.Object)">
            <summary>Establecer el stub de Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:log4net.Config.Fakes.StubRepositoryAttribute.EqualsObject">
            <summary>Establecer el stub de Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:log4net.Config.Fakes.StubRepositoryAttribute.GetHashCode">
            <summary>Establecer el stub de Attribute.GetHashCode()</summary>
        </member>
        <member name="F:log4net.Config.Fakes.StubRepositoryAttribute.GetHashCode01">
            <summary>Establecer el stub de Attribute.GetHashCode()</summary>
        </member>
        <member name="M:log4net.Config.Fakes.StubRepositoryAttribute.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubRepositoryAttribute</summary>
        </member>
        <member name="P:log4net.Config.Fakes.StubRepositoryAttribute.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Config.Fakes.StubRepositoryAttribute.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="M:log4net.Config.Fakes.StubRepositoryAttribute.IsDefaultAttribute">
            <summary>Establecer el stub de Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:log4net.Config.Fakes.StubRepositoryAttribute.IsDefaultAttribute01">
            <summary>Establecer el stub de Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:log4net.Config.Fakes.StubRepositoryAttribute.Match(System.Object)">
            <summary>Establecer el stub de Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:log4net.Config.Fakes.StubRepositoryAttribute.MatchObject">
            <summary>Establecer el stub de Attribute.Match(Object obj)</summary>
        </member>
        <member name="P:log4net.Config.Fakes.StubRepositoryAttribute.TypeId">
            <summary>Establecer el stub de Attribute.get_TypeId()</summary>
        </member>
        <member name="F:log4net.Config.Fakes.StubRepositoryAttribute.TypeIdGet">
            <summary>Establecer el stub de Attribute.get_TypeId()</summary>
        </member>
        <member name="T:log4net.Config.Fakes.StubXmlConfiguratorAttribute">
            <summary>Tipo stub de log4net.Config.XmlConfiguratorAttribute</summary>
        </member>
        <member name="M:log4net.Config.Fakes.StubXmlConfiguratorAttribute.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:log4net.Config.Fakes.StubXmlConfiguratorAttribute.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:log4net.Config.Fakes.StubXmlConfiguratorAttribute.Configure(System.Reflection.Assembly,log4net.Repository.ILoggerRepository)">
            <summary>Establecer el stub de XmlConfiguratorAttribute.Configure(Assembly sourceAssembly, ILoggerRepository targetRepository)</summary>
        </member>
        <member name="F:log4net.Config.Fakes.StubXmlConfiguratorAttribute.ConfigureAssemblyILoggerRepository">
            <summary>Establecer el stub de XmlConfiguratorAttribute.Configure(Assembly sourceAssembly, ILoggerRepository targetRepository)</summary>
        </member>
        <member name="M:log4net.Config.Fakes.StubXmlConfiguratorAttribute.Equals(System.Object)">
            <summary>Establecer el stub de Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:log4net.Config.Fakes.StubXmlConfiguratorAttribute.EqualsObject">
            <summary>Establecer el stub de Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:log4net.Config.Fakes.StubXmlConfiguratorAttribute.GetHashCode">
            <summary>Establecer el stub de Attribute.GetHashCode()</summary>
        </member>
        <member name="F:log4net.Config.Fakes.StubXmlConfiguratorAttribute.GetHashCode01">
            <summary>Establecer el stub de Attribute.GetHashCode()</summary>
        </member>
        <member name="M:log4net.Config.Fakes.StubXmlConfiguratorAttribute.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubXmlConfiguratorAttribute</summary>
        </member>
        <member name="P:log4net.Config.Fakes.StubXmlConfiguratorAttribute.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Config.Fakes.StubXmlConfiguratorAttribute.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="M:log4net.Config.Fakes.StubXmlConfiguratorAttribute.IsDefaultAttribute">
            <summary>Establecer el stub de Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:log4net.Config.Fakes.StubXmlConfiguratorAttribute.IsDefaultAttribute01">
            <summary>Establecer el stub de Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:log4net.Config.Fakes.StubXmlConfiguratorAttribute.Match(System.Object)">
            <summary>Establecer el stub de Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:log4net.Config.Fakes.StubXmlConfiguratorAttribute.MatchObject">
            <summary>Establecer el stub de Attribute.Match(Object obj)</summary>
        </member>
        <member name="P:log4net.Config.Fakes.StubXmlConfiguratorAttribute.TypeId">
            <summary>Establecer el stub de Attribute.get_TypeId()</summary>
        </member>
        <member name="F:log4net.Config.Fakes.StubXmlConfiguratorAttribute.TypeIdGet">
            <summary>Establecer el stub de Attribute.get_TypeId()</summary>
        </member>
        <member name="T:log4net.Core.Fakes.ShimCompactRepositorySelector">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Core.CompactRepositorySelector</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimCompactRepositorySelector.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimCompactRepositorySelector.#ctor(log4net.Core.CompactRepositorySelector)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Core.Fakes.ShimCompactRepositorySelector.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimCompactRepositorySelector.AllInstances.CreateRepositoryAssemblyType">
            <summary>Establecer el shim de CompactRepositorySelector.CreateRepository(Assembly assembly, Type repositoryType)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimCompactRepositorySelector.AllInstances.CreateRepositoryStringType">
            <summary>Establecer el shim de CompactRepositorySelector.CreateRepository(String repositoryName, Type repositoryType)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimCompactRepositorySelector.AllInstances.ExistsRepositoryString">
            <summary>Establecer el shim de CompactRepositorySelector.ExistsRepository(String repositoryName)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimCompactRepositorySelector.AllInstances.GetAllRepositories">
            <summary>Establecer el shim de CompactRepositorySelector.GetAllRepositories()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimCompactRepositorySelector.AllInstances.GetRepositoryAssembly">
            <summary>Establecer el shim de CompactRepositorySelector.GetRepository(Assembly assembly)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimCompactRepositorySelector.AllInstances.GetRepositoryString">
            <summary>Establecer el shim de CompactRepositorySelector.GetRepository(String repositoryName)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimCompactRepositorySelector.AllInstances.LoggerRepositoryCreatedEventAddLoggerRepositoryCreationEventHandler">
            <summary>Establecer el shim de CompactRepositorySelector.add_LoggerRepositoryCreatedEvent(LoggerRepositoryCreationEventHandler value)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimCompactRepositorySelector.AllInstances.LoggerRepositoryCreatedEventRemoveLoggerRepositoryCreationEventHandler">
            <summary>Establecer el shim de CompactRepositorySelector.remove_LoggerRepositoryCreatedEvent(LoggerRepositoryCreationEventHandler value)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimCompactRepositorySelector.AllInstances.OnLoggerRepositoryCreatedEventILoggerRepository">
            <summary>Establecer el shim de CompactRepositorySelector.OnLoggerRepositoryCreatedEvent(ILoggerRepository repository)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimCompactRepositorySelector.AllInstances.m_loggerRepositoryCreatedEventAddLoggerRepositoryCreationEventHandler">
            <summary>Establecer el shim de CompactRepositorySelector.add_m_loggerRepositoryCreatedEvent(LoggerRepositoryCreationEventHandler value)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimCompactRepositorySelector.AllInstances.m_loggerRepositoryCreatedEventRemoveLoggerRepositoryCreationEventHandler">
            <summary>Establecer el shim de CompactRepositorySelector.remove_m_loggerRepositoryCreatedEvent(LoggerRepositoryCreationEventHandler value)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimCompactRepositorySelector.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimCompactRepositorySelector.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimCompactRepositorySelector.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimCompactRepositorySelector.Bind(log4net.Core.IRepositorySelector)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimCompactRepositorySelector.ConstructorType">
            <summary>Establecer el shim de CompactRepositorySelector.CompactRepositorySelector(Type defaultRepositoryType)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimCompactRepositorySelector.CreateRepositoryAssemblyType">
            <summary>Establecer el shim de CompactRepositorySelector.CreateRepository(Assembly assembly, Type repositoryType)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimCompactRepositorySelector.CreateRepositoryStringType">
            <summary>Establecer el shim de CompactRepositorySelector.CreateRepository(String repositoryName, Type repositoryType)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimCompactRepositorySelector.ExistsRepositoryString">
            <summary>Establecer el shim de CompactRepositorySelector.ExistsRepository(String repositoryName)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimCompactRepositorySelector.GetAllRepositories">
            <summary>Establecer el shim de CompactRepositorySelector.GetAllRepositories()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimCompactRepositorySelector.GetRepositoryAssembly">
            <summary>Establecer el shim de CompactRepositorySelector.GetRepository(Assembly assembly)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimCompactRepositorySelector.GetRepositoryString">
            <summary>Establecer el shim de CompactRepositorySelector.GetRepository(String repositoryName)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimCompactRepositorySelector.LoggerRepositoryCreatedEventAddLoggerRepositoryCreationEventHandler">
            <summary>Establecer el shim de CompactRepositorySelector.add_LoggerRepositoryCreatedEvent(LoggerRepositoryCreationEventHandler value)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimCompactRepositorySelector.LoggerRepositoryCreatedEventRemoveLoggerRepositoryCreationEventHandler">
            <summary>Establecer el shim de CompactRepositorySelector.remove_LoggerRepositoryCreatedEvent(LoggerRepositoryCreationEventHandler value)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimCompactRepositorySelector.OnLoggerRepositoryCreatedEventILoggerRepository">
            <summary>Establecer el shim de CompactRepositorySelector.OnLoggerRepositoryCreatedEvent(ILoggerRepository repository)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimCompactRepositorySelector.StaticConstructor">
            <summary>Establecer el shim de CompactRepositorySelector.CompactRepositorySelector()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimCompactRepositorySelector.m_loggerRepositoryCreatedEventAddLoggerRepositoryCreationEventHandler">
            <summary>Establecer el shim de CompactRepositorySelector.add_m_loggerRepositoryCreatedEvent(LoggerRepositoryCreationEventHandler value)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimCompactRepositorySelector.m_loggerRepositoryCreatedEventRemoveLoggerRepositoryCreationEventHandler">
            <summary>Establecer el shim de CompactRepositorySelector.remove_m_loggerRepositoryCreatedEvent(LoggerRepositoryCreationEventHandler value)</summary>
        </member>
        <member name="T:log4net.Core.Fakes.ShimDefaultRepositorySelector">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Core.DefaultRepositorySelector</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimDefaultRepositorySelector.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimDefaultRepositorySelector.#ctor(log4net.Core.DefaultRepositorySelector)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimDefaultRepositorySelector.AliasRepositoryStringILoggerRepository">
            <summary>Establecer el shim de DefaultRepositorySelector.AliasRepository(String repositoryAlias, ILoggerRepository repositoryTarget)</summary>
        </member>
        <member name="T:log4net.Core.Fakes.ShimDefaultRepositorySelector.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimDefaultRepositorySelector.AllInstances.AliasRepositoryStringILoggerRepository">
            <summary>Establecer el shim de DefaultRepositorySelector.AliasRepository(String repositoryAlias, ILoggerRepository repositoryTarget)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimDefaultRepositorySelector.AllInstances.ConfigureRepositoryAssemblyILoggerRepository">
            <summary>Establecer el shim de DefaultRepositorySelector.ConfigureRepository(Assembly assembly, ILoggerRepository repository)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimDefaultRepositorySelector.AllInstances.CreateRepositoryAssemblyType">
            <summary>Establecer el shim de DefaultRepositorySelector.CreateRepository(Assembly repositoryAssembly, Type repositoryType)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimDefaultRepositorySelector.AllInstances.CreateRepositoryAssemblyTypeStringBoolean">
            <summary>Establecer el shim de DefaultRepositorySelector.CreateRepository(Assembly repositoryAssembly, Type repositoryType, String repositoryName, Boolean readAssemblyAttributes)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimDefaultRepositorySelector.AllInstances.CreateRepositoryStringType">
            <summary>Establecer el shim de DefaultRepositorySelector.CreateRepository(String repositoryName, Type repositoryType)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimDefaultRepositorySelector.AllInstances.ExistsRepositoryString">
            <summary>Establecer el shim de DefaultRepositorySelector.ExistsRepository(String repositoryName)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimDefaultRepositorySelector.AllInstances.GetAllRepositories">
            <summary>Establecer el shim de DefaultRepositorySelector.GetAllRepositories()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimDefaultRepositorySelector.AllInstances.GetInfoForAssemblyAssemblyStringRefTypeRef">
            <summary>Establecer el shim de DefaultRepositorySelector.GetInfoForAssembly(Assembly assembly, String&amp; repositoryName, Type&amp; repositoryType)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimDefaultRepositorySelector.AllInstances.GetRepositoryAssembly">
            <summary>Establecer el shim de DefaultRepositorySelector.GetRepository(Assembly repositoryAssembly)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimDefaultRepositorySelector.AllInstances.GetRepositoryString">
            <summary>Establecer el shim de DefaultRepositorySelector.GetRepository(String repositoryName)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimDefaultRepositorySelector.AllInstances.LoadAliasesAssemblyILoggerRepository">
            <summary>Establecer el shim de DefaultRepositorySelector.LoadAliases(Assembly assembly, ILoggerRepository repository)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimDefaultRepositorySelector.AllInstances.LoadPluginsAssemblyILoggerRepository">
            <summary>Establecer el shim de DefaultRepositorySelector.LoadPlugins(Assembly assembly, ILoggerRepository repository)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimDefaultRepositorySelector.AllInstances.LoggerRepositoryCreatedEventAddLoggerRepositoryCreationEventHandler">
            <summary>Establecer el shim de DefaultRepositorySelector.add_LoggerRepositoryCreatedEvent(LoggerRepositoryCreationEventHandler value)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimDefaultRepositorySelector.AllInstances.LoggerRepositoryCreatedEventRemoveLoggerRepositoryCreationEventHandler">
            <summary>Establecer el shim de DefaultRepositorySelector.remove_LoggerRepositoryCreatedEvent(LoggerRepositoryCreationEventHandler value)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimDefaultRepositorySelector.AllInstances.OnLoggerRepositoryCreatedEventILoggerRepository">
            <summary>Establecer el shim de DefaultRepositorySelector.OnLoggerRepositoryCreatedEvent(ILoggerRepository repository)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimDefaultRepositorySelector.AllInstances.m_loggerRepositoryCreatedEventAddLoggerRepositoryCreationEventHandler">
            <summary>Establecer el shim de DefaultRepositorySelector.add_m_loggerRepositoryCreatedEvent(LoggerRepositoryCreationEventHandler value)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimDefaultRepositorySelector.AllInstances.m_loggerRepositoryCreatedEventRemoveLoggerRepositoryCreationEventHandler">
            <summary>Establecer el shim de DefaultRepositorySelector.remove_m_loggerRepositoryCreatedEvent(LoggerRepositoryCreationEventHandler value)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimDefaultRepositorySelector.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimDefaultRepositorySelector.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimDefaultRepositorySelector.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimDefaultRepositorySelector.Bind(log4net.Core.IRepositorySelector)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimDefaultRepositorySelector.ConfigureRepositoryAssemblyILoggerRepository">
            <summary>Establecer el shim de DefaultRepositorySelector.ConfigureRepository(Assembly assembly, ILoggerRepository repository)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimDefaultRepositorySelector.ConstructorType">
            <summary>Establecer el shim de DefaultRepositorySelector.DefaultRepositorySelector(Type defaultRepositoryType)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimDefaultRepositorySelector.CreateRepositoryAssemblyType">
            <summary>Establecer el shim de DefaultRepositorySelector.CreateRepository(Assembly repositoryAssembly, Type repositoryType)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimDefaultRepositorySelector.CreateRepositoryAssemblyTypeStringBoolean">
            <summary>Establecer el shim de DefaultRepositorySelector.CreateRepository(Assembly repositoryAssembly, Type repositoryType, String repositoryName, Boolean readAssemblyAttributes)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimDefaultRepositorySelector.CreateRepositoryStringType">
            <summary>Establecer el shim de DefaultRepositorySelector.CreateRepository(String repositoryName, Type repositoryType)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimDefaultRepositorySelector.ExistsRepositoryString">
            <summary>Establecer el shim de DefaultRepositorySelector.ExistsRepository(String repositoryName)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimDefaultRepositorySelector.GetAllRepositories">
            <summary>Establecer el shim de DefaultRepositorySelector.GetAllRepositories()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimDefaultRepositorySelector.GetInfoForAssemblyAssemblyStringRefTypeRef">
            <summary>Establecer el shim de DefaultRepositorySelector.GetInfoForAssembly(Assembly assembly, String&amp; repositoryName, Type&amp; repositoryType)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimDefaultRepositorySelector.GetRepositoryAssembly">
            <summary>Establecer el shim de DefaultRepositorySelector.GetRepository(Assembly repositoryAssembly)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimDefaultRepositorySelector.GetRepositoryString">
            <summary>Establecer el shim de DefaultRepositorySelector.GetRepository(String repositoryName)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimDefaultRepositorySelector.LoadAliasesAssemblyILoggerRepository">
            <summary>Establecer el shim de DefaultRepositorySelector.LoadAliases(Assembly assembly, ILoggerRepository repository)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimDefaultRepositorySelector.LoadPluginsAssemblyILoggerRepository">
            <summary>Establecer el shim de DefaultRepositorySelector.LoadPlugins(Assembly assembly, ILoggerRepository repository)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimDefaultRepositorySelector.LoggerRepositoryCreatedEventAddLoggerRepositoryCreationEventHandler">
            <summary>Establecer el shim de DefaultRepositorySelector.add_LoggerRepositoryCreatedEvent(LoggerRepositoryCreationEventHandler value)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimDefaultRepositorySelector.LoggerRepositoryCreatedEventRemoveLoggerRepositoryCreationEventHandler">
            <summary>Establecer el shim de DefaultRepositorySelector.remove_LoggerRepositoryCreatedEvent(LoggerRepositoryCreationEventHandler value)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimDefaultRepositorySelector.OnLoggerRepositoryCreatedEventILoggerRepository">
            <summary>Establecer el shim de DefaultRepositorySelector.OnLoggerRepositoryCreatedEvent(ILoggerRepository repository)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimDefaultRepositorySelector.StaticConstructor">
            <summary>Establecer el shim de DefaultRepositorySelector.DefaultRepositorySelector()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimDefaultRepositorySelector.m_loggerRepositoryCreatedEventAddLoggerRepositoryCreationEventHandler">
            <summary>Establecer el shim de DefaultRepositorySelector.add_m_loggerRepositoryCreatedEvent(LoggerRepositoryCreationEventHandler value)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimDefaultRepositorySelector.m_loggerRepositoryCreatedEventRemoveLoggerRepositoryCreationEventHandler">
            <summary>Establecer el shim de DefaultRepositorySelector.remove_m_loggerRepositoryCreatedEvent(LoggerRepositoryCreationEventHandler value)</summary>
        </member>
        <member name="T:log4net.Core.Fakes.ShimExceptionEvaluator">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Core.ExceptionEvaluator</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimExceptionEvaluator.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimExceptionEvaluator.#ctor(log4net.Core.ExceptionEvaluator)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Core.Fakes.ShimExceptionEvaluator.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimExceptionEvaluator.AllInstances.ExceptionTypeGet">
            <summary>Establecer el shim de ExceptionEvaluator.get_ExceptionType()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimExceptionEvaluator.AllInstances.ExceptionTypeSetType">
            <summary>Establecer el shim de ExceptionEvaluator.set_ExceptionType(Type value)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimExceptionEvaluator.AllInstances.IsTriggeringEventLoggingEvent">
            <summary>Establecer el shim de ExceptionEvaluator.IsTriggeringEvent(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimExceptionEvaluator.AllInstances.TriggerOnSubclassGet">
            <summary>Establecer el shim de ExceptionEvaluator.get_TriggerOnSubclass()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimExceptionEvaluator.AllInstances.TriggerOnSubclassSetBoolean">
            <summary>Establecer el shim de ExceptionEvaluator.set_TriggerOnSubclass(Boolean value)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimExceptionEvaluator.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimExceptionEvaluator.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimExceptionEvaluator.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimExceptionEvaluator.Bind(log4net.Core.ITriggeringEventEvaluator)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimExceptionEvaluator.Constructor">
            <summary>Establecer el shim de ExceptionEvaluator.ExceptionEvaluator()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimExceptionEvaluator.ConstructorTypeBoolean">
            <summary>Establecer el shim de ExceptionEvaluator.ExceptionEvaluator(Type exType, Boolean triggerOnSubClass)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimExceptionEvaluator.ExceptionTypeGet">
            <summary>Establecer el shim de ExceptionEvaluator.get_ExceptionType()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimExceptionEvaluator.ExceptionTypeSetType">
            <summary>Establecer el shim de ExceptionEvaluator.set_ExceptionType(Type value)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimExceptionEvaluator.IsTriggeringEventLoggingEvent">
            <summary>Establecer el shim de ExceptionEvaluator.IsTriggeringEvent(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimExceptionEvaluator.TriggerOnSubclassGet">
            <summary>Establecer el shim de ExceptionEvaluator.get_TriggerOnSubclass()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimExceptionEvaluator.TriggerOnSubclassSetBoolean">
            <summary>Establecer el shim de ExceptionEvaluator.set_TriggerOnSubclass(Boolean value)</summary>
        </member>
        <member name="T:log4net.Core.Fakes.ShimLevel">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Core.Level</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLevel.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLevel.#ctor(log4net.Core.Level)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Core.Fakes.ShimLevel.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevel.AllInstances.CompareToObject">
            <summary>Establecer el shim de Level.CompareTo(Object r)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevel.AllInstances.DisplayNameGet">
            <summary>Establecer el shim de Level.get_DisplayName()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevel.AllInstances.EqualsObject">
            <summary>Establecer el shim de Level.Equals(Object o)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevel.AllInstances.GetHashCode01">
            <summary>Establecer el shim de Level.GetHashCode()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevel.AllInstances.NameGet">
            <summary>Establecer el shim de Level.get_Name()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevel.AllInstances.ToString01">
            <summary>Establecer el shim de Level.ToString()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevel.AllInstances.ValueGet">
            <summary>Establecer el shim de Level.get_Value()</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLevel.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLevel.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevel.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLevel.Bind(System.IComparable)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevel.CompareLevelLevel">
            <summary>Establecer el shim de Level.Compare(Level l, Level r)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevel.CompareToObject">
            <summary>Establecer el shim de Level.CompareTo(Object r)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevel.ConstructorInt32String">
            <summary>Establecer el shim de Level.Level(Int32 level, String levelName)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevel.ConstructorInt32StringString">
            <summary>Establecer el shim de Level.Level(Int32 level, String levelName, String displayName)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevel.DisplayNameGet">
            <summary>Establecer el shim de Level.get_DisplayName()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevel.EqualityOpLevelLevel">
            <summary>Establecer el shim de Level.op_Equality(Level l, Level r)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevel.EqualsObject">
            <summary>Establecer el shim de Level.Equals(Object o)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevel.GetHashCode">
            <summary>Establecer el shim de Level.GetHashCode()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevel.GreaterThanOpLevelLevel">
            <summary>Establecer el shim de Level.op_GreaterThan(Level l, Level r)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevel.GreaterThanOrEqualOpLevelLevel">
            <summary>Establecer el shim de Level.op_GreaterThanOrEqual(Level l, Level r)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevel.InequalityOpLevelLevel">
            <summary>Establecer el shim de Level.op_Inequality(Level l, Level r)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevel.LessThanOpLevelLevel">
            <summary>Establecer el shim de Level.op_LessThan(Level l, Level r)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevel.LessThanOrEqualOpLevelLevel">
            <summary>Establecer el shim de Level.op_LessThanOrEqual(Level l, Level r)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevel.NameGet">
            <summary>Establecer el shim de Level.get_Name()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevel.StaticConstructor">
            <summary>Establecer el shim de Level.Level()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevel.ToString">
            <summary>Establecer el shim de Level.ToString()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevel.ValueGet">
            <summary>Establecer el shim de Level.get_Value()</summary>
        </member>
        <member name="T:log4net.Core.Fakes.ShimLevelCollection">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Core.LevelCollection</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLevelCollection.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLevelCollection.#ctor(log4net.Core.LevelCollection)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.AddLevel">
            <summary>Establecer el shim de LevelCollection.Add(Level item)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.AddRangeICollection">
            <summary>Establecer el shim de LevelCollection.AddRange(ICollection col)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.AddRangeLevelArray">
            <summary>Establecer el shim de LevelCollection.AddRange(Level[] x)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.AddRangeLevelCollection">
            <summary>Establecer el shim de LevelCollection.AddRange(LevelCollection x)</summary>
        </member>
        <member name="T:log4net.Core.Fakes.ShimLevelCollection.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.AllInstances.AddLevel">
            <summary>Establecer el shim de LevelCollection.Add(Level item)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.AllInstances.AddRangeICollection">
            <summary>Establecer el shim de LevelCollection.AddRange(ICollection col)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.AllInstances.AddRangeLevelArray">
            <summary>Establecer el shim de LevelCollection.AddRange(Level[] x)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.AllInstances.AddRangeLevelCollection">
            <summary>Establecer el shim de LevelCollection.AddRange(LevelCollection x)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.AllInstances.CapacityGet">
            <summary>Establecer el shim de LevelCollection.get_Capacity()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.AllInstances.CapacitySetInt32">
            <summary>Establecer el shim de LevelCollection.set_Capacity(Int32 value)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.AllInstances.Clear">
            <summary>Establecer el shim de LevelCollection.Clear()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.AllInstances.Clone">
            <summary>Establecer el shim de LevelCollection.Clone()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.AllInstances.ContainsLevel">
            <summary>Establecer el shim de LevelCollection.Contains(Level item)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.AllInstances.CopyToLevelArray">
            <summary>Establecer el shim de LevelCollection.CopyTo(Level[] array)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.AllInstances.CopyToLevelArrayInt32">
            <summary>Establecer el shim de LevelCollection.CopyTo(Level[] array, Int32 start)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.AllInstances.CountGet">
            <summary>Establecer el shim de LevelCollection.get_Count()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.AllInstances.EnsureCapacityInt32">
            <summary>Establecer el shim de LevelCollection.EnsureCapacity(Int32 min)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.AllInstances.GetEnumerator">
            <summary>Establecer el shim de LevelCollection.GetEnumerator()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.AllInstances.IndexOfLevel">
            <summary>Establecer el shim de LevelCollection.IndexOf(Level item)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.AllInstances.InsertInt32Level">
            <summary>Establecer el shim de LevelCollection.Insert(Int32 index, Level item)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.AllInstances.IsFixedSizeGet">
            <summary>Establecer el shim de LevelCollection.get_IsFixedSize()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.AllInstances.IsReadOnlyGet">
            <summary>Establecer el shim de LevelCollection.get_IsReadOnly()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.AllInstances.IsSynchronizedGet">
            <summary>Establecer el shim de LevelCollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.AllInstances.ItemGetInt32">
            <summary>Establecer el shim de LevelCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.AllInstances.ItemSetInt32Level">
            <summary>Establecer el shim de LevelCollection.set_Item(Int32 index, Level value)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.AllInstances.ItemSystemCollectionsIListgetInt32">
            <summary>Establecer el shim de LevelCollection.System.Collections.IList.get_Item(Int32 i)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.AllInstances.ItemSystemCollectionsIListsetInt32Object">
            <summary>Establecer el shim de LevelCollection.System.Collections.IList.set_Item(Int32 i, Object value)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.AllInstances.RemoveAtInt32">
            <summary>Establecer el shim de LevelCollection.RemoveAt(Int32 index)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.AllInstances.RemoveLevel">
            <summary>Establecer el shim de LevelCollection.Remove(Level item)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.AllInstances.SyncRootGet">
            <summary>Establecer el shim de LevelCollection.get_SyncRoot()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.AllInstances.SystemCollectionsICollectionCopyToArrayInt32">
            <summary>Establecer el shim de LevelCollection.System.Collections.ICollection.CopyTo(Array array, Int32 start)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Establecer el shim de LevelCollection.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.AllInstances.SystemCollectionsIListAddObject">
            <summary>Establecer el shim de LevelCollection.System.Collections.IList.Add(Object x)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.AllInstances.SystemCollectionsIListContainsObject">
            <summary>Establecer el shim de LevelCollection.System.Collections.IList.Contains(Object x)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.AllInstances.SystemCollectionsIListIndexOfObject">
            <summary>Establecer el shim de LevelCollection.System.Collections.IList.IndexOf(Object x)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.AllInstances.SystemCollectionsIListInsertInt32Object">
            <summary>Establecer el shim de LevelCollection.System.Collections.IList.Insert(Int32 pos, Object x)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.AllInstances.SystemCollectionsIListRemoveAtInt32">
            <summary>Establecer el shim de LevelCollection.System.Collections.IList.RemoveAt(Int32 pos)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.AllInstances.SystemCollectionsIListRemoveObject">
            <summary>Establecer el shim de LevelCollection.System.Collections.IList.Remove(Object x)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.AllInstances.TrimToSize">
            <summary>Establecer el shim de LevelCollection.TrimToSize()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.AllInstances.ValidateIndexInt32">
            <summary>Establecer el shim de LevelCollection.ValidateIndex(Int32 i)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.AllInstances.ValidateIndexInt32Boolean">
            <summary>Establecer el shim de LevelCollection.ValidateIndex(Int32 i, Boolean allowEqualEnd)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLevelCollection.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLevelCollection.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLevelCollection.Bind(System.ICloneable)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLevelCollection.Bind(System.Collections.ICollection)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLevelCollection.Bind(System.Collections.IEnumerable)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLevelCollection.Bind(System.Collections.IList)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.CapacityGet">
            <summary>Establecer el shim de LevelCollection.get_Capacity()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.CapacitySetInt32">
            <summary>Establecer el shim de LevelCollection.set_Capacity(Int32 value)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.Clear">
            <summary>Establecer el shim de LevelCollection.Clear()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.Clone">
            <summary>Establecer el shim de LevelCollection.Clone()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.Constructor">
            <summary>Establecer el shim de LevelCollection.LevelCollection()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.ConstructorICollection">
            <summary>Establecer el shim de LevelCollection.LevelCollection(ICollection col)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.ConstructorInt32">
            <summary>Establecer el shim de LevelCollection.LevelCollection(Int32 capacity)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.ConstructorLevelArray">
            <summary>Establecer el shim de LevelCollection.LevelCollection(Level[] a)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.ConstructorLevelCollection">
            <summary>Establecer el shim de LevelCollection.LevelCollection(LevelCollection c)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.ContainsLevel">
            <summary>Establecer el shim de LevelCollection.Contains(Level item)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.CopyToLevelArray">
            <summary>Establecer el shim de LevelCollection.CopyTo(Level[] array)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.CopyToLevelArrayInt32">
            <summary>Establecer el shim de LevelCollection.CopyTo(Level[] array, Int32 start)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.CountGet">
            <summary>Establecer el shim de LevelCollection.get_Count()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.EnsureCapacityInt32">
            <summary>Establecer el shim de LevelCollection.EnsureCapacity(Int32 min)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.GetEnumerator">
            <summary>Establecer el shim de LevelCollection.GetEnumerator()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.IndexOfLevel">
            <summary>Establecer el shim de LevelCollection.IndexOf(Level item)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.InsertInt32Level">
            <summary>Establecer el shim de LevelCollection.Insert(Int32 index, Level item)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.IsFixedSizeGet">
            <summary>Establecer el shim de LevelCollection.get_IsFixedSize()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.IsReadOnlyGet">
            <summary>Establecer el shim de LevelCollection.get_IsReadOnly()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.IsSynchronizedGet">
            <summary>Establecer el shim de LevelCollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.ItemGetInt32">
            <summary>Establecer el shim de LevelCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.ItemSetInt32Level">
            <summary>Establecer el shim de LevelCollection.set_Item(Int32 index, Level value)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.ItemSystemCollectionsIListgetInt32">
            <summary>Establecer el shim de LevelCollection.System.Collections.IList.get_Item(Int32 i)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.ItemSystemCollectionsIListsetInt32Object">
            <summary>Establecer el shim de LevelCollection.System.Collections.IList.set_Item(Int32 i, Object value)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.ReadOnlyLevelCollection">
            <summary>Establecer el shim de LevelCollection.ReadOnly(LevelCollection list)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.RemoveAtInt32">
            <summary>Establecer el shim de LevelCollection.RemoveAt(Int32 index)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.RemoveLevel">
            <summary>Establecer el shim de LevelCollection.Remove(Level item)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.SyncRootGet">
            <summary>Establecer el shim de LevelCollection.get_SyncRoot()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.SystemCollectionsICollectionCopyToArrayInt32">
            <summary>Establecer el shim de LevelCollection.System.Collections.ICollection.CopyTo(Array array, Int32 start)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Establecer el shim de LevelCollection.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.SystemCollectionsIListAddObject">
            <summary>Establecer el shim de LevelCollection.System.Collections.IList.Add(Object x)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.SystemCollectionsIListContainsObject">
            <summary>Establecer el shim de LevelCollection.System.Collections.IList.Contains(Object x)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.SystemCollectionsIListIndexOfObject">
            <summary>Establecer el shim de LevelCollection.System.Collections.IList.IndexOf(Object x)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.SystemCollectionsIListInsertInt32Object">
            <summary>Establecer el shim de LevelCollection.System.Collections.IList.Insert(Int32 pos, Object x)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.SystemCollectionsIListRemoveAtInt32">
            <summary>Establecer el shim de LevelCollection.System.Collections.IList.RemoveAt(Int32 pos)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.SystemCollectionsIListRemoveObject">
            <summary>Establecer el shim de LevelCollection.System.Collections.IList.Remove(Object x)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.TrimToSize">
            <summary>Establecer el shim de LevelCollection.TrimToSize()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.ValidateIndexInt32">
            <summary>Establecer el shim de LevelCollection.ValidateIndex(Int32 i)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelCollection.ValidateIndexInt32Boolean">
            <summary>Establecer el shim de LevelCollection.ValidateIndex(Int32 i, Boolean allowEqualEnd)</summary>
        </member>
        <member name="T:log4net.Core.Fakes.ShimLevelEvaluator">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Core.LevelEvaluator</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLevelEvaluator.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLevelEvaluator.#ctor(log4net.Core.LevelEvaluator)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Core.Fakes.ShimLevelEvaluator.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelEvaluator.AllInstances.IsTriggeringEventLoggingEvent">
            <summary>Establecer el shim de LevelEvaluator.IsTriggeringEvent(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelEvaluator.AllInstances.ThresholdGet">
            <summary>Establecer el shim de LevelEvaluator.get_Threshold()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelEvaluator.AllInstances.ThresholdSetLevel">
            <summary>Establecer el shim de LevelEvaluator.set_Threshold(Level value)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLevelEvaluator.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLevelEvaluator.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelEvaluator.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLevelEvaluator.Bind(log4net.Core.ITriggeringEventEvaluator)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelEvaluator.Constructor">
            <summary>Establecer el shim de LevelEvaluator.LevelEvaluator()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelEvaluator.ConstructorLevel">
            <summary>Establecer el shim de LevelEvaluator.LevelEvaluator(Level threshold)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelEvaluator.IsTriggeringEventLoggingEvent">
            <summary>Establecer el shim de LevelEvaluator.IsTriggeringEvent(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelEvaluator.ThresholdGet">
            <summary>Establecer el shim de LevelEvaluator.get_Threshold()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelEvaluator.ThresholdSetLevel">
            <summary>Establecer el shim de LevelEvaluator.set_Threshold(Level value)</summary>
        </member>
        <member name="T:log4net.Core.Fakes.ShimLevelMap">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Core.LevelMap</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLevelMap.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLevelMap.#ctor(log4net.Core.LevelMap)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelMap.AddLevel">
            <summary>Establecer el shim de LevelMap.Add(Level level)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelMap.AddStringInt32">
            <summary>Establecer el shim de LevelMap.Add(String name, Int32 value)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelMap.AddStringInt32String">
            <summary>Establecer el shim de LevelMap.Add(String name, Int32 value, String displayName)</summary>
        </member>
        <member name="T:log4net.Core.Fakes.ShimLevelMap.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelMap.AllInstances.AddLevel">
            <summary>Establecer el shim de LevelMap.Add(Level level)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelMap.AllInstances.AddStringInt32">
            <summary>Establecer el shim de LevelMap.Add(String name, Int32 value)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelMap.AllInstances.AddStringInt32String">
            <summary>Establecer el shim de LevelMap.Add(String name, Int32 value, String displayName)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelMap.AllInstances.AllLevelsGet">
            <summary>Establecer el shim de LevelMap.get_AllLevels()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelMap.AllInstances.Clear">
            <summary>Establecer el shim de LevelMap.Clear()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelMap.AllInstances.ItemGetString">
            <summary>Establecer el shim de LevelMap.get_Item(String name)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelMap.AllInstances.LookupWithDefaultLevel">
            <summary>Establecer el shim de LevelMap.LookupWithDefault(Level defaultLevel)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelMap.AllLevelsGet">
            <summary>Establecer el shim de LevelMap.get_AllLevels()</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLevelMap.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLevelMap.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelMap.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelMap.Clear">
            <summary>Establecer el shim de LevelMap.Clear()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelMap.Constructor">
            <summary>Establecer el shim de LevelMap.LevelMap()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelMap.ItemGetString">
            <summary>Establecer el shim de LevelMap.get_Item(String name)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLevelMap.LookupWithDefaultLevel">
            <summary>Establecer el shim de LevelMap.LookupWithDefault(Level defaultLevel)</summary>
        </member>
        <member name="T:log4net.Core.Fakes.ShimLocationInfo">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Core.LocationInfo</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLocationInfo.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLocationInfo.#ctor(log4net.Core.LocationInfo)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Core.Fakes.ShimLocationInfo.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLocationInfo.AllInstances.ClassNameGet">
            <summary>Establecer el shim de LocationInfo.get_ClassName()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLocationInfo.AllInstances.FileNameGet">
            <summary>Establecer el shim de LocationInfo.get_FileName()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLocationInfo.AllInstances.FullInfoGet">
            <summary>Establecer el shim de LocationInfo.get_FullInfo()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLocationInfo.AllInstances.LineNumberGet">
            <summary>Establecer el shim de LocationInfo.get_LineNumber()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLocationInfo.AllInstances.MethodNameGet">
            <summary>Establecer el shim de LocationInfo.get_MethodName()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLocationInfo.AllInstances.StackFramesGet">
            <summary>Establecer el shim de LocationInfo.get_StackFrames()</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLocationInfo.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLocationInfo.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLocationInfo.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLocationInfo.ClassNameGet">
            <summary>Establecer el shim de LocationInfo.get_ClassName()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLocationInfo.ConstructorStringStringStringString">
            <summary>Establecer el shim de LocationInfo.LocationInfo(String className, String methodName, String fileName, String lineNumber)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLocationInfo.ConstructorType">
            <summary>Establecer el shim de LocationInfo.LocationInfo(Type callerStackBoundaryDeclaringType)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLocationInfo.FileNameGet">
            <summary>Establecer el shim de LocationInfo.get_FileName()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLocationInfo.FullInfoGet">
            <summary>Establecer el shim de LocationInfo.get_FullInfo()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLocationInfo.LineNumberGet">
            <summary>Establecer el shim de LocationInfo.get_LineNumber()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLocationInfo.MethodNameGet">
            <summary>Establecer el shim de LocationInfo.get_MethodName()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLocationInfo.StackFramesGet">
            <summary>Establecer el shim de LocationInfo.get_StackFrames()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLocationInfo.StaticConstructor">
            <summary>Establecer el shim de LocationInfo.LocationInfo()</summary>
        </member>
        <member name="T:log4net.Core.Fakes.ShimLogException">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Core.LogException</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLogException.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLogException.#ctor(log4net.Core.LogException)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Core.Fakes.ShimLogException.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLogException.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLogException.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogException.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLogException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogException.Constructor">
            <summary>Establecer el shim de LogException.LogException()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogException.ConstructorSerializationInfoStreamingContext">
            <summary>Establecer el shim de LogException.LogException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogException.ConstructorString">
            <summary>Establecer el shim de LogException.LogException(String message)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogException.ConstructorStringException">
            <summary>Establecer el shim de LogException.LogException(String message, Exception innerException)</summary>
        </member>
        <member name="T:log4net.Core.Fakes.ShimLogImpl">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Core.LogImpl</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLogImpl.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLogImpl.#ctor(log4net.Core.LogImpl)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Core.Fakes.ShimLogImpl.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.AllInstances.DebugFormatIFormatProviderStringObjectArray">
            <summary>Establecer el shim de LogImpl.DebugFormat(IFormatProvider provider, String format, Object[] args)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.AllInstances.DebugFormatStringObject">
            <summary>Establecer el shim de LogImpl.DebugFormat(String format, Object arg0)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.AllInstances.DebugFormatStringObjectArray">
            <summary>Establecer el shim de LogImpl.DebugFormat(String format, Object[] args)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.AllInstances.DebugFormatStringObjectObject">
            <summary>Establecer el shim de LogImpl.DebugFormat(String format, Object arg0, Object arg1)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.AllInstances.DebugFormatStringObjectObjectObject">
            <summary>Establecer el shim de LogImpl.DebugFormat(String format, Object arg0, Object arg1, Object arg2)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.AllInstances.DebugObject">
            <summary>Establecer el shim de LogImpl.Debug(Object message)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.AllInstances.DebugObjectException">
            <summary>Establecer el shim de LogImpl.Debug(Object message, Exception exception)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.AllInstances.ErrorFormatIFormatProviderStringObjectArray">
            <summary>Establecer el shim de LogImpl.ErrorFormat(IFormatProvider provider, String format, Object[] args)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.AllInstances.ErrorFormatStringObject">
            <summary>Establecer el shim de LogImpl.ErrorFormat(String format, Object arg0)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.AllInstances.ErrorFormatStringObjectArray">
            <summary>Establecer el shim de LogImpl.ErrorFormat(String format, Object[] args)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.AllInstances.ErrorFormatStringObjectObject">
            <summary>Establecer el shim de LogImpl.ErrorFormat(String format, Object arg0, Object arg1)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.AllInstances.ErrorFormatStringObjectObjectObject">
            <summary>Establecer el shim de LogImpl.ErrorFormat(String format, Object arg0, Object arg1, Object arg2)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.AllInstances.ErrorObject">
            <summary>Establecer el shim de LogImpl.Error(Object message)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.AllInstances.ErrorObjectException">
            <summary>Establecer el shim de LogImpl.Error(Object message, Exception exception)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.AllInstances.FatalFormatIFormatProviderStringObjectArray">
            <summary>Establecer el shim de LogImpl.FatalFormat(IFormatProvider provider, String format, Object[] args)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.AllInstances.FatalFormatStringObject">
            <summary>Establecer el shim de LogImpl.FatalFormat(String format, Object arg0)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.AllInstances.FatalFormatStringObjectArray">
            <summary>Establecer el shim de LogImpl.FatalFormat(String format, Object[] args)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.AllInstances.FatalFormatStringObjectObject">
            <summary>Establecer el shim de LogImpl.FatalFormat(String format, Object arg0, Object arg1)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.AllInstances.FatalFormatStringObjectObjectObject">
            <summary>Establecer el shim de LogImpl.FatalFormat(String format, Object arg0, Object arg1, Object arg2)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.AllInstances.FatalObject">
            <summary>Establecer el shim de LogImpl.Fatal(Object message)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.AllInstances.FatalObjectException">
            <summary>Establecer el shim de LogImpl.Fatal(Object message, Exception exception)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.AllInstances.InfoFormatIFormatProviderStringObjectArray">
            <summary>Establecer el shim de LogImpl.InfoFormat(IFormatProvider provider, String format, Object[] args)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.AllInstances.InfoFormatStringObject">
            <summary>Establecer el shim de LogImpl.InfoFormat(String format, Object arg0)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.AllInstances.InfoFormatStringObjectArray">
            <summary>Establecer el shim de LogImpl.InfoFormat(String format, Object[] args)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.AllInstances.InfoFormatStringObjectObject">
            <summary>Establecer el shim de LogImpl.InfoFormat(String format, Object arg0, Object arg1)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.AllInstances.InfoFormatStringObjectObjectObject">
            <summary>Establecer el shim de LogImpl.InfoFormat(String format, Object arg0, Object arg1, Object arg2)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.AllInstances.InfoObject">
            <summary>Establecer el shim de LogImpl.Info(Object message)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.AllInstances.InfoObjectException">
            <summary>Establecer el shim de LogImpl.Info(Object message, Exception exception)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.AllInstances.IsDebugEnabledGet">
            <summary>Establecer el shim de LogImpl.get_IsDebugEnabled()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.AllInstances.IsErrorEnabledGet">
            <summary>Establecer el shim de LogImpl.get_IsErrorEnabled()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.AllInstances.IsFatalEnabledGet">
            <summary>Establecer el shim de LogImpl.get_IsFatalEnabled()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.AllInstances.IsInfoEnabledGet">
            <summary>Establecer el shim de LogImpl.get_IsInfoEnabled()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.AllInstances.IsWarnEnabledGet">
            <summary>Establecer el shim de LogImpl.get_IsWarnEnabled()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.AllInstances.LoggerRepositoryConfigurationChangedObjectEventArgs">
            <summary>Establecer el shim de LogImpl.LoggerRepositoryConfigurationChanged(Object sender, EventArgs e)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.AllInstances.ReloadLevelsILoggerRepository">
            <summary>Establecer el shim de LogImpl.ReloadLevels(ILoggerRepository repository)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.AllInstances.WarnFormatIFormatProviderStringObjectArray">
            <summary>Establecer el shim de LogImpl.WarnFormat(IFormatProvider provider, String format, Object[] args)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.AllInstances.WarnFormatStringObject">
            <summary>Establecer el shim de LogImpl.WarnFormat(String format, Object arg0)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.AllInstances.WarnFormatStringObjectArray">
            <summary>Establecer el shim de LogImpl.WarnFormat(String format, Object[] args)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.AllInstances.WarnFormatStringObjectObject">
            <summary>Establecer el shim de LogImpl.WarnFormat(String format, Object arg0, Object arg1)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.AllInstances.WarnFormatStringObjectObjectObject">
            <summary>Establecer el shim de LogImpl.WarnFormat(String format, Object arg0, Object arg1, Object arg2)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.AllInstances.WarnObject">
            <summary>Establecer el shim de LogImpl.Warn(Object message)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.AllInstances.WarnObjectException">
            <summary>Establecer el shim de LogImpl.Warn(Object message, Exception exception)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLogImpl.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLogImpl.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLogImpl.Bind(log4net.ILog)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLogImpl.Bind(log4net.Core.ILoggerWrapper)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.ConstructorILogger">
            <summary>Establecer el shim de LogImpl.LogImpl(ILogger logger)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.DebugFormatIFormatProviderStringObjectArray">
            <summary>Establecer el shim de LogImpl.DebugFormat(IFormatProvider provider, String format, Object[] args)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.DebugFormatStringObject">
            <summary>Establecer el shim de LogImpl.DebugFormat(String format, Object arg0)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.DebugFormatStringObjectArray">
            <summary>Establecer el shim de LogImpl.DebugFormat(String format, Object[] args)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.DebugFormatStringObjectObject">
            <summary>Establecer el shim de LogImpl.DebugFormat(String format, Object arg0, Object arg1)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.DebugFormatStringObjectObjectObject">
            <summary>Establecer el shim de LogImpl.DebugFormat(String format, Object arg0, Object arg1, Object arg2)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.DebugObject">
            <summary>Establecer el shim de LogImpl.Debug(Object message)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.DebugObjectException">
            <summary>Establecer el shim de LogImpl.Debug(Object message, Exception exception)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.ErrorFormatIFormatProviderStringObjectArray">
            <summary>Establecer el shim de LogImpl.ErrorFormat(IFormatProvider provider, String format, Object[] args)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.ErrorFormatStringObject">
            <summary>Establecer el shim de LogImpl.ErrorFormat(String format, Object arg0)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.ErrorFormatStringObjectArray">
            <summary>Establecer el shim de LogImpl.ErrorFormat(String format, Object[] args)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.ErrorFormatStringObjectObject">
            <summary>Establecer el shim de LogImpl.ErrorFormat(String format, Object arg0, Object arg1)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.ErrorFormatStringObjectObjectObject">
            <summary>Establecer el shim de LogImpl.ErrorFormat(String format, Object arg0, Object arg1, Object arg2)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.ErrorObject">
            <summary>Establecer el shim de LogImpl.Error(Object message)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.ErrorObjectException">
            <summary>Establecer el shim de LogImpl.Error(Object message, Exception exception)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.FatalFormatIFormatProviderStringObjectArray">
            <summary>Establecer el shim de LogImpl.FatalFormat(IFormatProvider provider, String format, Object[] args)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.FatalFormatStringObject">
            <summary>Establecer el shim de LogImpl.FatalFormat(String format, Object arg0)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.FatalFormatStringObjectArray">
            <summary>Establecer el shim de LogImpl.FatalFormat(String format, Object[] args)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.FatalFormatStringObjectObject">
            <summary>Establecer el shim de LogImpl.FatalFormat(String format, Object arg0, Object arg1)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.FatalFormatStringObjectObjectObject">
            <summary>Establecer el shim de LogImpl.FatalFormat(String format, Object arg0, Object arg1, Object arg2)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.FatalObject">
            <summary>Establecer el shim de LogImpl.Fatal(Object message)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.FatalObjectException">
            <summary>Establecer el shim de LogImpl.Fatal(Object message, Exception exception)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.InfoFormatIFormatProviderStringObjectArray">
            <summary>Establecer el shim de LogImpl.InfoFormat(IFormatProvider provider, String format, Object[] args)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.InfoFormatStringObject">
            <summary>Establecer el shim de LogImpl.InfoFormat(String format, Object arg0)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.InfoFormatStringObjectArray">
            <summary>Establecer el shim de LogImpl.InfoFormat(String format, Object[] args)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.InfoFormatStringObjectObject">
            <summary>Establecer el shim de LogImpl.InfoFormat(String format, Object arg0, Object arg1)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.InfoFormatStringObjectObjectObject">
            <summary>Establecer el shim de LogImpl.InfoFormat(String format, Object arg0, Object arg1, Object arg2)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.InfoObject">
            <summary>Establecer el shim de LogImpl.Info(Object message)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.InfoObjectException">
            <summary>Establecer el shim de LogImpl.Info(Object message, Exception exception)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.IsDebugEnabledGet">
            <summary>Establecer el shim de LogImpl.get_IsDebugEnabled()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.IsErrorEnabledGet">
            <summary>Establecer el shim de LogImpl.get_IsErrorEnabled()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.IsFatalEnabledGet">
            <summary>Establecer el shim de LogImpl.get_IsFatalEnabled()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.IsInfoEnabledGet">
            <summary>Establecer el shim de LogImpl.get_IsInfoEnabled()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.IsWarnEnabledGet">
            <summary>Establecer el shim de LogImpl.get_IsWarnEnabled()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.LoggerRepositoryConfigurationChangedObjectEventArgs">
            <summary>Establecer el shim de LogImpl.LoggerRepositoryConfigurationChanged(Object sender, EventArgs e)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.ReloadLevelsILoggerRepository">
            <summary>Establecer el shim de LogImpl.ReloadLevels(ILoggerRepository repository)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.StaticConstructor">
            <summary>Establecer el shim de LogImpl.LogImpl()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.WarnFormatIFormatProviderStringObjectArray">
            <summary>Establecer el shim de LogImpl.WarnFormat(IFormatProvider provider, String format, Object[] args)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.WarnFormatStringObject">
            <summary>Establecer el shim de LogImpl.WarnFormat(String format, Object arg0)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.WarnFormatStringObjectArray">
            <summary>Establecer el shim de LogImpl.WarnFormat(String format, Object[] args)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.WarnFormatStringObjectObject">
            <summary>Establecer el shim de LogImpl.WarnFormat(String format, Object arg0, Object arg1)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.WarnFormatStringObjectObjectObject">
            <summary>Establecer el shim de LogImpl.WarnFormat(String format, Object arg0, Object arg1, Object arg2)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.WarnObject">
            <summary>Establecer el shim de LogImpl.Warn(Object message)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLogImpl.WarnObjectException">
            <summary>Establecer el shim de LogImpl.Warn(Object message, Exception exception)</summary>
        </member>
        <member name="T:log4net.Core.Fakes.ShimLoggerManager">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Core.LoggerManager</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLoggerManager.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLoggerManager.#ctor(log4net.Core.LoggerManager)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Core.Fakes.ShimLoggerManager.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLoggerManager.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLoggerManager.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggerManager.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggerManager.Constructor">
            <summary>Establecer el shim de LoggerManager.LoggerManager()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggerManager.CreateDomainAssemblyType">
            <summary>Establecer el shim de LoggerManager.CreateDomain(Assembly repositoryAssembly, Type repositoryType)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggerManager.CreateDomainString">
            <summary>Establecer el shim de LoggerManager.CreateDomain(String repository)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggerManager.CreateDomainStringType">
            <summary>Establecer el shim de LoggerManager.CreateDomain(String repository, Type repositoryType)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggerManager.CreateRepositoryAssemblyType">
            <summary>Establecer el shim de LoggerManager.CreateRepository(Assembly repositoryAssembly, Type repositoryType)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggerManager.CreateRepositoryString">
            <summary>Establecer el shim de LoggerManager.CreateRepository(String repository)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggerManager.CreateRepositoryStringType">
            <summary>Establecer el shim de LoggerManager.CreateRepository(String repository, Type repositoryType)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggerManager.ExistsAssemblyString">
            <summary>Establecer el shim de LoggerManager.Exists(Assembly repositoryAssembly, String name)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggerManager.ExistsStringString">
            <summary>Establecer el shim de LoggerManager.Exists(String repository, String name)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggerManager.GetAllRepositories">
            <summary>Establecer el shim de LoggerManager.GetAllRepositories()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggerManager.GetCurrentLoggersAssembly">
            <summary>Establecer el shim de LoggerManager.GetCurrentLoggers(Assembly repositoryAssembly)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggerManager.GetCurrentLoggersString">
            <summary>Establecer el shim de LoggerManager.GetCurrentLoggers(String repository)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggerManager.GetLoggerAssemblyString">
            <summary>Establecer el shim de LoggerManager.GetLogger(Assembly repositoryAssembly, String name)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggerManager.GetLoggerAssemblyType">
            <summary>Establecer el shim de LoggerManager.GetLogger(Assembly repositoryAssembly, Type type)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggerManager.GetLoggerRepositoryAssembly">
            <summary>Establecer el shim de LoggerManager.GetLoggerRepository(Assembly repositoryAssembly)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggerManager.GetLoggerRepositoryString">
            <summary>Establecer el shim de LoggerManager.GetLoggerRepository(String repository)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggerManager.GetLoggerStringString">
            <summary>Establecer el shim de LoggerManager.GetLogger(String repository, String name)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggerManager.GetLoggerStringType">
            <summary>Establecer el shim de LoggerManager.GetLogger(String repository, Type type)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggerManager.GetRepositoryAssembly">
            <summary>Establecer el shim de LoggerManager.GetRepository(Assembly repositoryAssembly)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggerManager.GetRepositoryString">
            <summary>Establecer el shim de LoggerManager.GetRepository(String repository)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggerManager.GetVersionInfo">
            <summary>Establecer el shim de LoggerManager.GetVersionInfo()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggerManager.OnDomainUnloadObjectEventArgs">
            <summary>Establecer el shim de LoggerManager.OnDomainUnload(Object sender, EventArgs e)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggerManager.OnProcessExitObjectEventArgs">
            <summary>Establecer el shim de LoggerManager.OnProcessExit(Object sender, EventArgs e)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggerManager.RegisterAppDomainEvents">
            <summary>Establecer el shim de LoggerManager.RegisterAppDomainEvents()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggerManager.RepositorySelectorGet">
            <summary>Establecer el shim de LoggerManager.get_RepositorySelector()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggerManager.RepositorySelectorSetIRepositorySelector">
            <summary>Establecer el shim de LoggerManager.set_RepositorySelector(IRepositorySelector value)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggerManager.ResetConfigurationAssembly">
            <summary>Establecer el shim de LoggerManager.ResetConfiguration(Assembly repositoryAssembly)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggerManager.ResetConfigurationString">
            <summary>Establecer el shim de LoggerManager.ResetConfiguration(String repository)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggerManager.Shutdown">
            <summary>Establecer el shim de LoggerManager.Shutdown()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggerManager.ShutdownRepositoryAssembly">
            <summary>Establecer el shim de LoggerManager.ShutdownRepository(Assembly repositoryAssembly)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggerManager.ShutdownRepositoryString">
            <summary>Establecer el shim de LoggerManager.ShutdownRepository(String repository)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggerManager.StaticConstructor">
            <summary>Establecer el shim de LoggerManager.LoggerManager()</summary>
        </member>
        <member name="T:log4net.Core.Fakes.ShimLoggerRepositoryCreationEventArgs">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Core.LoggerRepositoryCreationEventArgs</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLoggerRepositoryCreationEventArgs.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLoggerRepositoryCreationEventArgs.#ctor(log4net.Core.LoggerRepositoryCreationEventArgs)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Core.Fakes.ShimLoggerRepositoryCreationEventArgs.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggerRepositoryCreationEventArgs.AllInstances.LoggerRepositoryGet">
            <summary>Establecer el shim de LoggerRepositoryCreationEventArgs.get_LoggerRepository()</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLoggerRepositoryCreationEventArgs.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLoggerRepositoryCreationEventArgs.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggerRepositoryCreationEventArgs.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggerRepositoryCreationEventArgs.ConstructorILoggerRepository">
            <summary>Establecer el shim de LoggerRepositoryCreationEventArgs.LoggerRepositoryCreationEventArgs(ILoggerRepository repository)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggerRepositoryCreationEventArgs.LoggerRepositoryGet">
            <summary>Establecer el shim de LoggerRepositoryCreationEventArgs.get_LoggerRepository()</summary>
        </member>
        <member name="T:log4net.Core.Fakes.ShimLoggerWrapperImpl">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Core.LoggerWrapperImpl</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLoggerWrapperImpl.#ctor(log4net.Core.LoggerWrapperImpl)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Core.Fakes.ShimLoggerWrapperImpl.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggerWrapperImpl.AllInstances.LoggerGet">
            <summary>Establecer el shim de LoggerWrapperImpl.get_Logger()</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLoggerWrapperImpl.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLoggerWrapperImpl.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggerWrapperImpl.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLoggerWrapperImpl.Bind(log4net.Core.ILoggerWrapper)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggerWrapperImpl.ConstructorILogger">
            <summary>Establecer el shim de LoggerWrapperImpl.LoggerWrapperImpl(ILogger logger)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggerWrapperImpl.LoggerGet">
            <summary>Establecer el shim de LoggerWrapperImpl.get_Logger()</summary>
        </member>
        <member name="T:log4net.Core.Fakes.ShimLoggingEvent">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Core.LoggingEvent</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLoggingEvent.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLoggingEvent.#ctor(log4net.Core.LoggingEvent)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Core.Fakes.ShimLoggingEvent.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.AllInstances.CacheProperties">
            <summary>Establecer el shim de LoggingEvent.CacheProperties()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.AllInstances.CreateCompositeProperties">
            <summary>Establecer el shim de LoggingEvent.CreateCompositeProperties()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.AllInstances.DomainGet">
            <summary>Establecer el shim de LoggingEvent.get_Domain()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.AllInstances.EnsureRepositoryILoggerRepository">
            <summary>Establecer el shim de LoggingEvent.EnsureRepository(ILoggerRepository repository)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.AllInstances.ExceptionObjectGet">
            <summary>Establecer el shim de LoggingEvent.get_ExceptionObject()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.AllInstances.FixGet">
            <summary>Establecer el shim de LoggingEvent.get_Fix()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.AllInstances.FixSetFixFlags">
            <summary>Establecer el shim de LoggingEvent.set_Fix(FixFlags value)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.AllInstances.FixVolatileData">
            <summary>Establecer el shim de LoggingEvent.FixVolatileData()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.AllInstances.FixVolatileDataBoolean">
            <summary>Establecer el shim de LoggingEvent.FixVolatileData(Boolean fastButLoose)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.AllInstances.FixVolatileDataFixFlags">
            <summary>Establecer el shim de LoggingEvent.FixVolatileData(FixFlags flags)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.AllInstances.GetExceptionStrRep">
            <summary>Establecer el shim de LoggingEvent.GetExceptionStrRep()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.AllInstances.GetExceptionString">
            <summary>Establecer el shim de LoggingEvent.GetExceptionString()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.AllInstances.GetLoggingEventData">
            <summary>Establecer el shim de LoggingEvent.GetLoggingEventData()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.AllInstances.GetLoggingEventDataFixFlags">
            <summary>Establecer el shim de LoggingEvent.GetLoggingEventData(FixFlags fixFlags)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.AllInstances.GetObjectDataSerializationInfoStreamingContext">
            <summary>Establecer el shim de LoggingEvent.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.AllInstances.GetProperties">
            <summary>Establecer el shim de LoggingEvent.GetProperties()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.AllInstances.IdentityGet">
            <summary>Establecer el shim de LoggingEvent.get_Identity()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.AllInstances.LevelGet">
            <summary>Establecer el shim de LoggingEvent.get_Level()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.AllInstances.LocationInformationGet">
            <summary>Establecer el shim de LoggingEvent.get_LocationInformation()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.AllInstances.LoggerNameGet">
            <summary>Establecer el shim de LoggingEvent.get_LoggerName()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.AllInstances.LookupPropertyString">
            <summary>Establecer el shim de LoggingEvent.LookupProperty(String key)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.AllInstances.MessageObjectGet">
            <summary>Establecer el shim de LoggingEvent.get_MessageObject()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.AllInstances.PropertiesGet">
            <summary>Establecer el shim de LoggingEvent.get_Properties()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.AllInstances.RenderedMessageGet">
            <summary>Establecer el shim de LoggingEvent.get_RenderedMessage()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.AllInstances.RepositoryGet">
            <summary>Establecer el shim de LoggingEvent.get_Repository()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.AllInstances.ThreadNameGet">
            <summary>Establecer el shim de LoggingEvent.get_ThreadName()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.AllInstances.TimeStampGet">
            <summary>Establecer el shim de LoggingEvent.get_TimeStamp()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.AllInstances.TimeStampUtcGet">
            <summary>Establecer el shim de LoggingEvent.get_TimeStampUtc()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.AllInstances.UserNameGet">
            <summary>Establecer el shim de LoggingEvent.get_UserName()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.AllInstances.WriteRenderedMessageTextWriter">
            <summary>Establecer el shim de LoggingEvent.WriteRenderedMessage(TextWriter writer)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLoggingEvent.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLoggingEvent.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLoggingEvent.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.CacheProperties">
            <summary>Establecer el shim de LoggingEvent.CacheProperties()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.ConstructorLoggingEventData">
            <summary>Establecer el shim de LoggingEvent.LoggingEvent(LoggingEventData data)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.ConstructorSerializationInfoStreamingContext">
            <summary>Establecer el shim de LoggingEvent.LoggingEvent(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.ConstructorTypeILoggerRepositoryLoggingEventData">
            <summary>Establecer el shim de LoggingEvent.LoggingEvent(Type callerStackBoundaryDeclaringType, ILoggerRepository repository, LoggingEventData data)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.ConstructorTypeILoggerRepositoryLoggingEventDataFixFlags">
            <summary>Establecer el shim de LoggingEvent.LoggingEvent(Type callerStackBoundaryDeclaringType, ILoggerRepository repository, LoggingEventData data, FixFlags fixedData)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.ConstructorTypeILoggerRepositoryStringLevelObjectException">
            <summary>Establecer el shim de LoggingEvent.LoggingEvent(Type callerStackBoundaryDeclaringType, ILoggerRepository repository, String loggerName, Level level, Object message, Exception exception)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.CreateCompositeProperties">
            <summary>Establecer el shim de LoggingEvent.CreateCompositeProperties()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.DomainGet">
            <summary>Establecer el shim de LoggingEvent.get_Domain()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.EnsureRepositoryILoggerRepository">
            <summary>Establecer el shim de LoggingEvent.EnsureRepository(ILoggerRepository repository)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.ExceptionObjectGet">
            <summary>Establecer el shim de LoggingEvent.get_ExceptionObject()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.FixGet">
            <summary>Establecer el shim de LoggingEvent.get_Fix()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.FixSetFixFlags">
            <summary>Establecer el shim de LoggingEvent.set_Fix(FixFlags value)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.FixVolatileData">
            <summary>Establecer el shim de LoggingEvent.FixVolatileData()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.FixVolatileDataBoolean">
            <summary>Establecer el shim de LoggingEvent.FixVolatileData(Boolean fastButLoose)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.FixVolatileDataFixFlags">
            <summary>Establecer el shim de LoggingEvent.FixVolatileData(FixFlags flags)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.GetExceptionStrRep">
            <summary>Establecer el shim de LoggingEvent.GetExceptionStrRep()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.GetExceptionString">
            <summary>Establecer el shim de LoggingEvent.GetExceptionString()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.GetLoggingEventData">
            <summary>Establecer el shim de LoggingEvent.GetLoggingEventData()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.GetLoggingEventDataFixFlags">
            <summary>Establecer el shim de LoggingEvent.GetLoggingEventData(FixFlags fixFlags)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.GetObjectDataSerializationInfoStreamingContext">
            <summary>Establecer el shim de LoggingEvent.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.GetProperties">
            <summary>Establecer el shim de LoggingEvent.GetProperties()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.IdentityGet">
            <summary>Establecer el shim de LoggingEvent.get_Identity()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.LevelGet">
            <summary>Establecer el shim de LoggingEvent.get_Level()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.LocationInformationGet">
            <summary>Establecer el shim de LoggingEvent.get_LocationInformation()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.LoggerNameGet">
            <summary>Establecer el shim de LoggingEvent.get_LoggerName()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.LookupPropertyString">
            <summary>Establecer el shim de LoggingEvent.LookupProperty(String key)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.MessageObjectGet">
            <summary>Establecer el shim de LoggingEvent.get_MessageObject()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.PropertiesGet">
            <summary>Establecer el shim de LoggingEvent.get_Properties()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.RenderedMessageGet">
            <summary>Establecer el shim de LoggingEvent.get_RenderedMessage()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.RepositoryGet">
            <summary>Establecer el shim de LoggingEvent.get_Repository()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.StartTimeGet">
            <summary>Establecer el shim de LoggingEvent.get_StartTime()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.StartTimeUtcGet">
            <summary>Establecer el shim de LoggingEvent.get_StartTimeUtc()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.StaticConstructor">
            <summary>Establecer el shim de LoggingEvent.LoggingEvent()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.ThreadNameGet">
            <summary>Establecer el shim de LoggingEvent.get_ThreadName()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.TimeStampGet">
            <summary>Establecer el shim de LoggingEvent.get_TimeStamp()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.TimeStampUtcGet">
            <summary>Establecer el shim de LoggingEvent.get_TimeStampUtc()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.UserNameGet">
            <summary>Establecer el shim de LoggingEvent.get_UserName()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEvent.WriteRenderedMessageTextWriter">
            <summary>Establecer el shim de LoggingEvent.WriteRenderedMessage(TextWriter writer)</summary>
        </member>
        <member name="T:log4net.Core.Fakes.ShimLoggingEventData">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Core.LoggingEventData</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLoggingEventData.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="T:log4net.Core.Fakes.ShimLoggingEventData.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLoggingEventData.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimLoggingEventData.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimLoggingEventData.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="T:log4net.Core.Fakes.ShimMethodItem">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Core.MethodItem</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimMethodItem.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimMethodItem.#ctor(log4net.Core.MethodItem)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Core.Fakes.ShimMethodItem.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimMethodItem.AllInstances.NameGet">
            <summary>Establecer el shim de MethodItem.get_Name()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimMethodItem.AllInstances.ParametersGet">
            <summary>Establecer el shim de MethodItem.get_Parameters()</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimMethodItem.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimMethodItem.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimMethodItem.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimMethodItem.Constructor">
            <summary>Establecer el shim de MethodItem.MethodItem()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimMethodItem.ConstructorMethodBase">
            <summary>Establecer el shim de MethodItem.MethodItem(MethodBase methodBase)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimMethodItem.ConstructorString">
            <summary>Establecer el shim de MethodItem.MethodItem(String name)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimMethodItem.ConstructorStringStringArray">
            <summary>Establecer el shim de MethodItem.MethodItem(String name, String[] parameters)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimMethodItem.GetMethodParameterNamesMethodBase">
            <summary>Establecer el shim de MethodItem.GetMethodParameterNames(MethodBase methodBase)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimMethodItem.NameGet">
            <summary>Establecer el shim de MethodItem.get_Name()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimMethodItem.ParametersGet">
            <summary>Establecer el shim de MethodItem.get_Parameters()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimMethodItem.StaticConstructor">
            <summary>Establecer el shim de MethodItem.MethodItem()</summary>
        </member>
        <member name="T:log4net.Core.Fakes.ShimSecurityContext">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Core.SecurityContext</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimSecurityContext.#ctor(log4net.Core.SecurityContext)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Core.Fakes.ShimSecurityContext.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimSecurityContext.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimSecurityContext.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimSecurityContext.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimSecurityContext.Constructor">
            <summary>Establecer el shim de SecurityContext.SecurityContext()</summary>
        </member>
        <member name="T:log4net.Core.Fakes.ShimSecurityContextProvider">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Core.SecurityContextProvider</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimSecurityContextProvider.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimSecurityContextProvider.#ctor(log4net.Core.SecurityContextProvider)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Core.Fakes.ShimSecurityContextProvider.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimSecurityContextProvider.AllInstances.CreateSecurityContextObject">
            <summary>Establecer el shim de SecurityContextProvider.CreateSecurityContext(Object consumer)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimSecurityContextProvider.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimSecurityContextProvider.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimSecurityContextProvider.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimSecurityContextProvider.Constructor">
            <summary>Establecer el shim de SecurityContextProvider.SecurityContextProvider()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimSecurityContextProvider.CreateSecurityContextObject">
            <summary>Establecer el shim de SecurityContextProvider.CreateSecurityContext(Object consumer)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimSecurityContextProvider.DefaultProviderGet">
            <summary>Establecer el shim de SecurityContextProvider.get_DefaultProvider()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimSecurityContextProvider.DefaultProviderSetSecurityContextProvider">
            <summary>Establecer el shim de SecurityContextProvider.set_DefaultProvider(SecurityContextProvider value)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimSecurityContextProvider.StaticConstructor">
            <summary>Establecer el shim de SecurityContextProvider.SecurityContextProvider()</summary>
        </member>
        <member name="T:log4net.Core.Fakes.ShimStackFrameItem">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Core.StackFrameItem</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimStackFrameItem.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimStackFrameItem.#ctor(log4net.Core.StackFrameItem)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Core.Fakes.ShimStackFrameItem.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimStackFrameItem.AllInstances.ClassNameGet">
            <summary>Establecer el shim de StackFrameItem.get_ClassName()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimStackFrameItem.AllInstances.FileNameGet">
            <summary>Establecer el shim de StackFrameItem.get_FileName()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimStackFrameItem.AllInstances.FullInfoGet">
            <summary>Establecer el shim de StackFrameItem.get_FullInfo()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimStackFrameItem.AllInstances.LineNumberGet">
            <summary>Establecer el shim de StackFrameItem.get_LineNumber()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimStackFrameItem.AllInstances.MethodGet">
            <summary>Establecer el shim de StackFrameItem.get_Method()</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimStackFrameItem.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimStackFrameItem.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimStackFrameItem.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimStackFrameItem.ClassNameGet">
            <summary>Establecer el shim de StackFrameItem.get_ClassName()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimStackFrameItem.ConstructorStackFrame">
            <summary>Establecer el shim de StackFrameItem.StackFrameItem(StackFrame frame)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimStackFrameItem.FileNameGet">
            <summary>Establecer el shim de StackFrameItem.get_FileName()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimStackFrameItem.FullInfoGet">
            <summary>Establecer el shim de StackFrameItem.get_FullInfo()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimStackFrameItem.LineNumberGet">
            <summary>Establecer el shim de StackFrameItem.get_LineNumber()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimStackFrameItem.MethodGet">
            <summary>Establecer el shim de StackFrameItem.get_Method()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimStackFrameItem.StaticConstructor">
            <summary>Establecer el shim de StackFrameItem.StackFrameItem()</summary>
        </member>
        <member name="T:log4net.Core.Fakes.ShimTimeEvaluator">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Core.TimeEvaluator</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimTimeEvaluator.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimTimeEvaluator.#ctor(log4net.Core.TimeEvaluator)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Core.Fakes.ShimTimeEvaluator.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimTimeEvaluator.AllInstances.IntervalGet">
            <summary>Establecer el shim de TimeEvaluator.get_Interval()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimTimeEvaluator.AllInstances.IntervalSetInt32">
            <summary>Establecer el shim de TimeEvaluator.set_Interval(Int32 value)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimTimeEvaluator.AllInstances.IsTriggeringEventLoggingEvent">
            <summary>Establecer el shim de TimeEvaluator.IsTriggeringEvent(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimTimeEvaluator.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimTimeEvaluator.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimTimeEvaluator.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimTimeEvaluator.Bind(log4net.Core.ITriggeringEventEvaluator)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimTimeEvaluator.Constructor">
            <summary>Establecer el shim de TimeEvaluator.TimeEvaluator()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimTimeEvaluator.ConstructorInt32">
            <summary>Establecer el shim de TimeEvaluator.TimeEvaluator(Int32 interval)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimTimeEvaluator.IntervalGet">
            <summary>Establecer el shim de TimeEvaluator.get_Interval()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimTimeEvaluator.IntervalSetInt32">
            <summary>Establecer el shim de TimeEvaluator.set_Interval(Int32 value)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimTimeEvaluator.IsTriggeringEventLoggingEvent">
            <summary>Establecer el shim de TimeEvaluator.IsTriggeringEvent(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="T:log4net.Core.Fakes.ShimWrapperMap">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Core.WrapperMap</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimWrapperMap.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimWrapperMap.#ctor(log4net.Core.WrapperMap)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Core.Fakes.ShimWrapperMap.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimWrapperMap.AllInstances.CreateNewWrapperObjectILogger">
            <summary>Establecer el shim de WrapperMap.CreateNewWrapperObject(ILogger logger)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimWrapperMap.AllInstances.GetWrapperILogger">
            <summary>Establecer el shim de WrapperMap.GetWrapper(ILogger logger)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimWrapperMap.AllInstances.ILoggerRepository_ShutdownObjectEventArgs">
            <summary>Establecer el shim de WrapperMap.ILoggerRepository_Shutdown(Object sender, EventArgs e)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimWrapperMap.AllInstances.RepositoriesGet">
            <summary>Establecer el shim de WrapperMap.get_Repositories()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimWrapperMap.AllInstances.RepositoryShutdownILoggerRepository">
            <summary>Establecer el shim de WrapperMap.RepositoryShutdown(ILoggerRepository repository)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimWrapperMap.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Core.Fakes.ShimWrapperMap.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimWrapperMap.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimWrapperMap.ConstructorWrapperCreationHandler">
            <summary>Establecer el shim de WrapperMap.WrapperMap(WrapperCreationHandler createWrapperHandler)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimWrapperMap.CreateNewWrapperObjectILogger">
            <summary>Establecer el shim de WrapperMap.CreateNewWrapperObject(ILogger logger)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimWrapperMap.GetWrapperILogger">
            <summary>Establecer el shim de WrapperMap.GetWrapper(ILogger logger)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimWrapperMap.ILoggerRepository_ShutdownObjectEventArgs">
            <summary>Establecer el shim de WrapperMap.ILoggerRepository_Shutdown(Object sender, EventArgs e)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimWrapperMap.RepositoriesGet">
            <summary>Establecer el shim de WrapperMap.get_Repositories()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.ShimWrapperMap.RepositoryShutdownILoggerRepository">
            <summary>Establecer el shim de WrapperMap.RepositoryShutdown(ILoggerRepository repository)</summary>
        </member>
        <member name="T:log4net.Core.Fakes.StubCompactRepositorySelector">
            <summary>Tipo stub de log4net.Core.CompactRepositorySelector</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubCompactRepositorySelector.#ctor(System.Type)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubCompactRepositorySelector.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubCompactRepositorySelector.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubCompactRepositorySelector</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubCompactRepositorySelector.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubCompactRepositorySelector.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubCompactRepositorySelector.OnLoggerRepositoryCreatedEvent(log4net.Repository.ILoggerRepository)">
            <summary>Establecer el stub de CompactRepositorySelector.OnLoggerRepositoryCreatedEvent(ILoggerRepository repository)</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubCompactRepositorySelector.OnLoggerRepositoryCreatedEventILoggerRepository">
            <summary>Establecer el stub de CompactRepositorySelector.OnLoggerRepositoryCreatedEvent(ILoggerRepository repository)</summary>
        </member>
        <member name="T:log4net.Core.Fakes.StubDefaultRepositorySelector">
            <summary>Tipo stub de log4net.Core.DefaultRepositorySelector</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubDefaultRepositorySelector.#ctor(System.Type)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubDefaultRepositorySelector.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubDefaultRepositorySelector.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubDefaultRepositorySelector</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubDefaultRepositorySelector.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubDefaultRepositorySelector.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubDefaultRepositorySelector.OnLoggerRepositoryCreatedEvent(log4net.Repository.ILoggerRepository)">
            <summary>Establecer el stub de DefaultRepositorySelector.OnLoggerRepositoryCreatedEvent(ILoggerRepository repository)</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubDefaultRepositorySelector.OnLoggerRepositoryCreatedEventILoggerRepository">
            <summary>Establecer el stub de DefaultRepositorySelector.OnLoggerRepositoryCreatedEvent(ILoggerRepository repository)</summary>
        </member>
        <member name="T:log4net.Core.Fakes.StubExceptionEvaluator">
            <summary>Tipo stub de log4net.Core.ExceptionEvaluator</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubExceptionEvaluator.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubExceptionEvaluator.#ctor(System.Type,System.Boolean)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubExceptionEvaluator.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubExceptionEvaluator.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubExceptionEvaluator</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubExceptionEvaluator.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubExceptionEvaluator.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:log4net.Core.Fakes.StubIAppenderAttachable">
            <summary>Tipo stub de log4net.Core.IAppenderAttachable</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubIAppenderAttachable.#ctor">
            <summary>Inicializa una nueva instancia de type StubIAppenderAttachable</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubIAppenderAttachable.AddAppenderIAppender">
            <summary>Establecer el stub de IAppenderAttachable.AddAppender(IAppender appender)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubIAppenderAttachable.log4net#Core#IAppenderAttachable#Appenders">
            <summary>Establecer el stub de IAppenderAttachable.get_Appenders()</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubIAppenderAttachable.AppendersGet">
            <summary>Establecer el stub de IAppenderAttachable.get_Appenders()</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubIAppenderAttachable.GetAppenderString">
            <summary>Establecer el stub de IAppenderAttachable.GetAppender(String name)</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubIAppenderAttachable.RemoveAllAppenders">
            <summary>Establecer el stub de IAppenderAttachable.RemoveAllAppenders()</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubIAppenderAttachable.RemoveAppenderIAppender">
            <summary>Establecer el stub de IAppenderAttachable.RemoveAppender(IAppender appender)</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubIAppenderAttachable.RemoveAppenderString">
            <summary>Establecer el stub de IAppenderAttachable.RemoveAppender(String name)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubIAppenderAttachable.log4net#Core#IAppenderAttachable#AddAppender(log4net.Appender.IAppender)">
            <summary>Establecer el stub de IAppenderAttachable.AddAppender(IAppender appender)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubIAppenderAttachable.log4net#Core#IAppenderAttachable#GetAppender(System.String)">
            <summary>Establecer el stub de IAppenderAttachable.GetAppender(String name)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubIAppenderAttachable.log4net#Core#IAppenderAttachable#RemoveAllAppenders">
            <summary>Establecer el stub de IAppenderAttachable.RemoveAllAppenders()</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubIAppenderAttachable.log4net#Core#IAppenderAttachable#RemoveAppender(log4net.Appender.IAppender)">
            <summary>Establecer el stub de IAppenderAttachable.RemoveAppender(IAppender appender)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubIAppenderAttachable.log4net#Core#IAppenderAttachable#RemoveAppender(System.String)">
            <summary>Establecer el stub de IAppenderAttachable.RemoveAppender(String name)</summary>
        </member>
        <member name="T:log4net.Core.Fakes.StubIErrorHandler">
            <summary>Tipo stub de log4net.Core.IErrorHandler</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubIErrorHandler.#ctor">
            <summary>Inicializa una nueva instancia de type StubIErrorHandler</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubIErrorHandler.ErrorString">
            <summary>Establecer el stub de IErrorHandler.Error(String message)</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubIErrorHandler.ErrorStringException">
            <summary>Establecer el stub de IErrorHandler.Error(String message, Exception e)</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubIErrorHandler.ErrorStringExceptionErrorCode">
            <summary>Establecer el stub de IErrorHandler.Error(String message, Exception e, ErrorCode errorCode)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubIErrorHandler.log4net#Core#IErrorHandler#Error(System.String)">
            <summary>Establecer el stub de IErrorHandler.Error(String message)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubIErrorHandler.log4net#Core#IErrorHandler#Error(System.String,System.Exception)">
            <summary>Establecer el stub de IErrorHandler.Error(String message, Exception e)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubIErrorHandler.log4net#Core#IErrorHandler#Error(System.String,System.Exception,log4net.Core.ErrorCode)">
            <summary>Establecer el stub de IErrorHandler.Error(String message, Exception e, ErrorCode errorCode)</summary>
        </member>
        <member name="T:log4net.Core.Fakes.StubIFixingRequired">
            <summary>Tipo stub de log4net.Core.IFixingRequired</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubIFixingRequired.#ctor">
            <summary>Inicializa una nueva instancia de type StubIFixingRequired</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubIFixingRequired.GetFixedObject">
            <summary>Establecer el stub de IFixingRequired.GetFixedObject()</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubIFixingRequired.log4net#Core#IFixingRequired#GetFixedObject">
            <summary>Establecer el stub de IFixingRequired.GetFixedObject()</summary>
        </member>
        <member name="T:log4net.Core.Fakes.StubILogger">
            <summary>Tipo stub de log4net.Core.ILogger</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubILogger.#ctor">
            <summary>Inicializa una nueva instancia de type StubILogger</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubILogger.IsEnabledForLevel">
            <summary>Establecer el stub de ILogger.IsEnabledFor(Level level)</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubILogger.LogLoggingEvent">
            <summary>Establecer el stub de ILogger.Log(LoggingEvent logEvent)</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubILogger.LogTypeLevelObjectException">
            <summary>Establecer el stub de ILogger.Log(Type callerStackBoundaryDeclaringType, Level level, Object message, Exception exception)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubILogger.log4net#Core#ILogger#Name">
            <summary>Establecer el stub de ILogger.get_Name()</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubILogger.NameGet">
            <summary>Establecer el stub de ILogger.get_Name()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubILogger.log4net#Core#ILogger#Repository">
            <summary>Establecer el stub de ILogger.get_Repository()</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubILogger.RepositoryGet">
            <summary>Establecer el stub de ILogger.get_Repository()</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubILogger.log4net#Core#ILogger#IsEnabledFor(log4net.Core.Level)">
            <summary>Establecer el stub de ILogger.IsEnabledFor(Level level)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubILogger.log4net#Core#ILogger#Log(log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de ILogger.Log(LoggingEvent logEvent)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubILogger.log4net#Core#ILogger#Log(System.Type,log4net.Core.Level,System.Object,System.Exception)">
            <summary>Establecer el stub de ILogger.Log(Type callerStackBoundaryDeclaringType, Level level, Object message, Exception exception)</summary>
        </member>
        <member name="T:log4net.Core.Fakes.StubILoggerWrapper">
            <summary>Tipo stub de log4net.Core.ILoggerWrapper</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubILoggerWrapper.#ctor">
            <summary>Inicializa una nueva instancia de type StubILoggerWrapper</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubILoggerWrapper.log4net#Core#ILoggerWrapper#Logger">
            <summary>Establecer el stub de ILoggerWrapper.get_Logger()</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubILoggerWrapper.LoggerGet">
            <summary>Establecer el stub de ILoggerWrapper.get_Logger()</summary>
        </member>
        <member name="T:log4net.Core.Fakes.StubIOptionHandler">
            <summary>Tipo stub de log4net.Core.IOptionHandler</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubIOptionHandler.#ctor">
            <summary>Inicializa una nueva instancia de type StubIOptionHandler</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubIOptionHandler.ActivateOptions">
            <summary>Establecer el stub de IOptionHandler.ActivateOptions()</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubIOptionHandler.log4net#Core#IOptionHandler#ActivateOptions">
            <summary>Establecer el stub de IOptionHandler.ActivateOptions()</summary>
        </member>
        <member name="T:log4net.Core.Fakes.StubIRepositorySelector">
            <summary>Tipo stub de log4net.Core.IRepositorySelector</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubIRepositorySelector.#ctor">
            <summary>Inicializa una nueva instancia de type StubIRepositorySelector</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubIRepositorySelector.CreateRepositoryAssemblyType">
            <summary>Establecer el stub de IRepositorySelector.CreateRepository(Assembly assembly, Type repositoryType)</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubIRepositorySelector.CreateRepositoryStringType">
            <summary>Establecer el stub de IRepositorySelector.CreateRepository(String repositoryName, Type repositoryType)</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubIRepositorySelector.ExistsRepositoryString">
            <summary>Establecer el stub de IRepositorySelector.ExistsRepository(String repositoryName)</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubIRepositorySelector.GetAllRepositories">
            <summary>Establecer el stub de IRepositorySelector.GetAllRepositories()</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubIRepositorySelector.GetRepositoryAssembly">
            <summary>Establecer el stub de IRepositorySelector.GetRepository(Assembly assembly)</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubIRepositorySelector.GetRepositoryString">
            <summary>Establecer el stub de IRepositorySelector.GetRepository(String repositoryName)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubIRepositorySelector.log4net#Core#IRepositorySelector#CreateRepository(System.String,System.Type)">
            <summary>Establecer el stub de IRepositorySelector.CreateRepository(String repositoryName, Type repositoryType)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubIRepositorySelector.log4net#Core#IRepositorySelector#CreateRepository(System.Reflection.Assembly,System.Type)">
            <summary>Establecer el stub de IRepositorySelector.CreateRepository(Assembly assembly, Type repositoryType)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubIRepositorySelector.log4net#Core#IRepositorySelector#ExistsRepository(System.String)">
            <summary>Establecer el stub de IRepositorySelector.ExistsRepository(String repositoryName)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubIRepositorySelector.log4net#Core#IRepositorySelector#GetAllRepositories">
            <summary>Establecer el stub de IRepositorySelector.GetAllRepositories()</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubIRepositorySelector.log4net#Core#IRepositorySelector#GetRepository(System.String)">
            <summary>Establecer el stub de IRepositorySelector.GetRepository(String repositoryName)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubIRepositorySelector.log4net#Core#IRepositorySelector#GetRepository(System.Reflection.Assembly)">
            <summary>Establecer el stub de IRepositorySelector.GetRepository(Assembly assembly)</summary>
        </member>
        <member name="T:log4net.Core.Fakes.StubITriggeringEventEvaluator">
            <summary>Tipo stub de log4net.Core.ITriggeringEventEvaluator</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubITriggeringEventEvaluator.#ctor">
            <summary>Inicializa una nueva instancia de type StubITriggeringEventEvaluator</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubITriggeringEventEvaluator.IsTriggeringEventLoggingEvent">
            <summary>Establecer el stub de ITriggeringEventEvaluator.IsTriggeringEvent(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubITriggeringEventEvaluator.log4net#Core#ITriggeringEventEvaluator#IsTriggeringEvent(log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de ITriggeringEventEvaluator.IsTriggeringEvent(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="T:log4net.Core.Fakes.StubLevelCollection">
            <summary>Tipo stub de log4net.Core.LevelCollection</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLevelCollection.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLevelCollection.#ctor(System.Int32)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLevelCollection.#ctor(System.Collections.ICollection)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLevelCollection.#ctor(log4net.Core.Level[])">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLevelCollection.#ctor(log4net.Core.LevelCollection.Tag)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLevelCollection.#ctor(log4net.Core.LevelCollection)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLevelCollection.Add(log4net.Core.Level)">
            <summary>Establecer el stub de LevelCollection.Add(Level item)</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLevelCollection.AddLevel">
            <summary>Establecer el stub de LevelCollection.Add(Level item)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLevelCollection.AddRange(log4net.Core.Level[])">
            <summary>Establecer el stub de LevelCollection.AddRange(Level[] x)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLevelCollection.AddRange(log4net.Core.LevelCollection)">
            <summary>Establecer el stub de LevelCollection.AddRange(LevelCollection x)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLevelCollection.AddRange(System.Collections.ICollection)">
            <summary>Establecer el stub de LevelCollection.AddRange(ICollection col)</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLevelCollection.AddRangeICollection">
            <summary>Establecer el stub de LevelCollection.AddRange(ICollection col)</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLevelCollection.AddRangeLevelArray">
            <summary>Establecer el stub de LevelCollection.AddRange(Level[] x)</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLevelCollection.AddRangeLevelCollection">
            <summary>Establecer el stub de LevelCollection.AddRange(LevelCollection x)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLevelCollection.AttachBackingFieldToCapacity">
            <summary>Asocia delegados para emular StubLevelCollection.Capacity como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubLevelCollection.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubLevelCollection.Capacity">
            <summary>Establecer el stub de LevelCollection.get_Capacity()</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLevelCollection.CapacityGet">
            <summary>Establecer el stub de LevelCollection.get_Capacity()</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLevelCollection.CapacitySetInt32">
            <summary>Establecer el stub de LevelCollection.set_Capacity(Int32 value)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLevelCollection.Clear">
            <summary>Establecer el stub de LevelCollection.Clear()</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLevelCollection.Clear01">
            <summary>Establecer el stub de LevelCollection.Clear()</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLevelCollection.Clone">
            <summary>Establecer el stub de LevelCollection.Clone()</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLevelCollection.Clone01">
            <summary>Establecer el stub de LevelCollection.Clone()</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLevelCollection.Contains(log4net.Core.Level)">
            <summary>Establecer el stub de LevelCollection.Contains(Level item)</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLevelCollection.ContainsLevel">
            <summary>Establecer el stub de LevelCollection.Contains(Level item)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLevelCollection.CopyTo(log4net.Core.Level[])">
            <summary>Establecer el stub de LevelCollection.CopyTo(Level[] array)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLevelCollection.CopyTo(log4net.Core.Level[],System.Int32)">
            <summary>Establecer el stub de LevelCollection.CopyTo(Level[] array, Int32 start)</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLevelCollection.CopyToLevelArray">
            <summary>Establecer el stub de LevelCollection.CopyTo(Level[] array)</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLevelCollection.CopyToLevelArrayInt32">
            <summary>Establecer el stub de LevelCollection.CopyTo(Level[] array, Int32 start)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubLevelCollection.Count">
            <summary>Establecer el stub de LevelCollection.get_Count()</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLevelCollection.CountGet">
            <summary>Establecer el stub de LevelCollection.get_Count()</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLevelCollection.GetEnumerator">
            <summary>Establecer el stub de LevelCollection.GetEnumerator()</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLevelCollection.GetEnumerator01">
            <summary>Establecer el stub de LevelCollection.GetEnumerator()</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLevelCollection.IndexOf(log4net.Core.Level)">
            <summary>Establecer el stub de LevelCollection.IndexOf(Level item)</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLevelCollection.IndexOfLevel">
            <summary>Establecer el stub de LevelCollection.IndexOf(Level item)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLevelCollection.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubLevelCollection</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLevelCollection.Insert(System.Int32,log4net.Core.Level)">
            <summary>Establecer el stub de LevelCollection.Insert(Int32 index, Level item)</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLevelCollection.InsertInt32Level">
            <summary>Establecer el stub de LevelCollection.Insert(Int32 index, Level item)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubLevelCollection.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubLevelCollection.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubLevelCollection.IsFixedSize">
            <summary>Establecer el stub de LevelCollection.get_IsFixedSize()</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLevelCollection.IsFixedSizeGet">
            <summary>Establecer el stub de LevelCollection.get_IsFixedSize()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubLevelCollection.IsReadOnly">
            <summary>Establecer el stub de LevelCollection.get_IsReadOnly()</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLevelCollection.IsReadOnlyGet">
            <summary>Establecer el stub de LevelCollection.get_IsReadOnly()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubLevelCollection.IsSynchronized">
            <summary>Establecer el stub de LevelCollection.get_IsSynchronized()</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLevelCollection.IsSynchronizedGet">
            <summary>Establecer el stub de LevelCollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubLevelCollection.Item(System.Int32)">
            <summary>Establecer el stub de LevelCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLevelCollection.ItemGetInt32">
            <summary>Establecer el stub de LevelCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLevelCollection.ItemSetInt32Level">
            <summary>Establecer el stub de LevelCollection.set_Item(Int32 index, Level value)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLevelCollection.Remove(log4net.Core.Level)">
            <summary>Establecer el stub de LevelCollection.Remove(Level item)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLevelCollection.RemoveAt(System.Int32)">
            <summary>Establecer el stub de LevelCollection.RemoveAt(Int32 index)</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLevelCollection.RemoveAtInt32">
            <summary>Establecer el stub de LevelCollection.RemoveAt(Int32 index)</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLevelCollection.RemoveLevel">
            <summary>Establecer el stub de LevelCollection.Remove(Level item)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubLevelCollection.SyncRoot">
            <summary>Establecer el stub de LevelCollection.get_SyncRoot()</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLevelCollection.SyncRootGet">
            <summary>Establecer el stub de LevelCollection.get_SyncRoot()</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLevelCollection.TrimToSize">
            <summary>Establecer el stub de LevelCollection.TrimToSize()</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLevelCollection.TrimToSize01">
            <summary>Establecer el stub de LevelCollection.TrimToSize()</summary>
        </member>
        <member name="T:log4net.Core.Fakes.StubLevelEvaluator">
            <summary>Tipo stub de log4net.Core.LevelEvaluator</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLevelEvaluator.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLevelEvaluator.#ctor(log4net.Core.Level)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubLevelEvaluator.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLevelEvaluator.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubLevelEvaluator</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubLevelEvaluator.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubLevelEvaluator.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:log4net.Core.Fakes.StubLocationInfo">
            <summary>Tipo stub de log4net.Core.LocationInfo</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLocationInfo.#ctor(System.Type)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLocationInfo.#ctor(System.String,System.String,System.String,System.String)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubLocationInfo.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLocationInfo.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubLocationInfo</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubLocationInfo.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubLocationInfo.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:log4net.Core.Fakes.StubLogException">
            <summary>Tipo stub de log4net.Core.LogException</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogException.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogException.#ctor(System.String)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogException.#ctor(System.String,System.Exception)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogException.AttachBackingFieldToHelpLink">
            <summary>Asocia delegados para emular StubLogException.HelpLink como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogException.AttachBackingFieldToSource">
            <summary>Asocia delegados para emular StubLogException.Source como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubLogException.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubLogException.Data">
            <summary>Establecer el stub de Exception.get_Data()</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogException.DataGet">
            <summary>Establecer el stub de Exception.get_Data()</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogException.GetBaseException">
            <summary>Establecer el stub de Exception.GetBaseException()</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogException.GetBaseException01">
            <summary>Establecer el stub de Exception.GetBaseException()</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Establecer el stub de Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Establecer el stub de Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubLogException.HelpLink">
            <summary>Establecer el stub de Exception.get_HelpLink()</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogException.HelpLinkGet">
            <summary>Establecer el stub de Exception.get_HelpLink()</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogException.HelpLinkSetString">
            <summary>Establecer el stub de Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogException.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubLogException</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubLogException.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubLogException.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubLogException.Message">
            <summary>Establecer el stub de Exception.get_Message()</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogException.MessageGet">
            <summary>Establecer el stub de Exception.get_Message()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubLogException.Source">
            <summary>Establecer el stub de Exception.get_Source()</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogException.SourceGet">
            <summary>Establecer el stub de Exception.get_Source()</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogException.SourceSetString">
            <summary>Establecer el stub de Exception.set_Source(String value)</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubLogException.StackTrace">
            <summary>Establecer el stub de Exception.get_StackTrace()</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogException.StackTraceGet">
            <summary>Establecer el stub de Exception.get_StackTrace()</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogException.ToString">
            <summary>Establecer el stub de Exception.ToString()</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogException.ToString01">
            <summary>Establecer el stub de Exception.ToString()</summary>
        </member>
        <member name="T:log4net.Core.Fakes.StubLogImpl">
            <summary>Tipo stub de log4net.Core.LogImpl</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogImpl.#ctor(log4net.Core.ILogger)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubLogImpl.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogImpl.Debug(System.Object)">
            <summary>Establecer el stub de LogImpl.Debug(Object message)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogImpl.Debug(System.Object,System.Exception)">
            <summary>Establecer el stub de LogImpl.Debug(Object message, Exception exception)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogImpl.DebugFormat(System.String,System.Object[])">
            <summary>Establecer el stub de LogImpl.DebugFormat(String format, Object[] args)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogImpl.DebugFormat(System.String,System.Object)">
            <summary>Establecer el stub de LogImpl.DebugFormat(String format, Object arg0)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogImpl.DebugFormat(System.IFormatProvider,System.String,System.Object[])">
            <summary>Establecer el stub de LogImpl.DebugFormat(IFormatProvider provider, String format, Object[] args)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogImpl.DebugFormat(System.String,System.Object,System.Object)">
            <summary>Establecer el stub de LogImpl.DebugFormat(String format, Object arg0, Object arg1)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogImpl.DebugFormat(System.String,System.Object,System.Object,System.Object)">
            <summary>Establecer el stub de LogImpl.DebugFormat(String format, Object arg0, Object arg1, Object arg2)</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogImpl.DebugFormatIFormatProviderStringObjectArray">
            <summary>Establecer el stub de LogImpl.DebugFormat(IFormatProvider provider, String format, Object[] args)</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogImpl.DebugFormatStringObject">
            <summary>Establecer el stub de LogImpl.DebugFormat(String format, Object arg0)</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogImpl.DebugFormatStringObjectArray">
            <summary>Establecer el stub de LogImpl.DebugFormat(String format, Object[] args)</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogImpl.DebugFormatStringObjectObject">
            <summary>Establecer el stub de LogImpl.DebugFormat(String format, Object arg0, Object arg1)</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogImpl.DebugFormatStringObjectObjectObject">
            <summary>Establecer el stub de LogImpl.DebugFormat(String format, Object arg0, Object arg1, Object arg2)</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogImpl.DebugObject">
            <summary>Establecer el stub de LogImpl.Debug(Object message)</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogImpl.DebugObjectException">
            <summary>Establecer el stub de LogImpl.Debug(Object message, Exception exception)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogImpl.Error(System.Object)">
            <summary>Establecer el stub de LogImpl.Error(Object message)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogImpl.Error(System.Object,System.Exception)">
            <summary>Establecer el stub de LogImpl.Error(Object message, Exception exception)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogImpl.ErrorFormat(System.String,System.Object[])">
            <summary>Establecer el stub de LogImpl.ErrorFormat(String format, Object[] args)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogImpl.ErrorFormat(System.String,System.Object)">
            <summary>Establecer el stub de LogImpl.ErrorFormat(String format, Object arg0)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogImpl.ErrorFormat(System.IFormatProvider,System.String,System.Object[])">
            <summary>Establecer el stub de LogImpl.ErrorFormat(IFormatProvider provider, String format, Object[] args)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogImpl.ErrorFormat(System.String,System.Object,System.Object)">
            <summary>Establecer el stub de LogImpl.ErrorFormat(String format, Object arg0, Object arg1)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogImpl.ErrorFormat(System.String,System.Object,System.Object,System.Object)">
            <summary>Establecer el stub de LogImpl.ErrorFormat(String format, Object arg0, Object arg1, Object arg2)</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogImpl.ErrorFormatIFormatProviderStringObjectArray">
            <summary>Establecer el stub de LogImpl.ErrorFormat(IFormatProvider provider, String format, Object[] args)</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogImpl.ErrorFormatStringObject">
            <summary>Establecer el stub de LogImpl.ErrorFormat(String format, Object arg0)</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogImpl.ErrorFormatStringObjectArray">
            <summary>Establecer el stub de LogImpl.ErrorFormat(String format, Object[] args)</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogImpl.ErrorFormatStringObjectObject">
            <summary>Establecer el stub de LogImpl.ErrorFormat(String format, Object arg0, Object arg1)</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogImpl.ErrorFormatStringObjectObjectObject">
            <summary>Establecer el stub de LogImpl.ErrorFormat(String format, Object arg0, Object arg1, Object arg2)</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogImpl.ErrorObject">
            <summary>Establecer el stub de LogImpl.Error(Object message)</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogImpl.ErrorObjectException">
            <summary>Establecer el stub de LogImpl.Error(Object message, Exception exception)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogImpl.Fatal(System.Object)">
            <summary>Establecer el stub de LogImpl.Fatal(Object message)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogImpl.Fatal(System.Object,System.Exception)">
            <summary>Establecer el stub de LogImpl.Fatal(Object message, Exception exception)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogImpl.FatalFormat(System.String,System.Object[])">
            <summary>Establecer el stub de LogImpl.FatalFormat(String format, Object[] args)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogImpl.FatalFormat(System.String,System.Object)">
            <summary>Establecer el stub de LogImpl.FatalFormat(String format, Object arg0)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogImpl.FatalFormat(System.IFormatProvider,System.String,System.Object[])">
            <summary>Establecer el stub de LogImpl.FatalFormat(IFormatProvider provider, String format, Object[] args)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogImpl.FatalFormat(System.String,System.Object,System.Object)">
            <summary>Establecer el stub de LogImpl.FatalFormat(String format, Object arg0, Object arg1)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogImpl.FatalFormat(System.String,System.Object,System.Object,System.Object)">
            <summary>Establecer el stub de LogImpl.FatalFormat(String format, Object arg0, Object arg1, Object arg2)</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogImpl.FatalFormatIFormatProviderStringObjectArray">
            <summary>Establecer el stub de LogImpl.FatalFormat(IFormatProvider provider, String format, Object[] args)</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogImpl.FatalFormatStringObject">
            <summary>Establecer el stub de LogImpl.FatalFormat(String format, Object arg0)</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogImpl.FatalFormatStringObjectArray">
            <summary>Establecer el stub de LogImpl.FatalFormat(String format, Object[] args)</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogImpl.FatalFormatStringObjectObject">
            <summary>Establecer el stub de LogImpl.FatalFormat(String format, Object arg0, Object arg1)</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogImpl.FatalFormatStringObjectObjectObject">
            <summary>Establecer el stub de LogImpl.FatalFormat(String format, Object arg0, Object arg1, Object arg2)</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogImpl.FatalObject">
            <summary>Establecer el stub de LogImpl.Fatal(Object message)</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogImpl.FatalObjectException">
            <summary>Establecer el stub de LogImpl.Fatal(Object message, Exception exception)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogImpl.Info(System.Object)">
            <summary>Establecer el stub de LogImpl.Info(Object message)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogImpl.Info(System.Object,System.Exception)">
            <summary>Establecer el stub de LogImpl.Info(Object message, Exception exception)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogImpl.InfoFormat(System.String,System.Object)">
            <summary>Establecer el stub de LogImpl.InfoFormat(String format, Object arg0)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogImpl.InfoFormat(System.String,System.Object[])">
            <summary>Establecer el stub de LogImpl.InfoFormat(String format, Object[] args)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogImpl.InfoFormat(System.IFormatProvider,System.String,System.Object[])">
            <summary>Establecer el stub de LogImpl.InfoFormat(IFormatProvider provider, String format, Object[] args)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogImpl.InfoFormat(System.String,System.Object,System.Object)">
            <summary>Establecer el stub de LogImpl.InfoFormat(String format, Object arg0, Object arg1)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogImpl.InfoFormat(System.String,System.Object,System.Object,System.Object)">
            <summary>Establecer el stub de LogImpl.InfoFormat(String format, Object arg0, Object arg1, Object arg2)</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogImpl.InfoFormatIFormatProviderStringObjectArray">
            <summary>Establecer el stub de LogImpl.InfoFormat(IFormatProvider provider, String format, Object[] args)</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogImpl.InfoFormatStringObject">
            <summary>Establecer el stub de LogImpl.InfoFormat(String format, Object arg0)</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogImpl.InfoFormatStringObjectArray">
            <summary>Establecer el stub de LogImpl.InfoFormat(String format, Object[] args)</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogImpl.InfoFormatStringObjectObject">
            <summary>Establecer el stub de LogImpl.InfoFormat(String format, Object arg0, Object arg1)</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogImpl.InfoFormatStringObjectObjectObject">
            <summary>Establecer el stub de LogImpl.InfoFormat(String format, Object arg0, Object arg1, Object arg2)</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogImpl.InfoObject">
            <summary>Establecer el stub de LogImpl.Info(Object message)</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogImpl.InfoObjectException">
            <summary>Establecer el stub de LogImpl.Info(Object message, Exception exception)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogImpl.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubLogImpl</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubLogImpl.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubLogImpl.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubLogImpl.IsDebugEnabled">
            <summary>Establecer el stub de LogImpl.get_IsDebugEnabled()</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogImpl.IsDebugEnabledGet">
            <summary>Establecer el stub de LogImpl.get_IsDebugEnabled()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubLogImpl.IsErrorEnabled">
            <summary>Establecer el stub de LogImpl.get_IsErrorEnabled()</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogImpl.IsErrorEnabledGet">
            <summary>Establecer el stub de LogImpl.get_IsErrorEnabled()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubLogImpl.IsFatalEnabled">
            <summary>Establecer el stub de LogImpl.get_IsFatalEnabled()</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogImpl.IsFatalEnabledGet">
            <summary>Establecer el stub de LogImpl.get_IsFatalEnabled()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubLogImpl.IsInfoEnabled">
            <summary>Establecer el stub de LogImpl.get_IsInfoEnabled()</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogImpl.IsInfoEnabledGet">
            <summary>Establecer el stub de LogImpl.get_IsInfoEnabled()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubLogImpl.IsWarnEnabled">
            <summary>Establecer el stub de LogImpl.get_IsWarnEnabled()</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogImpl.IsWarnEnabledGet">
            <summary>Establecer el stub de LogImpl.get_IsWarnEnabled()</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubLogImpl.Logger">
            <summary>Establecer el stub de LoggerWrapperImpl.get_Logger()</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogImpl.LoggerGet">
            <summary>Establecer el stub de LoggerWrapperImpl.get_Logger()</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogImpl.ReloadLevels(log4net.Repository.ILoggerRepository)">
            <summary>Establecer el stub de LogImpl.ReloadLevels(ILoggerRepository repository)</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogImpl.ReloadLevelsILoggerRepository">
            <summary>Establecer el stub de LogImpl.ReloadLevels(ILoggerRepository repository)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogImpl.Warn(System.Object)">
            <summary>Establecer el stub de LogImpl.Warn(Object message)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogImpl.Warn(System.Object,System.Exception)">
            <summary>Establecer el stub de LogImpl.Warn(Object message, Exception exception)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogImpl.WarnFormat(System.String,System.Object[])">
            <summary>Establecer el stub de LogImpl.WarnFormat(String format, Object[] args)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogImpl.WarnFormat(System.String,System.Object)">
            <summary>Establecer el stub de LogImpl.WarnFormat(String format, Object arg0)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogImpl.WarnFormat(System.IFormatProvider,System.String,System.Object[])">
            <summary>Establecer el stub de LogImpl.WarnFormat(IFormatProvider provider, String format, Object[] args)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogImpl.WarnFormat(System.String,System.Object,System.Object)">
            <summary>Establecer el stub de LogImpl.WarnFormat(String format, Object arg0, Object arg1)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLogImpl.WarnFormat(System.String,System.Object,System.Object,System.Object)">
            <summary>Establecer el stub de LogImpl.WarnFormat(String format, Object arg0, Object arg1, Object arg2)</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogImpl.WarnFormatIFormatProviderStringObjectArray">
            <summary>Establecer el stub de LogImpl.WarnFormat(IFormatProvider provider, String format, Object[] args)</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogImpl.WarnFormatStringObject">
            <summary>Establecer el stub de LogImpl.WarnFormat(String format, Object arg0)</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogImpl.WarnFormatStringObjectArray">
            <summary>Establecer el stub de LogImpl.WarnFormat(String format, Object[] args)</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogImpl.WarnFormatStringObjectObject">
            <summary>Establecer el stub de LogImpl.WarnFormat(String format, Object arg0, Object arg1)</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogImpl.WarnFormatStringObjectObjectObject">
            <summary>Establecer el stub de LogImpl.WarnFormat(String format, Object arg0, Object arg1, Object arg2)</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogImpl.WarnObject">
            <summary>Establecer el stub de LogImpl.Warn(Object message)</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLogImpl.WarnObjectException">
            <summary>Establecer el stub de LogImpl.Warn(Object message, Exception exception)</summary>
        </member>
        <member name="T:log4net.Core.Fakes.StubLoggerRepositoryCreationEventArgs">
            <summary>Tipo stub de log4net.Core.LoggerRepositoryCreationEventArgs</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLoggerRepositoryCreationEventArgs.#ctor(log4net.Repository.ILoggerRepository)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubLoggerRepositoryCreationEventArgs.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLoggerRepositoryCreationEventArgs.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubLoggerRepositoryCreationEventArgs</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubLoggerRepositoryCreationEventArgs.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubLoggerRepositoryCreationEventArgs.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:log4net.Core.Fakes.StubLoggerWrapperImpl">
            <summary>Tipo stub de log4net.Core.LoggerWrapperImpl</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLoggerWrapperImpl.#ctor(log4net.Core.ILogger)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubLoggerWrapperImpl.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLoggerWrapperImpl.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubLoggerWrapperImpl</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubLoggerWrapperImpl.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubLoggerWrapperImpl.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubLoggerWrapperImpl.Logger">
            <summary>Establecer el stub de LoggerWrapperImpl.get_Logger()</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLoggerWrapperImpl.LoggerGet">
            <summary>Establecer el stub de LoggerWrapperImpl.get_Logger()</summary>
        </member>
        <member name="T:log4net.Core.Fakes.StubLoggingEvent">
            <summary>Tipo stub de log4net.Core.LoggingEvent</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLoggingEvent.#ctor(log4net.Core.LoggingEventData)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLoggingEvent.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLoggingEvent.#ctor(System.Type,log4net.Repository.ILoggerRepository,log4net.Core.LoggingEventData)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLoggingEvent.#ctor(System.Type,log4net.Repository.ILoggerRepository,log4net.Core.LoggingEventData,log4net.Core.FixFlags)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLoggingEvent.#ctor(System.Type,log4net.Repository.ILoggerRepository,System.String,log4net.Core.Level,System.Object,System.Exception)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubLoggingEvent.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLoggingEvent.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Establecer el stub de LoggingEvent.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubLoggingEvent.GetObjectDataSerializationInfoStreamingContext">
            <summary>Establecer el stub de LoggingEvent.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubLoggingEvent.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubLoggingEvent</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubLoggingEvent.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubLoggingEvent.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:log4net.Core.Fakes.StubMethodItem">
            <summary>Tipo stub de log4net.Core.MethodItem</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubMethodItem.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubMethodItem.#ctor(System.String)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubMethodItem.#ctor(System.Reflection.MethodBase)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubMethodItem.#ctor(System.String,System.String[])">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubMethodItem.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubMethodItem.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubMethodItem</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubMethodItem.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubMethodItem.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:log4net.Core.Fakes.StubSecurityContext">
            <summary>Tipo stub de log4net.Core.SecurityContext</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubSecurityContext.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubSecurityContext.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubSecurityContext.Impersonate(System.Object)">
            <summary>Establecer el stub de SecurityContext.Impersonate(Object state)</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubSecurityContext.ImpersonateObject">
            <summary>Establecer el stub de SecurityContext.Impersonate(Object state)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubSecurityContext.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubSecurityContext</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubSecurityContext.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubSecurityContext.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:log4net.Core.Fakes.StubSecurityContextProvider">
            <summary>Tipo stub de log4net.Core.SecurityContextProvider</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubSecurityContextProvider.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubSecurityContextProvider.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubSecurityContextProvider.CreateSecurityContext(System.Object)">
            <summary>Establecer el stub de SecurityContextProvider.CreateSecurityContext(Object consumer)</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubSecurityContextProvider.CreateSecurityContextObject">
            <summary>Establecer el stub de SecurityContextProvider.CreateSecurityContext(Object consumer)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubSecurityContextProvider.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubSecurityContextProvider</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubSecurityContextProvider.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubSecurityContextProvider.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:log4net.Core.Fakes.StubStackFrameItem">
            <summary>Tipo stub de log4net.Core.StackFrameItem</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubStackFrameItem.#ctor(System.Diagnostics.StackFrame)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubStackFrameItem.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubStackFrameItem.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubStackFrameItem</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubStackFrameItem.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubStackFrameItem.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:log4net.Core.Fakes.StubTimeEvaluator">
            <summary>Tipo stub de log4net.Core.TimeEvaluator</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubTimeEvaluator.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubTimeEvaluator.#ctor(System.Int32)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubTimeEvaluator.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubTimeEvaluator.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubTimeEvaluator</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubTimeEvaluator.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubTimeEvaluator.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:log4net.Core.Fakes.StubWrapperMap">
            <summary>Tipo stub de log4net.Core.WrapperMap</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubWrapperMap.#ctor(log4net.Core.WrapperCreationHandler)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubWrapperMap.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubWrapperMap.CreateNewWrapperObject(log4net.Core.ILogger)">
            <summary>Establecer el stub de WrapperMap.CreateNewWrapperObject(ILogger logger)</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubWrapperMap.CreateNewWrapperObjectILogger">
            <summary>Establecer el stub de WrapperMap.CreateNewWrapperObject(ILogger logger)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubWrapperMap.GetWrapper(log4net.Core.ILogger)">
            <summary>Establecer el stub de WrapperMap.GetWrapper(ILogger logger)</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubWrapperMap.GetWrapperILogger">
            <summary>Establecer el stub de WrapperMap.GetWrapper(ILogger logger)</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubWrapperMap.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubWrapperMap</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubWrapperMap.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Core.Fakes.StubWrapperMap.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="M:log4net.Core.Fakes.StubWrapperMap.RepositoryShutdown(log4net.Repository.ILoggerRepository)">
            <summary>Establecer el stub de WrapperMap.RepositoryShutdown(ILoggerRepository repository)</summary>
        </member>
        <member name="F:log4net.Core.Fakes.StubWrapperMap.RepositoryShutdownILoggerRepository">
            <summary>Establecer el stub de WrapperMap.RepositoryShutdown(ILoggerRepository repository)</summary>
        </member>
        <member name="T:log4net.DateFormatter.Fakes.ShimAbsoluteTimeDateFormatter">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.DateFormatter.AbsoluteTimeDateFormatter</summary>
        </member>
        <member name="M:log4net.DateFormatter.Fakes.ShimAbsoluteTimeDateFormatter.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.DateFormatter.Fakes.ShimAbsoluteTimeDateFormatter.#ctor(log4net.DateFormatter.AbsoluteTimeDateFormatter)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.DateFormatter.Fakes.ShimAbsoluteTimeDateFormatter.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.DateFormatter.Fakes.ShimAbsoluteTimeDateFormatter.AllInstances.FormatDateDateTimeTextWriter">
            <summary>Establecer el shim de AbsoluteTimeDateFormatter.FormatDate(DateTime dateToFormat, TextWriter writer)</summary>
        </member>
        <member name="P:log4net.DateFormatter.Fakes.ShimAbsoluteTimeDateFormatter.AllInstances.FormatDateWithoutMillisDateTimeStringBuilder">
            <summary>Establecer el shim de AbsoluteTimeDateFormatter.FormatDateWithoutMillis(DateTime dateToFormat, StringBuilder buffer)</summary>
        </member>
        <member name="M:log4net.DateFormatter.Fakes.ShimAbsoluteTimeDateFormatter.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.DateFormatter.Fakes.ShimAbsoluteTimeDateFormatter.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.DateFormatter.Fakes.ShimAbsoluteTimeDateFormatter.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.DateFormatter.Fakes.ShimAbsoluteTimeDateFormatter.Bind(log4net.DateFormatter.IDateFormatter)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.DateFormatter.Fakes.ShimAbsoluteTimeDateFormatter.Constructor">
            <summary>Establecer el shim de AbsoluteTimeDateFormatter.AbsoluteTimeDateFormatter()</summary>
        </member>
        <member name="P:log4net.DateFormatter.Fakes.ShimAbsoluteTimeDateFormatter.FormatDateDateTimeTextWriter">
            <summary>Establecer el shim de AbsoluteTimeDateFormatter.FormatDate(DateTime dateToFormat, TextWriter writer)</summary>
        </member>
        <member name="P:log4net.DateFormatter.Fakes.ShimAbsoluteTimeDateFormatter.FormatDateWithoutMillisDateTimeStringBuilder">
            <summary>Establecer el shim de AbsoluteTimeDateFormatter.FormatDateWithoutMillis(DateTime dateToFormat, StringBuilder buffer)</summary>
        </member>
        <member name="P:log4net.DateFormatter.Fakes.ShimAbsoluteTimeDateFormatter.StaticConstructor">
            <summary>Establecer el shim de AbsoluteTimeDateFormatter.AbsoluteTimeDateFormatter()</summary>
        </member>
        <member name="T:log4net.DateFormatter.Fakes.ShimDateTimeDateFormatter">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.DateFormatter.DateTimeDateFormatter</summary>
        </member>
        <member name="M:log4net.DateFormatter.Fakes.ShimDateTimeDateFormatter.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.DateFormatter.Fakes.ShimDateTimeDateFormatter.#ctor(log4net.DateFormatter.DateTimeDateFormatter)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.DateFormatter.Fakes.ShimDateTimeDateFormatter.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.DateFormatter.Fakes.ShimDateTimeDateFormatter.AllInstances.FormatDateWithoutMillisDateTimeStringBuilder">
            <summary>Establecer el shim de DateTimeDateFormatter.FormatDateWithoutMillis(DateTime dateToFormat, StringBuilder buffer)</summary>
        </member>
        <member name="M:log4net.DateFormatter.Fakes.ShimDateTimeDateFormatter.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.DateFormatter.Fakes.ShimDateTimeDateFormatter.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.DateFormatter.Fakes.ShimDateTimeDateFormatter.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.DateFormatter.Fakes.ShimDateTimeDateFormatter.Bind(log4net.DateFormatter.IDateFormatter)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.DateFormatter.Fakes.ShimDateTimeDateFormatter.Constructor">
            <summary>Establecer el shim de DateTimeDateFormatter.DateTimeDateFormatter()</summary>
        </member>
        <member name="P:log4net.DateFormatter.Fakes.ShimDateTimeDateFormatter.FormatDateWithoutMillisDateTimeStringBuilder">
            <summary>Establecer el shim de DateTimeDateFormatter.FormatDateWithoutMillis(DateTime dateToFormat, StringBuilder buffer)</summary>
        </member>
        <member name="T:log4net.DateFormatter.Fakes.ShimIso8601DateFormatter">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.DateFormatter.Iso8601DateFormatter</summary>
        </member>
        <member name="M:log4net.DateFormatter.Fakes.ShimIso8601DateFormatter.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.DateFormatter.Fakes.ShimIso8601DateFormatter.#ctor(log4net.DateFormatter.Iso8601DateFormatter)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.DateFormatter.Fakes.ShimIso8601DateFormatter.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.DateFormatter.Fakes.ShimIso8601DateFormatter.AllInstances.FormatDateWithoutMillisDateTimeStringBuilder">
            <summary>Establecer el shim de Iso8601DateFormatter.FormatDateWithoutMillis(DateTime dateToFormat, StringBuilder buffer)</summary>
        </member>
        <member name="M:log4net.DateFormatter.Fakes.ShimIso8601DateFormatter.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.DateFormatter.Fakes.ShimIso8601DateFormatter.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.DateFormatter.Fakes.ShimIso8601DateFormatter.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.DateFormatter.Fakes.ShimIso8601DateFormatter.Bind(log4net.DateFormatter.IDateFormatter)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.DateFormatter.Fakes.ShimIso8601DateFormatter.Constructor">
            <summary>Establecer el shim de Iso8601DateFormatter.Iso8601DateFormatter()</summary>
        </member>
        <member name="P:log4net.DateFormatter.Fakes.ShimIso8601DateFormatter.FormatDateWithoutMillisDateTimeStringBuilder">
            <summary>Establecer el shim de Iso8601DateFormatter.FormatDateWithoutMillis(DateTime dateToFormat, StringBuilder buffer)</summary>
        </member>
        <member name="T:log4net.DateFormatter.Fakes.ShimSimpleDateFormatter">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.DateFormatter.SimpleDateFormatter</summary>
        </member>
        <member name="M:log4net.DateFormatter.Fakes.ShimSimpleDateFormatter.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.DateFormatter.Fakes.ShimSimpleDateFormatter.#ctor(log4net.DateFormatter.SimpleDateFormatter)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.DateFormatter.Fakes.ShimSimpleDateFormatter.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.DateFormatter.Fakes.ShimSimpleDateFormatter.AllInstances.FormatDateDateTimeTextWriter">
            <summary>Establecer el shim de SimpleDateFormatter.FormatDate(DateTime dateToFormat, TextWriter writer)</summary>
        </member>
        <member name="M:log4net.DateFormatter.Fakes.ShimSimpleDateFormatter.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.DateFormatter.Fakes.ShimSimpleDateFormatter.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.DateFormatter.Fakes.ShimSimpleDateFormatter.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.DateFormatter.Fakes.ShimSimpleDateFormatter.Bind(log4net.DateFormatter.IDateFormatter)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.DateFormatter.Fakes.ShimSimpleDateFormatter.ConstructorString">
            <summary>Establecer el shim de SimpleDateFormatter.SimpleDateFormatter(String format)</summary>
        </member>
        <member name="P:log4net.DateFormatter.Fakes.ShimSimpleDateFormatter.FormatDateDateTimeTextWriter">
            <summary>Establecer el shim de SimpleDateFormatter.FormatDate(DateTime dateToFormat, TextWriter writer)</summary>
        </member>
        <member name="T:log4net.DateFormatter.Fakes.StubAbsoluteTimeDateFormatter">
            <summary>Tipo stub de log4net.DateFormatter.AbsoluteTimeDateFormatter</summary>
        </member>
        <member name="M:log4net.DateFormatter.Fakes.StubAbsoluteTimeDateFormatter.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:log4net.DateFormatter.Fakes.StubAbsoluteTimeDateFormatter.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:log4net.DateFormatter.Fakes.StubAbsoluteTimeDateFormatter.FormatDate(System.DateTime,System.IO.TextWriter)">
            <summary>Establecer el stub de AbsoluteTimeDateFormatter.FormatDate(DateTime dateToFormat, TextWriter writer)</summary>
        </member>
        <member name="F:log4net.DateFormatter.Fakes.StubAbsoluteTimeDateFormatter.FormatDateDateTimeTextWriter">
            <summary>Establecer el stub de AbsoluteTimeDateFormatter.FormatDate(DateTime dateToFormat, TextWriter writer)</summary>
        </member>
        <member name="M:log4net.DateFormatter.Fakes.StubAbsoluteTimeDateFormatter.FormatDateWithoutMillis(System.DateTime,System.Text.StringBuilder)">
            <summary>Establecer el stub de AbsoluteTimeDateFormatter.FormatDateWithoutMillis(DateTime dateToFormat, StringBuilder buffer)</summary>
        </member>
        <member name="F:log4net.DateFormatter.Fakes.StubAbsoluteTimeDateFormatter.FormatDateWithoutMillisDateTimeStringBuilder">
            <summary>Establecer el stub de AbsoluteTimeDateFormatter.FormatDateWithoutMillis(DateTime dateToFormat, StringBuilder buffer)</summary>
        </member>
        <member name="M:log4net.DateFormatter.Fakes.StubAbsoluteTimeDateFormatter.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubAbsoluteTimeDateFormatter</summary>
        </member>
        <member name="P:log4net.DateFormatter.Fakes.StubAbsoluteTimeDateFormatter.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.DateFormatter.Fakes.StubAbsoluteTimeDateFormatter.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:log4net.DateFormatter.Fakes.StubDateTimeDateFormatter">
            <summary>Tipo stub de log4net.DateFormatter.DateTimeDateFormatter</summary>
        </member>
        <member name="M:log4net.DateFormatter.Fakes.StubDateTimeDateFormatter.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:log4net.DateFormatter.Fakes.StubDateTimeDateFormatter.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:log4net.DateFormatter.Fakes.StubDateTimeDateFormatter.FormatDate(System.DateTime,System.IO.TextWriter)">
            <summary>Establecer el stub de AbsoluteTimeDateFormatter.FormatDate(DateTime dateToFormat, TextWriter writer)</summary>
        </member>
        <member name="F:log4net.DateFormatter.Fakes.StubDateTimeDateFormatter.FormatDateDateTimeTextWriter">
            <summary>Establecer el stub de AbsoluteTimeDateFormatter.FormatDate(DateTime dateToFormat, TextWriter writer)</summary>
        </member>
        <member name="M:log4net.DateFormatter.Fakes.StubDateTimeDateFormatter.FormatDateWithoutMillis(System.DateTime,System.Text.StringBuilder)">
            <summary>Establecer el stub de DateTimeDateFormatter.FormatDateWithoutMillis(DateTime dateToFormat, StringBuilder buffer)</summary>
        </member>
        <member name="F:log4net.DateFormatter.Fakes.StubDateTimeDateFormatter.FormatDateWithoutMillisDateTimeStringBuilder">
            <summary>Establecer el stub de DateTimeDateFormatter.FormatDateWithoutMillis(DateTime dateToFormat, StringBuilder buffer)</summary>
        </member>
        <member name="M:log4net.DateFormatter.Fakes.StubDateTimeDateFormatter.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubDateTimeDateFormatter</summary>
        </member>
        <member name="P:log4net.DateFormatter.Fakes.StubDateTimeDateFormatter.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.DateFormatter.Fakes.StubDateTimeDateFormatter.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:log4net.DateFormatter.Fakes.StubIDateFormatter">
            <summary>Tipo stub de log4net.DateFormatter.IDateFormatter</summary>
        </member>
        <member name="M:log4net.DateFormatter.Fakes.StubIDateFormatter.#ctor">
            <summary>Inicializa una nueva instancia de type StubIDateFormatter</summary>
        </member>
        <member name="F:log4net.DateFormatter.Fakes.StubIDateFormatter.FormatDateDateTimeTextWriter">
            <summary>Establecer el stub de IDateFormatter.FormatDate(DateTime dateToFormat, TextWriter writer)</summary>
        </member>
        <member name="M:log4net.DateFormatter.Fakes.StubIDateFormatter.log4net#DateFormatter#IDateFormatter#FormatDate(System.DateTime,System.IO.TextWriter)">
            <summary>Establecer el stub de IDateFormatter.FormatDate(DateTime dateToFormat, TextWriter writer)</summary>
        </member>
        <member name="T:log4net.DateFormatter.Fakes.StubIso8601DateFormatter">
            <summary>Tipo stub de log4net.DateFormatter.Iso8601DateFormatter</summary>
        </member>
        <member name="M:log4net.DateFormatter.Fakes.StubIso8601DateFormatter.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:log4net.DateFormatter.Fakes.StubIso8601DateFormatter.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:log4net.DateFormatter.Fakes.StubIso8601DateFormatter.FormatDate(System.DateTime,System.IO.TextWriter)">
            <summary>Establecer el stub de AbsoluteTimeDateFormatter.FormatDate(DateTime dateToFormat, TextWriter writer)</summary>
        </member>
        <member name="F:log4net.DateFormatter.Fakes.StubIso8601DateFormatter.FormatDateDateTimeTextWriter">
            <summary>Establecer el stub de AbsoluteTimeDateFormatter.FormatDate(DateTime dateToFormat, TextWriter writer)</summary>
        </member>
        <member name="M:log4net.DateFormatter.Fakes.StubIso8601DateFormatter.FormatDateWithoutMillis(System.DateTime,System.Text.StringBuilder)">
            <summary>Establecer el stub de Iso8601DateFormatter.FormatDateWithoutMillis(DateTime dateToFormat, StringBuilder buffer)</summary>
        </member>
        <member name="F:log4net.DateFormatter.Fakes.StubIso8601DateFormatter.FormatDateWithoutMillisDateTimeStringBuilder">
            <summary>Establecer el stub de Iso8601DateFormatter.FormatDateWithoutMillis(DateTime dateToFormat, StringBuilder buffer)</summary>
        </member>
        <member name="M:log4net.DateFormatter.Fakes.StubIso8601DateFormatter.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubIso8601DateFormatter</summary>
        </member>
        <member name="P:log4net.DateFormatter.Fakes.StubIso8601DateFormatter.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.DateFormatter.Fakes.StubIso8601DateFormatter.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:log4net.DateFormatter.Fakes.StubSimpleDateFormatter">
            <summary>Tipo stub de log4net.DateFormatter.SimpleDateFormatter</summary>
        </member>
        <member name="M:log4net.DateFormatter.Fakes.StubSimpleDateFormatter.#ctor(System.String)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:log4net.DateFormatter.Fakes.StubSimpleDateFormatter.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:log4net.DateFormatter.Fakes.StubSimpleDateFormatter.FormatDate(System.DateTime,System.IO.TextWriter)">
            <summary>Establecer el stub de SimpleDateFormatter.FormatDate(DateTime dateToFormat, TextWriter writer)</summary>
        </member>
        <member name="F:log4net.DateFormatter.Fakes.StubSimpleDateFormatter.FormatDateDateTimeTextWriter">
            <summary>Establecer el stub de SimpleDateFormatter.FormatDate(DateTime dateToFormat, TextWriter writer)</summary>
        </member>
        <member name="M:log4net.DateFormatter.Fakes.StubSimpleDateFormatter.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubSimpleDateFormatter</summary>
        </member>
        <member name="P:log4net.DateFormatter.Fakes.StubSimpleDateFormatter.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.DateFormatter.Fakes.StubSimpleDateFormatter.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:log4net.Fakes.ShimAssemblyInfo">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.AssemblyInfo</summary>
        </member>
        <member name="M:log4net.Fakes.ShimAssemblyInfo.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Fakes.ShimAssemblyInfo.#ctor(log4net.AssemblyInfo)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Fakes.ShimAssemblyInfo.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="M:log4net.Fakes.ShimAssemblyInfo.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Fakes.ShimAssemblyInfo.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Fakes.ShimAssemblyInfo.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Fakes.ShimAssemblyInfo.Constructor">
            <summary>Establecer el shim de AssemblyInfo.AssemblyInfo()</summary>
        </member>
        <member name="P:log4net.Fakes.ShimAssemblyInfo.InfoGet">
            <summary>Establecer el shim de AssemblyInfo.get_Info()</summary>
        </member>
        <member name="P:log4net.Fakes.ShimAssemblyInfo.StaticConstructor">
            <summary>Establecer el shim de AssemblyInfo.AssemblyInfo()</summary>
        </member>
        <member name="T:log4net.Fakes.ShimGlobalContext">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.GlobalContext</summary>
        </member>
        <member name="M:log4net.Fakes.ShimGlobalContext.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Fakes.ShimGlobalContext.#ctor(log4net.GlobalContext)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Fakes.ShimGlobalContext.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="M:log4net.Fakes.ShimGlobalContext.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Fakes.ShimGlobalContext.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Fakes.ShimGlobalContext.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Fakes.ShimGlobalContext.Constructor">
            <summary>Establecer el shim de GlobalContext.GlobalContext()</summary>
        </member>
        <member name="P:log4net.Fakes.ShimGlobalContext.PropertiesGet">
            <summary>Establecer el shim de GlobalContext.get_Properties()</summary>
        </member>
        <member name="P:log4net.Fakes.ShimGlobalContext.StaticConstructor">
            <summary>Establecer el shim de GlobalContext.GlobalContext()</summary>
        </member>
        <member name="T:log4net.Fakes.ShimLogManager">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.LogManager</summary>
        </member>
        <member name="M:log4net.Fakes.ShimLogManager.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Fakes.ShimLogManager.#ctor(log4net.LogManager)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Fakes.ShimLogManager.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="M:log4net.Fakes.ShimLogManager.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Fakes.ShimLogManager.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogManager.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogManager.Constructor">
            <summary>Establecer el shim de LogManager.LogManager()</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogManager.CreateDomainAssemblyType">
            <summary>Establecer el shim de LogManager.CreateDomain(Assembly repositoryAssembly, Type repositoryType)</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogManager.CreateDomainString">
            <summary>Establecer el shim de LogManager.CreateDomain(String repository)</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogManager.CreateDomainStringType">
            <summary>Establecer el shim de LogManager.CreateDomain(String repository, Type repositoryType)</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogManager.CreateDomainType">
            <summary>Establecer el shim de LogManager.CreateDomain(Type repositoryType)</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogManager.CreateRepositoryAssemblyType">
            <summary>Establecer el shim de LogManager.CreateRepository(Assembly repositoryAssembly, Type repositoryType)</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogManager.CreateRepositoryString">
            <summary>Establecer el shim de LogManager.CreateRepository(String repository)</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogManager.CreateRepositoryStringType">
            <summary>Establecer el shim de LogManager.CreateRepository(String repository, Type repositoryType)</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogManager.CreateRepositoryType">
            <summary>Establecer el shim de LogManager.CreateRepository(Type repositoryType)</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogManager.ExistsAssemblyString">
            <summary>Establecer el shim de LogManager.Exists(Assembly repositoryAssembly, String name)</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogManager.ExistsString">
            <summary>Establecer el shim de LogManager.Exists(String name)</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogManager.ExistsStringString">
            <summary>Establecer el shim de LogManager.Exists(String repository, String name)</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogManager.FlushInt32">
            <summary>Establecer el shim de LogManager.Flush(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogManager.GetAllRepositories">
            <summary>Establecer el shim de LogManager.GetAllRepositories()</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogManager.GetCurrentLoggers">
            <summary>Establecer el shim de LogManager.GetCurrentLoggers()</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogManager.GetCurrentLoggersAssembly">
            <summary>Establecer el shim de LogManager.GetCurrentLoggers(Assembly repositoryAssembly)</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogManager.GetCurrentLoggersString">
            <summary>Establecer el shim de LogManager.GetCurrentLoggers(String repository)</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogManager.GetLoggerAssemblyString">
            <summary>Establecer el shim de LogManager.GetLogger(Assembly repositoryAssembly, String name)</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogManager.GetLoggerAssemblyType">
            <summary>Establecer el shim de LogManager.GetLogger(Assembly repositoryAssembly, Type type)</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogManager.GetLoggerRepository">
            <summary>Establecer el shim de LogManager.GetLoggerRepository()</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogManager.GetLoggerRepositoryAssembly">
            <summary>Establecer el shim de LogManager.GetLoggerRepository(Assembly repositoryAssembly)</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogManager.GetLoggerRepositoryString">
            <summary>Establecer el shim de LogManager.GetLoggerRepository(String repository)</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogManager.GetLoggerString">
            <summary>Establecer el shim de LogManager.GetLogger(String name)</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogManager.GetLoggerStringString">
            <summary>Establecer el shim de LogManager.GetLogger(String repository, String name)</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogManager.GetLoggerStringType">
            <summary>Establecer el shim de LogManager.GetLogger(String repository, Type type)</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogManager.GetLoggerType">
            <summary>Establecer el shim de LogManager.GetLogger(Type type)</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogManager.GetRepository">
            <summary>Establecer el shim de LogManager.GetRepository()</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogManager.GetRepositoryAssembly">
            <summary>Establecer el shim de LogManager.GetRepository(Assembly repositoryAssembly)</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogManager.GetRepositoryString">
            <summary>Establecer el shim de LogManager.GetRepository(String repository)</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogManager.ResetConfiguration">
            <summary>Establecer el shim de LogManager.ResetConfiguration()</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogManager.ResetConfigurationAssembly">
            <summary>Establecer el shim de LogManager.ResetConfiguration(Assembly repositoryAssembly)</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogManager.ResetConfigurationString">
            <summary>Establecer el shim de LogManager.ResetConfiguration(String repository)</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogManager.Shutdown">
            <summary>Establecer el shim de LogManager.Shutdown()</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogManager.ShutdownRepository">
            <summary>Establecer el shim de LogManager.ShutdownRepository()</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogManager.ShutdownRepositoryAssembly">
            <summary>Establecer el shim de LogManager.ShutdownRepository(Assembly repositoryAssembly)</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogManager.ShutdownRepositoryString">
            <summary>Establecer el shim de LogManager.ShutdownRepository(String repository)</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogManager.StaticConstructor">
            <summary>Establecer el shim de LogManager.LogManager()</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogManager.WrapLoggerILogger">
            <summary>Establecer el shim de LogManager.WrapLogger(ILogger logger)</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogManager.WrapLoggersILoggerArray">
            <summary>Establecer el shim de LogManager.WrapLoggers(ILogger[] loggers)</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogManager.WrapperCreationHandlerILogger">
            <summary>Establecer el shim de LogManager.WrapperCreationHandler(ILogger logger)</summary>
        </member>
        <member name="T:log4net.Fakes.ShimLogicalThreadContext">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.LogicalThreadContext</summary>
        </member>
        <member name="M:log4net.Fakes.ShimLogicalThreadContext.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Fakes.ShimLogicalThreadContext.#ctor(log4net.LogicalThreadContext)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Fakes.ShimLogicalThreadContext.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="M:log4net.Fakes.ShimLogicalThreadContext.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Fakes.ShimLogicalThreadContext.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogicalThreadContext.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogicalThreadContext.Constructor">
            <summary>Establecer el shim de LogicalThreadContext.LogicalThreadContext()</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogicalThreadContext.PropertiesGet">
            <summary>Establecer el shim de LogicalThreadContext.get_Properties()</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogicalThreadContext.StacksGet">
            <summary>Establecer el shim de LogicalThreadContext.get_Stacks()</summary>
        </member>
        <member name="P:log4net.Fakes.ShimLogicalThreadContext.StaticConstructor">
            <summary>Establecer el shim de LogicalThreadContext.LogicalThreadContext()</summary>
        </member>
        <member name="T:log4net.Fakes.ShimMDC">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.MDC</summary>
        </member>
        <member name="M:log4net.Fakes.ShimMDC.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Fakes.ShimMDC.#ctor(log4net.MDC)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Fakes.ShimMDC.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="M:log4net.Fakes.ShimMDC.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Fakes.ShimMDC.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Fakes.ShimMDC.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Fakes.ShimMDC.Clear">
            <summary>Establecer el shim de MDC.Clear()</summary>
        </member>
        <member name="P:log4net.Fakes.ShimMDC.Constructor">
            <summary>Establecer el shim de MDC.MDC()</summary>
        </member>
        <member name="P:log4net.Fakes.ShimMDC.GetString">
            <summary>Establecer el shim de MDC.Get(String key)</summary>
        </member>
        <member name="P:log4net.Fakes.ShimMDC.RemoveString">
            <summary>Establecer el shim de MDC.Remove(String key)</summary>
        </member>
        <member name="P:log4net.Fakes.ShimMDC.SetStringString">
            <summary>Establecer el shim de MDC.Set(String key, String value)</summary>
        </member>
        <member name="T:log4net.Fakes.ShimNDC">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.NDC</summary>
        </member>
        <member name="M:log4net.Fakes.ShimNDC.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Fakes.ShimNDC.#ctor(log4net.NDC)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Fakes.ShimNDC.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="M:log4net.Fakes.ShimNDC.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Fakes.ShimNDC.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Fakes.ShimNDC.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Fakes.ShimNDC.Clear">
            <summary>Establecer el shim de NDC.Clear()</summary>
        </member>
        <member name="P:log4net.Fakes.ShimNDC.CloneStack">
            <summary>Establecer el shim de NDC.CloneStack()</summary>
        </member>
        <member name="P:log4net.Fakes.ShimNDC.Constructor">
            <summary>Establecer el shim de NDC.NDC()</summary>
        </member>
        <member name="P:log4net.Fakes.ShimNDC.DepthGet">
            <summary>Establecer el shim de NDC.get_Depth()</summary>
        </member>
        <member name="P:log4net.Fakes.ShimNDC.InheritStack">
            <summary>Establecer el shim de NDC.Inherit(Stack stack)</summary>
        </member>
        <member name="P:log4net.Fakes.ShimNDC.Pop">
            <summary>Establecer el shim de NDC.Pop()</summary>
        </member>
        <member name="P:log4net.Fakes.ShimNDC.PushFormatStringObjectArray">
            <summary>Establecer el shim de NDC.PushFormat(String messageFormat, Object[] args)</summary>
        </member>
        <member name="P:log4net.Fakes.ShimNDC.PushString">
            <summary>Establecer el shim de NDC.Push(String message)</summary>
        </member>
        <member name="P:log4net.Fakes.ShimNDC.Remove">
            <summary>Establecer el shim de NDC.Remove()</summary>
        </member>
        <member name="P:log4net.Fakes.ShimNDC.SetMaxDepthInt32">
            <summary>Establecer el shim de NDC.SetMaxDepth(Int32 maxDepth)</summary>
        </member>
        <member name="T:log4net.Fakes.ShimThreadContext">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.ThreadContext</summary>
        </member>
        <member name="M:log4net.Fakes.ShimThreadContext.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Fakes.ShimThreadContext.#ctor(log4net.ThreadContext)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Fakes.ShimThreadContext.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="M:log4net.Fakes.ShimThreadContext.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Fakes.ShimThreadContext.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Fakes.ShimThreadContext.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Fakes.ShimThreadContext.Constructor">
            <summary>Establecer el shim de ThreadContext.ThreadContext()</summary>
        </member>
        <member name="P:log4net.Fakes.ShimThreadContext.PropertiesGet">
            <summary>Establecer el shim de ThreadContext.get_Properties()</summary>
        </member>
        <member name="P:log4net.Fakes.ShimThreadContext.StacksGet">
            <summary>Establecer el shim de ThreadContext.get_Stacks()</summary>
        </member>
        <member name="P:log4net.Fakes.ShimThreadContext.StaticConstructor">
            <summary>Establecer el shim de ThreadContext.ThreadContext()</summary>
        </member>
        <member name="T:log4net.Fakes.StubILog">
            <summary>Tipo stub de log4net.ILog</summary>
        </member>
        <member name="M:log4net.Fakes.StubILog.#ctor">
            <summary>Inicializa una nueva instancia de type StubILog</summary>
        </member>
        <member name="F:log4net.Fakes.StubILog.DebugFormatIFormatProviderStringObjectArray">
            <summary>Establecer el stub de ILog.DebugFormat(IFormatProvider provider, String format, Object[] args)</summary>
        </member>
        <member name="F:log4net.Fakes.StubILog.DebugFormatStringObject">
            <summary>Establecer el stub de ILog.DebugFormat(String format, Object arg0)</summary>
        </member>
        <member name="F:log4net.Fakes.StubILog.DebugFormatStringObjectArray">
            <summary>Establecer el stub de ILog.DebugFormat(String format, Object[] args)</summary>
        </member>
        <member name="F:log4net.Fakes.StubILog.DebugFormatStringObjectObject">
            <summary>Establecer el stub de ILog.DebugFormat(String format, Object arg0, Object arg1)</summary>
        </member>
        <member name="F:log4net.Fakes.StubILog.DebugFormatStringObjectObjectObject">
            <summary>Establecer el stub de ILog.DebugFormat(String format, Object arg0, Object arg1, Object arg2)</summary>
        </member>
        <member name="F:log4net.Fakes.StubILog.DebugObject">
            <summary>Establecer el stub de ILog.Debug(Object message)</summary>
        </member>
        <member name="F:log4net.Fakes.StubILog.DebugObjectException">
            <summary>Establecer el stub de ILog.Debug(Object message, Exception exception)</summary>
        </member>
        <member name="F:log4net.Fakes.StubILog.ErrorFormatIFormatProviderStringObjectArray">
            <summary>Establecer el stub de ILog.ErrorFormat(IFormatProvider provider, String format, Object[] args)</summary>
        </member>
        <member name="F:log4net.Fakes.StubILog.ErrorFormatStringObject">
            <summary>Establecer el stub de ILog.ErrorFormat(String format, Object arg0)</summary>
        </member>
        <member name="F:log4net.Fakes.StubILog.ErrorFormatStringObjectArray">
            <summary>Establecer el stub de ILog.ErrorFormat(String format, Object[] args)</summary>
        </member>
        <member name="F:log4net.Fakes.StubILog.ErrorFormatStringObjectObject">
            <summary>Establecer el stub de ILog.ErrorFormat(String format, Object arg0, Object arg1)</summary>
        </member>
        <member name="F:log4net.Fakes.StubILog.ErrorFormatStringObjectObjectObject">
            <summary>Establecer el stub de ILog.ErrorFormat(String format, Object arg0, Object arg1, Object arg2)</summary>
        </member>
        <member name="F:log4net.Fakes.StubILog.ErrorObject">
            <summary>Establecer el stub de ILog.Error(Object message)</summary>
        </member>
        <member name="F:log4net.Fakes.StubILog.ErrorObjectException">
            <summary>Establecer el stub de ILog.Error(Object message, Exception exception)</summary>
        </member>
        <member name="F:log4net.Fakes.StubILog.FatalFormatIFormatProviderStringObjectArray">
            <summary>Establecer el stub de ILog.FatalFormat(IFormatProvider provider, String format, Object[] args)</summary>
        </member>
        <member name="F:log4net.Fakes.StubILog.FatalFormatStringObject">
            <summary>Establecer el stub de ILog.FatalFormat(String format, Object arg0)</summary>
        </member>
        <member name="F:log4net.Fakes.StubILog.FatalFormatStringObjectArray">
            <summary>Establecer el stub de ILog.FatalFormat(String format, Object[] args)</summary>
        </member>
        <member name="F:log4net.Fakes.StubILog.FatalFormatStringObjectObject">
            <summary>Establecer el stub de ILog.FatalFormat(String format, Object arg0, Object arg1)</summary>
        </member>
        <member name="F:log4net.Fakes.StubILog.FatalFormatStringObjectObjectObject">
            <summary>Establecer el stub de ILog.FatalFormat(String format, Object arg0, Object arg1, Object arg2)</summary>
        </member>
        <member name="F:log4net.Fakes.StubILog.FatalObject">
            <summary>Establecer el stub de ILog.Fatal(Object message)</summary>
        </member>
        <member name="F:log4net.Fakes.StubILog.FatalObjectException">
            <summary>Establecer el stub de ILog.Fatal(Object message, Exception exception)</summary>
        </member>
        <member name="F:log4net.Fakes.StubILog.InfoFormatIFormatProviderStringObjectArray">
            <summary>Establecer el stub de ILog.InfoFormat(IFormatProvider provider, String format, Object[] args)</summary>
        </member>
        <member name="F:log4net.Fakes.StubILog.InfoFormatStringObject">
            <summary>Establecer el stub de ILog.InfoFormat(String format, Object arg0)</summary>
        </member>
        <member name="F:log4net.Fakes.StubILog.InfoFormatStringObjectArray">
            <summary>Establecer el stub de ILog.InfoFormat(String format, Object[] args)</summary>
        </member>
        <member name="F:log4net.Fakes.StubILog.InfoFormatStringObjectObject">
            <summary>Establecer el stub de ILog.InfoFormat(String format, Object arg0, Object arg1)</summary>
        </member>
        <member name="F:log4net.Fakes.StubILog.InfoFormatStringObjectObjectObject">
            <summary>Establecer el stub de ILog.InfoFormat(String format, Object arg0, Object arg1, Object arg2)</summary>
        </member>
        <member name="F:log4net.Fakes.StubILog.InfoObject">
            <summary>Establecer el stub de ILog.Info(Object message)</summary>
        </member>
        <member name="F:log4net.Fakes.StubILog.InfoObjectException">
            <summary>Establecer el stub de ILog.Info(Object message, Exception exception)</summary>
        </member>
        <member name="P:log4net.Fakes.StubILog.log4net#ILog#IsDebugEnabled">
            <summary>Establecer el stub de ILog.get_IsDebugEnabled()</summary>
        </member>
        <member name="F:log4net.Fakes.StubILog.IsDebugEnabledGet">
            <summary>Establecer el stub de ILog.get_IsDebugEnabled()</summary>
        </member>
        <member name="P:log4net.Fakes.StubILog.log4net#ILog#IsErrorEnabled">
            <summary>Establecer el stub de ILog.get_IsErrorEnabled()</summary>
        </member>
        <member name="F:log4net.Fakes.StubILog.IsErrorEnabledGet">
            <summary>Establecer el stub de ILog.get_IsErrorEnabled()</summary>
        </member>
        <member name="P:log4net.Fakes.StubILog.log4net#ILog#IsFatalEnabled">
            <summary>Establecer el stub de ILog.get_IsFatalEnabled()</summary>
        </member>
        <member name="F:log4net.Fakes.StubILog.IsFatalEnabledGet">
            <summary>Establecer el stub de ILog.get_IsFatalEnabled()</summary>
        </member>
        <member name="P:log4net.Fakes.StubILog.log4net#ILog#IsInfoEnabled">
            <summary>Establecer el stub de ILog.get_IsInfoEnabled()</summary>
        </member>
        <member name="F:log4net.Fakes.StubILog.IsInfoEnabledGet">
            <summary>Establecer el stub de ILog.get_IsInfoEnabled()</summary>
        </member>
        <member name="P:log4net.Fakes.StubILog.log4net#ILog#IsWarnEnabled">
            <summary>Establecer el stub de ILog.get_IsWarnEnabled()</summary>
        </member>
        <member name="F:log4net.Fakes.StubILog.IsWarnEnabledGet">
            <summary>Establecer el stub de ILog.get_IsWarnEnabled()</summary>
        </member>
        <member name="P:log4net.Fakes.StubILog.log4net#Core#ILoggerWrapper#Logger">
            <summary>Establecer el stub de ILoggerWrapper.get_Logger()</summary>
        </member>
        <member name="F:log4net.Fakes.StubILog.LoggerGet">
            <summary>Establecer el stub de ILoggerWrapper.get_Logger()</summary>
        </member>
        <member name="F:log4net.Fakes.StubILog.WarnFormatIFormatProviderStringObjectArray">
            <summary>Establecer el stub de ILog.WarnFormat(IFormatProvider provider, String format, Object[] args)</summary>
        </member>
        <member name="F:log4net.Fakes.StubILog.WarnFormatStringObject">
            <summary>Establecer el stub de ILog.WarnFormat(String format, Object arg0)</summary>
        </member>
        <member name="F:log4net.Fakes.StubILog.WarnFormatStringObjectArray">
            <summary>Establecer el stub de ILog.WarnFormat(String format, Object[] args)</summary>
        </member>
        <member name="F:log4net.Fakes.StubILog.WarnFormatStringObjectObject">
            <summary>Establecer el stub de ILog.WarnFormat(String format, Object arg0, Object arg1)</summary>
        </member>
        <member name="F:log4net.Fakes.StubILog.WarnFormatStringObjectObjectObject">
            <summary>Establecer el stub de ILog.WarnFormat(String format, Object arg0, Object arg1, Object arg2)</summary>
        </member>
        <member name="F:log4net.Fakes.StubILog.WarnObject">
            <summary>Establecer el stub de ILog.Warn(Object message)</summary>
        </member>
        <member name="F:log4net.Fakes.StubILog.WarnObjectException">
            <summary>Establecer el stub de ILog.Warn(Object message, Exception exception)</summary>
        </member>
        <member name="M:log4net.Fakes.StubILog.log4net#ILog#Debug(System.Object)">
            <summary>Establecer el stub de ILog.Debug(Object message)</summary>
        </member>
        <member name="M:log4net.Fakes.StubILog.log4net#ILog#Debug(System.Object,System.Exception)">
            <summary>Establecer el stub de ILog.Debug(Object message, Exception exception)</summary>
        </member>
        <member name="M:log4net.Fakes.StubILog.log4net#ILog#DebugFormat(System.String,System.Object[])">
            <summary>Establecer el stub de ILog.DebugFormat(String format, Object[] args)</summary>
        </member>
        <member name="M:log4net.Fakes.StubILog.log4net#ILog#DebugFormat(System.String,System.Object)">
            <summary>Establecer el stub de ILog.DebugFormat(String format, Object arg0)</summary>
        </member>
        <member name="M:log4net.Fakes.StubILog.log4net#ILog#DebugFormat(System.IFormatProvider,System.String,System.Object[])">
            <summary>Establecer el stub de ILog.DebugFormat(IFormatProvider provider, String format, Object[] args)</summary>
        </member>
        <member name="M:log4net.Fakes.StubILog.log4net#ILog#DebugFormat(System.String,System.Object,System.Object)">
            <summary>Establecer el stub de ILog.DebugFormat(String format, Object arg0, Object arg1)</summary>
        </member>
        <member name="M:log4net.Fakes.StubILog.log4net#ILog#DebugFormat(System.String,System.Object,System.Object,System.Object)">
            <summary>Establecer el stub de ILog.DebugFormat(String format, Object arg0, Object arg1, Object arg2)</summary>
        </member>
        <member name="M:log4net.Fakes.StubILog.log4net#ILog#Error(System.Object)">
            <summary>Establecer el stub de ILog.Error(Object message)</summary>
        </member>
        <member name="M:log4net.Fakes.StubILog.log4net#ILog#Error(System.Object,System.Exception)">
            <summary>Establecer el stub de ILog.Error(Object message, Exception exception)</summary>
        </member>
        <member name="M:log4net.Fakes.StubILog.log4net#ILog#ErrorFormat(System.String,System.Object)">
            <summary>Establecer el stub de ILog.ErrorFormat(String format, Object arg0)</summary>
        </member>
        <member name="M:log4net.Fakes.StubILog.log4net#ILog#ErrorFormat(System.String,System.Object[])">
            <summary>Establecer el stub de ILog.ErrorFormat(String format, Object[] args)</summary>
        </member>
        <member name="M:log4net.Fakes.StubILog.log4net#ILog#ErrorFormat(System.IFormatProvider,System.String,System.Object[])">
            <summary>Establecer el stub de ILog.ErrorFormat(IFormatProvider provider, String format, Object[] args)</summary>
        </member>
        <member name="M:log4net.Fakes.StubILog.log4net#ILog#ErrorFormat(System.String,System.Object,System.Object)">
            <summary>Establecer el stub de ILog.ErrorFormat(String format, Object arg0, Object arg1)</summary>
        </member>
        <member name="M:log4net.Fakes.StubILog.log4net#ILog#ErrorFormat(System.String,System.Object,System.Object,System.Object)">
            <summary>Establecer el stub de ILog.ErrorFormat(String format, Object arg0, Object arg1, Object arg2)</summary>
        </member>
        <member name="M:log4net.Fakes.StubILog.log4net#ILog#Fatal(System.Object)">
            <summary>Establecer el stub de ILog.Fatal(Object message)</summary>
        </member>
        <member name="M:log4net.Fakes.StubILog.log4net#ILog#Fatal(System.Object,System.Exception)">
            <summary>Establecer el stub de ILog.Fatal(Object message, Exception exception)</summary>
        </member>
        <member name="M:log4net.Fakes.StubILog.log4net#ILog#FatalFormat(System.String,System.Object[])">
            <summary>Establecer el stub de ILog.FatalFormat(String format, Object[] args)</summary>
        </member>
        <member name="M:log4net.Fakes.StubILog.log4net#ILog#FatalFormat(System.String,System.Object)">
            <summary>Establecer el stub de ILog.FatalFormat(String format, Object arg0)</summary>
        </member>
        <member name="M:log4net.Fakes.StubILog.log4net#ILog#FatalFormat(System.IFormatProvider,System.String,System.Object[])">
            <summary>Establecer el stub de ILog.FatalFormat(IFormatProvider provider, String format, Object[] args)</summary>
        </member>
        <member name="M:log4net.Fakes.StubILog.log4net#ILog#FatalFormat(System.String,System.Object,System.Object)">
            <summary>Establecer el stub de ILog.FatalFormat(String format, Object arg0, Object arg1)</summary>
        </member>
        <member name="M:log4net.Fakes.StubILog.log4net#ILog#FatalFormat(System.String,System.Object,System.Object,System.Object)">
            <summary>Establecer el stub de ILog.FatalFormat(String format, Object arg0, Object arg1, Object arg2)</summary>
        </member>
        <member name="M:log4net.Fakes.StubILog.log4net#ILog#Info(System.Object)">
            <summary>Establecer el stub de ILog.Info(Object message)</summary>
        </member>
        <member name="M:log4net.Fakes.StubILog.log4net#ILog#Info(System.Object,System.Exception)">
            <summary>Establecer el stub de ILog.Info(Object message, Exception exception)</summary>
        </member>
        <member name="M:log4net.Fakes.StubILog.log4net#ILog#InfoFormat(System.String,System.Object[])">
            <summary>Establecer el stub de ILog.InfoFormat(String format, Object[] args)</summary>
        </member>
        <member name="M:log4net.Fakes.StubILog.log4net#ILog#InfoFormat(System.String,System.Object)">
            <summary>Establecer el stub de ILog.InfoFormat(String format, Object arg0)</summary>
        </member>
        <member name="M:log4net.Fakes.StubILog.log4net#ILog#InfoFormat(System.IFormatProvider,System.String,System.Object[])">
            <summary>Establecer el stub de ILog.InfoFormat(IFormatProvider provider, String format, Object[] args)</summary>
        </member>
        <member name="M:log4net.Fakes.StubILog.log4net#ILog#InfoFormat(System.String,System.Object,System.Object)">
            <summary>Establecer el stub de ILog.InfoFormat(String format, Object arg0, Object arg1)</summary>
        </member>
        <member name="M:log4net.Fakes.StubILog.log4net#ILog#InfoFormat(System.String,System.Object,System.Object,System.Object)">
            <summary>Establecer el stub de ILog.InfoFormat(String format, Object arg0, Object arg1, Object arg2)</summary>
        </member>
        <member name="M:log4net.Fakes.StubILog.log4net#ILog#Warn(System.Object)">
            <summary>Establecer el stub de ILog.Warn(Object message)</summary>
        </member>
        <member name="M:log4net.Fakes.StubILog.log4net#ILog#Warn(System.Object,System.Exception)">
            <summary>Establecer el stub de ILog.Warn(Object message, Exception exception)</summary>
        </member>
        <member name="M:log4net.Fakes.StubILog.log4net#ILog#WarnFormat(System.String,System.Object[])">
            <summary>Establecer el stub de ILog.WarnFormat(String format, Object[] args)</summary>
        </member>
        <member name="M:log4net.Fakes.StubILog.log4net#ILog#WarnFormat(System.String,System.Object)">
            <summary>Establecer el stub de ILog.WarnFormat(String format, Object arg0)</summary>
        </member>
        <member name="M:log4net.Fakes.StubILog.log4net#ILog#WarnFormat(System.IFormatProvider,System.String,System.Object[])">
            <summary>Establecer el stub de ILog.WarnFormat(IFormatProvider provider, String format, Object[] args)</summary>
        </member>
        <member name="M:log4net.Fakes.StubILog.log4net#ILog#WarnFormat(System.String,System.Object,System.Object)">
            <summary>Establecer el stub de ILog.WarnFormat(String format, Object arg0, Object arg1)</summary>
        </member>
        <member name="M:log4net.Fakes.StubILog.log4net#ILog#WarnFormat(System.String,System.Object,System.Object,System.Object)">
            <summary>Establecer el stub de ILog.WarnFormat(String format, Object arg0, Object arg1, Object arg2)</summary>
        </member>
        <member name="T:log4net.Filter.Fakes.ShimDenyAllFilter">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Filter.DenyAllFilter</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimDenyAllFilter.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimDenyAllFilter.#ctor(log4net.Filter.DenyAllFilter)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Filter.Fakes.ShimDenyAllFilter.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimDenyAllFilter.AllInstances.DecideLoggingEvent">
            <summary>Establecer el shim de DenyAllFilter.Decide(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimDenyAllFilter.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimDenyAllFilter.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimDenyAllFilter.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimDenyAllFilter.Bind(log4net.Core.IOptionHandler)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimDenyAllFilter.Bind(log4net.Filter.IFilter)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimDenyAllFilter.Constructor">
            <summary>Establecer el shim de DenyAllFilter.DenyAllFilter()</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimDenyAllFilter.DecideLoggingEvent">
            <summary>Establecer el shim de DenyAllFilter.Decide(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="T:log4net.Filter.Fakes.ShimFilterSkeleton">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Filter.FilterSkeleton</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimFilterSkeleton.#ctor(log4net.Filter.FilterSkeleton)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimFilterSkeleton.ActivateOptions">
            <summary>Establecer el shim de FilterSkeleton.ActivateOptions()</summary>
        </member>
        <member name="T:log4net.Filter.Fakes.ShimFilterSkeleton.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimFilterSkeleton.AllInstances.ActivateOptions">
            <summary>Establecer el shim de FilterSkeleton.ActivateOptions()</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimFilterSkeleton.AllInstances.NextGet">
            <summary>Establecer el shim de FilterSkeleton.get_Next()</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimFilterSkeleton.AllInstances.NextSetIFilter">
            <summary>Establecer el shim de FilterSkeleton.set_Next(IFilter value)</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimFilterSkeleton.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimFilterSkeleton.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimFilterSkeleton.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimFilterSkeleton.Bind(log4net.Core.IOptionHandler)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimFilterSkeleton.Bind(log4net.Filter.IFilter)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimFilterSkeleton.Constructor">
            <summary>Establecer el shim de FilterSkeleton.FilterSkeleton()</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimFilterSkeleton.NextGet">
            <summary>Establecer el shim de FilterSkeleton.get_Next()</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimFilterSkeleton.NextSetIFilter">
            <summary>Establecer el shim de FilterSkeleton.set_Next(IFilter value)</summary>
        </member>
        <member name="T:log4net.Filter.Fakes.ShimLevelMatchFilter">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Filter.LevelMatchFilter</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimLevelMatchFilter.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimLevelMatchFilter.#ctor(log4net.Filter.LevelMatchFilter)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimLevelMatchFilter.AcceptOnMatchGet">
            <summary>Establecer el shim de LevelMatchFilter.get_AcceptOnMatch()</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimLevelMatchFilter.AcceptOnMatchSetBoolean">
            <summary>Establecer el shim de LevelMatchFilter.set_AcceptOnMatch(Boolean value)</summary>
        </member>
        <member name="T:log4net.Filter.Fakes.ShimLevelMatchFilter.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimLevelMatchFilter.AllInstances.AcceptOnMatchGet">
            <summary>Establecer el shim de LevelMatchFilter.get_AcceptOnMatch()</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimLevelMatchFilter.AllInstances.AcceptOnMatchSetBoolean">
            <summary>Establecer el shim de LevelMatchFilter.set_AcceptOnMatch(Boolean value)</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimLevelMatchFilter.AllInstances.DecideLoggingEvent">
            <summary>Establecer el shim de LevelMatchFilter.Decide(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimLevelMatchFilter.AllInstances.LevelToMatchGet">
            <summary>Establecer el shim de LevelMatchFilter.get_LevelToMatch()</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimLevelMatchFilter.AllInstances.LevelToMatchSetLevel">
            <summary>Establecer el shim de LevelMatchFilter.set_LevelToMatch(Level value)</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimLevelMatchFilter.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimLevelMatchFilter.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimLevelMatchFilter.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimLevelMatchFilter.Bind(log4net.Core.IOptionHandler)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimLevelMatchFilter.Bind(log4net.Filter.IFilter)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimLevelMatchFilter.Constructor">
            <summary>Establecer el shim de LevelMatchFilter.LevelMatchFilter()</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimLevelMatchFilter.DecideLoggingEvent">
            <summary>Establecer el shim de LevelMatchFilter.Decide(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimLevelMatchFilter.LevelToMatchGet">
            <summary>Establecer el shim de LevelMatchFilter.get_LevelToMatch()</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimLevelMatchFilter.LevelToMatchSetLevel">
            <summary>Establecer el shim de LevelMatchFilter.set_LevelToMatch(Level value)</summary>
        </member>
        <member name="T:log4net.Filter.Fakes.ShimLevelRangeFilter">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Filter.LevelRangeFilter</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimLevelRangeFilter.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimLevelRangeFilter.#ctor(log4net.Filter.LevelRangeFilter)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimLevelRangeFilter.AcceptOnMatchGet">
            <summary>Establecer el shim de LevelRangeFilter.get_AcceptOnMatch()</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimLevelRangeFilter.AcceptOnMatchSetBoolean">
            <summary>Establecer el shim de LevelRangeFilter.set_AcceptOnMatch(Boolean value)</summary>
        </member>
        <member name="T:log4net.Filter.Fakes.ShimLevelRangeFilter.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimLevelRangeFilter.AllInstances.AcceptOnMatchGet">
            <summary>Establecer el shim de LevelRangeFilter.get_AcceptOnMatch()</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimLevelRangeFilter.AllInstances.AcceptOnMatchSetBoolean">
            <summary>Establecer el shim de LevelRangeFilter.set_AcceptOnMatch(Boolean value)</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimLevelRangeFilter.AllInstances.DecideLoggingEvent">
            <summary>Establecer el shim de LevelRangeFilter.Decide(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimLevelRangeFilter.AllInstances.LevelMaxGet">
            <summary>Establecer el shim de LevelRangeFilter.get_LevelMax()</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimLevelRangeFilter.AllInstances.LevelMaxSetLevel">
            <summary>Establecer el shim de LevelRangeFilter.set_LevelMax(Level value)</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimLevelRangeFilter.AllInstances.LevelMinGet">
            <summary>Establecer el shim de LevelRangeFilter.get_LevelMin()</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimLevelRangeFilter.AllInstances.LevelMinSetLevel">
            <summary>Establecer el shim de LevelRangeFilter.set_LevelMin(Level value)</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimLevelRangeFilter.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimLevelRangeFilter.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimLevelRangeFilter.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimLevelRangeFilter.Bind(log4net.Core.IOptionHandler)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimLevelRangeFilter.Bind(log4net.Filter.IFilter)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimLevelRangeFilter.Constructor">
            <summary>Establecer el shim de LevelRangeFilter.LevelRangeFilter()</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimLevelRangeFilter.DecideLoggingEvent">
            <summary>Establecer el shim de LevelRangeFilter.Decide(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimLevelRangeFilter.LevelMaxGet">
            <summary>Establecer el shim de LevelRangeFilter.get_LevelMax()</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimLevelRangeFilter.LevelMaxSetLevel">
            <summary>Establecer el shim de LevelRangeFilter.set_LevelMax(Level value)</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimLevelRangeFilter.LevelMinGet">
            <summary>Establecer el shim de LevelRangeFilter.get_LevelMin()</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimLevelRangeFilter.LevelMinSetLevel">
            <summary>Establecer el shim de LevelRangeFilter.set_LevelMin(Level value)</summary>
        </member>
        <member name="T:log4net.Filter.Fakes.ShimLoggerMatchFilter">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Filter.LoggerMatchFilter</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimLoggerMatchFilter.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimLoggerMatchFilter.#ctor(log4net.Filter.LoggerMatchFilter)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimLoggerMatchFilter.AcceptOnMatchGet">
            <summary>Establecer el shim de LoggerMatchFilter.get_AcceptOnMatch()</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimLoggerMatchFilter.AcceptOnMatchSetBoolean">
            <summary>Establecer el shim de LoggerMatchFilter.set_AcceptOnMatch(Boolean value)</summary>
        </member>
        <member name="T:log4net.Filter.Fakes.ShimLoggerMatchFilter.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimLoggerMatchFilter.AllInstances.AcceptOnMatchGet">
            <summary>Establecer el shim de LoggerMatchFilter.get_AcceptOnMatch()</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimLoggerMatchFilter.AllInstances.AcceptOnMatchSetBoolean">
            <summary>Establecer el shim de LoggerMatchFilter.set_AcceptOnMatch(Boolean value)</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimLoggerMatchFilter.AllInstances.DecideLoggingEvent">
            <summary>Establecer el shim de LoggerMatchFilter.Decide(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimLoggerMatchFilter.AllInstances.LoggerToMatchGet">
            <summary>Establecer el shim de LoggerMatchFilter.get_LoggerToMatch()</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimLoggerMatchFilter.AllInstances.LoggerToMatchSetString">
            <summary>Establecer el shim de LoggerMatchFilter.set_LoggerToMatch(String value)</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimLoggerMatchFilter.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimLoggerMatchFilter.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimLoggerMatchFilter.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimLoggerMatchFilter.Bind(log4net.Core.IOptionHandler)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimLoggerMatchFilter.Bind(log4net.Filter.IFilter)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimLoggerMatchFilter.Constructor">
            <summary>Establecer el shim de LoggerMatchFilter.LoggerMatchFilter()</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimLoggerMatchFilter.DecideLoggingEvent">
            <summary>Establecer el shim de LoggerMatchFilter.Decide(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimLoggerMatchFilter.LoggerToMatchGet">
            <summary>Establecer el shim de LoggerMatchFilter.get_LoggerToMatch()</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimLoggerMatchFilter.LoggerToMatchSetString">
            <summary>Establecer el shim de LoggerMatchFilter.set_LoggerToMatch(String value)</summary>
        </member>
        <member name="T:log4net.Filter.Fakes.ShimMdcFilter">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Filter.MdcFilter</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimMdcFilter.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimMdcFilter.#ctor(log4net.Filter.MdcFilter)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Filter.Fakes.ShimMdcFilter.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimMdcFilter.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimMdcFilter.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimMdcFilter.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimMdcFilter.Bind(log4net.Core.IOptionHandler)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimMdcFilter.Bind(log4net.Filter.IFilter)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimMdcFilter.Constructor">
            <summary>Establecer el shim de MdcFilter.MdcFilter()</summary>
        </member>
        <member name="T:log4net.Filter.Fakes.ShimNdcFilter">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Filter.NdcFilter</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimNdcFilter.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimNdcFilter.#ctor(log4net.Filter.NdcFilter)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Filter.Fakes.ShimNdcFilter.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimNdcFilter.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimNdcFilter.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimNdcFilter.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimNdcFilter.Bind(log4net.Core.IOptionHandler)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimNdcFilter.Bind(log4net.Filter.IFilter)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimNdcFilter.Constructor">
            <summary>Establecer el shim de NdcFilter.NdcFilter()</summary>
        </member>
        <member name="T:log4net.Filter.Fakes.ShimPropertyFilter">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Filter.PropertyFilter</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimPropertyFilter.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimPropertyFilter.#ctor(log4net.Filter.PropertyFilter)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Filter.Fakes.ShimPropertyFilter.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimPropertyFilter.AllInstances.DecideLoggingEvent">
            <summary>Establecer el shim de PropertyFilter.Decide(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimPropertyFilter.AllInstances.KeyGet">
            <summary>Establecer el shim de PropertyFilter.get_Key()</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimPropertyFilter.AllInstances.KeySetString">
            <summary>Establecer el shim de PropertyFilter.set_Key(String value)</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimPropertyFilter.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimPropertyFilter.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimPropertyFilter.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimPropertyFilter.Bind(log4net.Core.IOptionHandler)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimPropertyFilter.Bind(log4net.Filter.IFilter)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimPropertyFilter.Constructor">
            <summary>Establecer el shim de PropertyFilter.PropertyFilter()</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimPropertyFilter.DecideLoggingEvent">
            <summary>Establecer el shim de PropertyFilter.Decide(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimPropertyFilter.KeyGet">
            <summary>Establecer el shim de PropertyFilter.get_Key()</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimPropertyFilter.KeySetString">
            <summary>Establecer el shim de PropertyFilter.set_Key(String value)</summary>
        </member>
        <member name="T:log4net.Filter.Fakes.ShimStringMatchFilter">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Filter.StringMatchFilter</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimStringMatchFilter.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimStringMatchFilter.#ctor(log4net.Filter.StringMatchFilter)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimStringMatchFilter.AcceptOnMatchGet">
            <summary>Establecer el shim de StringMatchFilter.get_AcceptOnMatch()</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimStringMatchFilter.AcceptOnMatchSetBoolean">
            <summary>Establecer el shim de StringMatchFilter.set_AcceptOnMatch(Boolean value)</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimStringMatchFilter.ActivateOptions">
            <summary>Establecer el shim de StringMatchFilter.ActivateOptions()</summary>
        </member>
        <member name="T:log4net.Filter.Fakes.ShimStringMatchFilter.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimStringMatchFilter.AllInstances.AcceptOnMatchGet">
            <summary>Establecer el shim de StringMatchFilter.get_AcceptOnMatch()</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimStringMatchFilter.AllInstances.AcceptOnMatchSetBoolean">
            <summary>Establecer el shim de StringMatchFilter.set_AcceptOnMatch(Boolean value)</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimStringMatchFilter.AllInstances.ActivateOptions">
            <summary>Establecer el shim de StringMatchFilter.ActivateOptions()</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimStringMatchFilter.AllInstances.DecideLoggingEvent">
            <summary>Establecer el shim de StringMatchFilter.Decide(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimStringMatchFilter.AllInstances.RegexToMatchGet">
            <summary>Establecer el shim de StringMatchFilter.get_RegexToMatch()</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimStringMatchFilter.AllInstances.RegexToMatchSetString">
            <summary>Establecer el shim de StringMatchFilter.set_RegexToMatch(String value)</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimStringMatchFilter.AllInstances.StringToMatchGet">
            <summary>Establecer el shim de StringMatchFilter.get_StringToMatch()</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimStringMatchFilter.AllInstances.StringToMatchSetString">
            <summary>Establecer el shim de StringMatchFilter.set_StringToMatch(String value)</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimStringMatchFilter.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimStringMatchFilter.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimStringMatchFilter.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimStringMatchFilter.Bind(log4net.Core.IOptionHandler)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.ShimStringMatchFilter.Bind(log4net.Filter.IFilter)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimStringMatchFilter.Constructor">
            <summary>Establecer el shim de StringMatchFilter.StringMatchFilter()</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimStringMatchFilter.DecideLoggingEvent">
            <summary>Establecer el shim de StringMatchFilter.Decide(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimStringMatchFilter.RegexToMatchGet">
            <summary>Establecer el shim de StringMatchFilter.get_RegexToMatch()</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimStringMatchFilter.RegexToMatchSetString">
            <summary>Establecer el shim de StringMatchFilter.set_RegexToMatch(String value)</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimStringMatchFilter.StringToMatchGet">
            <summary>Establecer el shim de StringMatchFilter.get_StringToMatch()</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.ShimStringMatchFilter.StringToMatchSetString">
            <summary>Establecer el shim de StringMatchFilter.set_StringToMatch(String value)</summary>
        </member>
        <member name="T:log4net.Filter.Fakes.StubFilterSkeleton">
            <summary>Tipo stub de log4net.Filter.FilterSkeleton</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.StubFilterSkeleton.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.StubFilterSkeleton.ActivateOptions">
            <summary>Establecer el stub de FilterSkeleton.ActivateOptions()</summary>
        </member>
        <member name="F:log4net.Filter.Fakes.StubFilterSkeleton.ActivateOptions01">
            <summary>Establecer el stub de FilterSkeleton.ActivateOptions()</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.StubFilterSkeleton.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.StubFilterSkeleton.Decide(log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de FilterSkeleton.Decide(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Filter.Fakes.StubFilterSkeleton.DecideLoggingEvent">
            <summary>Establecer el stub de FilterSkeleton.Decide(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.StubFilterSkeleton.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubFilterSkeleton</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.StubFilterSkeleton.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.StubFilterSkeleton.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:log4net.Filter.Fakes.StubIFilter">
            <summary>Tipo stub de log4net.Filter.IFilter</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.StubIFilter.#ctor">
            <summary>Inicializa una nueva instancia de type StubIFilter</summary>
        </member>
        <member name="F:log4net.Filter.Fakes.StubIFilter.ActivateOptions">
            <summary>Establecer el stub de IOptionHandler.ActivateOptions()</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.StubIFilter.AttachBackingFieldToNext">
            <summary>Asocia delegados para emular StubIFilter.Next como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="F:log4net.Filter.Fakes.StubIFilter.DecideLoggingEvent">
            <summary>Establecer el stub de IFilter.Decide(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.StubIFilter.log4net#Filter#IFilter#Next">
            <summary>Establecer el stub de IFilter.get_Next()</summary>
        </member>
        <member name="F:log4net.Filter.Fakes.StubIFilter.NextGet">
            <summary>Establecer el stub de IFilter.get_Next()</summary>
        </member>
        <member name="F:log4net.Filter.Fakes.StubIFilter.NextSetIFilter">
            <summary>Establecer el stub de IFilter.set_Next(IFilter value)</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.StubIFilter.log4net#Core#IOptionHandler#ActivateOptions">
            <summary>Establecer el stub de IOptionHandler.ActivateOptions()</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.StubIFilter.log4net#Filter#IFilter#Decide(log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de IFilter.Decide(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="T:log4net.Filter.Fakes.StubLevelMatchFilter">
            <summary>Tipo stub de log4net.Filter.LevelMatchFilter</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.StubLevelMatchFilter.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.StubLevelMatchFilter.ActivateOptions">
            <summary>Establecer el stub de FilterSkeleton.ActivateOptions()</summary>
        </member>
        <member name="F:log4net.Filter.Fakes.StubLevelMatchFilter.ActivateOptions01">
            <summary>Establecer el stub de FilterSkeleton.ActivateOptions()</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.StubLevelMatchFilter.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.StubLevelMatchFilter.Decide(log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de LevelMatchFilter.Decide(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Filter.Fakes.StubLevelMatchFilter.DecideLoggingEvent">
            <summary>Establecer el stub de LevelMatchFilter.Decide(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.StubLevelMatchFilter.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubLevelMatchFilter</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.StubLevelMatchFilter.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.StubLevelMatchFilter.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:log4net.Filter.Fakes.StubLevelRangeFilter">
            <summary>Tipo stub de log4net.Filter.LevelRangeFilter</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.StubLevelRangeFilter.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.StubLevelRangeFilter.ActivateOptions">
            <summary>Establecer el stub de FilterSkeleton.ActivateOptions()</summary>
        </member>
        <member name="F:log4net.Filter.Fakes.StubLevelRangeFilter.ActivateOptions01">
            <summary>Establecer el stub de FilterSkeleton.ActivateOptions()</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.StubLevelRangeFilter.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.StubLevelRangeFilter.Decide(log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de LevelRangeFilter.Decide(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Filter.Fakes.StubLevelRangeFilter.DecideLoggingEvent">
            <summary>Establecer el stub de LevelRangeFilter.Decide(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.StubLevelRangeFilter.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubLevelRangeFilter</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.StubLevelRangeFilter.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.StubLevelRangeFilter.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:log4net.Filter.Fakes.StubLoggerMatchFilter">
            <summary>Tipo stub de log4net.Filter.LoggerMatchFilter</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.StubLoggerMatchFilter.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.StubLoggerMatchFilter.ActivateOptions">
            <summary>Establecer el stub de FilterSkeleton.ActivateOptions()</summary>
        </member>
        <member name="F:log4net.Filter.Fakes.StubLoggerMatchFilter.ActivateOptions01">
            <summary>Establecer el stub de FilterSkeleton.ActivateOptions()</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.StubLoggerMatchFilter.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.StubLoggerMatchFilter.Decide(log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de LoggerMatchFilter.Decide(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Filter.Fakes.StubLoggerMatchFilter.DecideLoggingEvent">
            <summary>Establecer el stub de LoggerMatchFilter.Decide(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.StubLoggerMatchFilter.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubLoggerMatchFilter</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.StubLoggerMatchFilter.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.StubLoggerMatchFilter.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:log4net.Filter.Fakes.StubMdcFilter">
            <summary>Tipo stub de log4net.Filter.MdcFilter</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.StubMdcFilter.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.StubMdcFilter.ActivateOptions">
            <summary>Establecer el stub de StringMatchFilter.ActivateOptions()</summary>
        </member>
        <member name="F:log4net.Filter.Fakes.StubMdcFilter.ActivateOptions01">
            <summary>Establecer el stub de StringMatchFilter.ActivateOptions()</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.StubMdcFilter.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.StubMdcFilter.Decide(log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de PropertyFilter.Decide(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Filter.Fakes.StubMdcFilter.DecideLoggingEvent">
            <summary>Establecer el stub de PropertyFilter.Decide(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.StubMdcFilter.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubMdcFilter</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.StubMdcFilter.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.StubMdcFilter.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:log4net.Filter.Fakes.StubNdcFilter">
            <summary>Tipo stub de log4net.Filter.NdcFilter</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.StubNdcFilter.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.StubNdcFilter.ActivateOptions">
            <summary>Establecer el stub de StringMatchFilter.ActivateOptions()</summary>
        </member>
        <member name="F:log4net.Filter.Fakes.StubNdcFilter.ActivateOptions01">
            <summary>Establecer el stub de StringMatchFilter.ActivateOptions()</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.StubNdcFilter.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.StubNdcFilter.Decide(log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de PropertyFilter.Decide(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Filter.Fakes.StubNdcFilter.DecideLoggingEvent">
            <summary>Establecer el stub de PropertyFilter.Decide(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.StubNdcFilter.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubNdcFilter</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.StubNdcFilter.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.StubNdcFilter.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:log4net.Filter.Fakes.StubPropertyFilter">
            <summary>Tipo stub de log4net.Filter.PropertyFilter</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.StubPropertyFilter.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.StubPropertyFilter.ActivateOptions">
            <summary>Establecer el stub de StringMatchFilter.ActivateOptions()</summary>
        </member>
        <member name="F:log4net.Filter.Fakes.StubPropertyFilter.ActivateOptions01">
            <summary>Establecer el stub de StringMatchFilter.ActivateOptions()</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.StubPropertyFilter.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.StubPropertyFilter.Decide(log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de PropertyFilter.Decide(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Filter.Fakes.StubPropertyFilter.DecideLoggingEvent">
            <summary>Establecer el stub de PropertyFilter.Decide(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.StubPropertyFilter.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubPropertyFilter</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.StubPropertyFilter.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.StubPropertyFilter.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:log4net.Filter.Fakes.StubStringMatchFilter">
            <summary>Tipo stub de log4net.Filter.StringMatchFilter</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.StubStringMatchFilter.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.StubStringMatchFilter.ActivateOptions">
            <summary>Establecer el stub de StringMatchFilter.ActivateOptions()</summary>
        </member>
        <member name="F:log4net.Filter.Fakes.StubStringMatchFilter.ActivateOptions01">
            <summary>Establecer el stub de StringMatchFilter.ActivateOptions()</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.StubStringMatchFilter.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.StubStringMatchFilter.Decide(log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de StringMatchFilter.Decide(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Filter.Fakes.StubStringMatchFilter.DecideLoggingEvent">
            <summary>Establecer el stub de StringMatchFilter.Decide(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="M:log4net.Filter.Fakes.StubStringMatchFilter.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubStringMatchFilter</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.StubStringMatchFilter.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Filter.Fakes.StubStringMatchFilter.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:log4net.Layout.Fakes.ShimDynamicPatternLayout">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Layout.DynamicPatternLayout</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimDynamicPatternLayout.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimDynamicPatternLayout.#ctor(log4net.Layout.DynamicPatternLayout)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Layout.Fakes.ShimDynamicPatternLayout.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimDynamicPatternLayout.AllInstances.FooterGet">
            <summary>Establecer el shim de DynamicPatternLayout.get_Footer()</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimDynamicPatternLayout.AllInstances.FooterSetString">
            <summary>Establecer el shim de DynamicPatternLayout.set_Footer(String value)</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimDynamicPatternLayout.AllInstances.HeaderGet">
            <summary>Establecer el shim de DynamicPatternLayout.get_Header()</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimDynamicPatternLayout.AllInstances.HeaderSetString">
            <summary>Establecer el shim de DynamicPatternLayout.set_Header(String value)</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimDynamicPatternLayout.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimDynamicPatternLayout.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimDynamicPatternLayout.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimDynamicPatternLayout.Bind(log4net.Core.IOptionHandler)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimDynamicPatternLayout.Bind(log4net.Layout.ILayout)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimDynamicPatternLayout.Constructor">
            <summary>Establecer el shim de DynamicPatternLayout.DynamicPatternLayout()</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimDynamicPatternLayout.ConstructorString">
            <summary>Establecer el shim de DynamicPatternLayout.DynamicPatternLayout(String pattern)</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimDynamicPatternLayout.FooterGet">
            <summary>Establecer el shim de DynamicPatternLayout.get_Footer()</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimDynamicPatternLayout.FooterSetString">
            <summary>Establecer el shim de DynamicPatternLayout.set_Footer(String value)</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimDynamicPatternLayout.HeaderGet">
            <summary>Establecer el shim de DynamicPatternLayout.get_Header()</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimDynamicPatternLayout.HeaderSetString">
            <summary>Establecer el shim de DynamicPatternLayout.set_Header(String value)</summary>
        </member>
        <member name="T:log4net.Layout.Fakes.ShimExceptionLayout">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Layout.ExceptionLayout</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimExceptionLayout.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimExceptionLayout.#ctor(log4net.Layout.ExceptionLayout)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimExceptionLayout.ActivateOptions">
            <summary>Establecer el shim de ExceptionLayout.ActivateOptions()</summary>
        </member>
        <member name="T:log4net.Layout.Fakes.ShimExceptionLayout.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimExceptionLayout.AllInstances.ActivateOptions">
            <summary>Establecer el shim de ExceptionLayout.ActivateOptions()</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimExceptionLayout.AllInstances.FormatTextWriterLoggingEvent">
            <summary>Establecer el shim de ExceptionLayout.Format(TextWriter writer, LoggingEvent loggingEvent)</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimExceptionLayout.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimExceptionLayout.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimExceptionLayout.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimExceptionLayout.Bind(log4net.Core.IOptionHandler)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimExceptionLayout.Bind(log4net.Layout.ILayout)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimExceptionLayout.Constructor">
            <summary>Establecer el shim de ExceptionLayout.ExceptionLayout()</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimExceptionLayout.FormatTextWriterLoggingEvent">
            <summary>Establecer el shim de ExceptionLayout.Format(TextWriter writer, LoggingEvent loggingEvent)</summary>
        </member>
        <member name="T:log4net.Layout.Fakes.ShimLayout2RawLayoutAdapter">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Layout.Layout2RawLayoutAdapter</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimLayout2RawLayoutAdapter.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimLayout2RawLayoutAdapter.#ctor(log4net.Layout.Layout2RawLayoutAdapter)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Layout.Fakes.ShimLayout2RawLayoutAdapter.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimLayout2RawLayoutAdapter.AllInstances.FormatLoggingEvent">
            <summary>Establecer el shim de Layout2RawLayoutAdapter.Format(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimLayout2RawLayoutAdapter.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimLayout2RawLayoutAdapter.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimLayout2RawLayoutAdapter.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimLayout2RawLayoutAdapter.Bind(log4net.Layout.IRawLayout)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimLayout2RawLayoutAdapter.ConstructorILayout">
            <summary>Establecer el shim de Layout2RawLayoutAdapter.Layout2RawLayoutAdapter(ILayout layout)</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimLayout2RawLayoutAdapter.FormatLoggingEvent">
            <summary>Establecer el shim de Layout2RawLayoutAdapter.Format(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="T:log4net.Layout.Fakes.ShimLayoutSkeleton">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Layout.LayoutSkeleton</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimLayoutSkeleton.#ctor(log4net.Layout.LayoutSkeleton)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Layout.Fakes.ShimLayoutSkeleton.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimLayoutSkeleton.AllInstances.ContentTypeGet">
            <summary>Establecer el shim de LayoutSkeleton.get_ContentType()</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimLayoutSkeleton.AllInstances.FooterGet">
            <summary>Establecer el shim de LayoutSkeleton.get_Footer()</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimLayoutSkeleton.AllInstances.FooterSetString">
            <summary>Establecer el shim de LayoutSkeleton.set_Footer(String value)</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimLayoutSkeleton.AllInstances.FormatLoggingEvent">
            <summary>Establecer el shim de LayoutSkeleton.Format(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimLayoutSkeleton.AllInstances.HeaderGet">
            <summary>Establecer el shim de LayoutSkeleton.get_Header()</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimLayoutSkeleton.AllInstances.HeaderSetString">
            <summary>Establecer el shim de LayoutSkeleton.set_Header(String value)</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimLayoutSkeleton.AllInstances.IgnoresExceptionGet">
            <summary>Establecer el shim de LayoutSkeleton.get_IgnoresException()</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimLayoutSkeleton.AllInstances.IgnoresExceptionSetBoolean">
            <summary>Establecer el shim de LayoutSkeleton.set_IgnoresException(Boolean value)</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimLayoutSkeleton.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimLayoutSkeleton.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimLayoutSkeleton.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimLayoutSkeleton.Bind(log4net.Core.IOptionHandler)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimLayoutSkeleton.Bind(log4net.Layout.ILayout)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimLayoutSkeleton.Constructor">
            <summary>Establecer el shim de LayoutSkeleton.LayoutSkeleton()</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimLayoutSkeleton.ContentTypeGet">
            <summary>Establecer el shim de LayoutSkeleton.get_ContentType()</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimLayoutSkeleton.FooterGet">
            <summary>Establecer el shim de LayoutSkeleton.get_Footer()</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimLayoutSkeleton.FooterSetString">
            <summary>Establecer el shim de LayoutSkeleton.set_Footer(String value)</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimLayoutSkeleton.FormatLoggingEvent">
            <summary>Establecer el shim de LayoutSkeleton.Format(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimLayoutSkeleton.HeaderGet">
            <summary>Establecer el shim de LayoutSkeleton.get_Header()</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimLayoutSkeleton.HeaderSetString">
            <summary>Establecer el shim de LayoutSkeleton.set_Header(String value)</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimLayoutSkeleton.IgnoresExceptionGet">
            <summary>Establecer el shim de LayoutSkeleton.get_IgnoresException()</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimLayoutSkeleton.IgnoresExceptionSetBoolean">
            <summary>Establecer el shim de LayoutSkeleton.set_IgnoresException(Boolean value)</summary>
        </member>
        <member name="T:log4net.Layout.Fakes.ShimPatternLayout">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Layout.PatternLayout</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimPatternLayout.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimPatternLayout.#ctor(log4net.Layout.PatternLayout)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimPatternLayout.ActivateOptions">
            <summary>Establecer el shim de PatternLayout.ActivateOptions()</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimPatternLayout.AddConverterConverterInfo">
            <summary>Establecer el shim de PatternLayout.AddConverter(ConverterInfo converterInfo)</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimPatternLayout.AddConverterStringType">
            <summary>Establecer el shim de PatternLayout.AddConverter(String name, Type type)</summary>
        </member>
        <member name="T:log4net.Layout.Fakes.ShimPatternLayout.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimPatternLayout.AllInstances.ActivateOptions">
            <summary>Establecer el shim de PatternLayout.ActivateOptions()</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimPatternLayout.AllInstances.AddConverterConverterInfo">
            <summary>Establecer el shim de PatternLayout.AddConverter(ConverterInfo converterInfo)</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimPatternLayout.AllInstances.AddConverterStringType">
            <summary>Establecer el shim de PatternLayout.AddConverter(String name, Type type)</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimPatternLayout.AllInstances.ConversionPatternGet">
            <summary>Establecer el shim de PatternLayout.get_ConversionPattern()</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimPatternLayout.AllInstances.ConversionPatternSetString">
            <summary>Establecer el shim de PatternLayout.set_ConversionPattern(String value)</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimPatternLayout.AllInstances.CreatePatternParserString">
            <summary>Establecer el shim de PatternLayout.CreatePatternParser(String pattern)</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimPatternLayout.AllInstances.FormatTextWriterLoggingEvent">
            <summary>Establecer el shim de PatternLayout.Format(TextWriter writer, LoggingEvent loggingEvent)</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimPatternLayout.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimPatternLayout.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimPatternLayout.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimPatternLayout.Bind(log4net.Core.IOptionHandler)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimPatternLayout.Bind(log4net.Layout.ILayout)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimPatternLayout.Constructor">
            <summary>Establecer el shim de PatternLayout.PatternLayout()</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimPatternLayout.ConstructorString">
            <summary>Establecer el shim de PatternLayout.PatternLayout(String pattern)</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimPatternLayout.ConversionPatternGet">
            <summary>Establecer el shim de PatternLayout.get_ConversionPattern()</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimPatternLayout.ConversionPatternSetString">
            <summary>Establecer el shim de PatternLayout.set_ConversionPattern(String value)</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimPatternLayout.CreatePatternParserString">
            <summary>Establecer el shim de PatternLayout.CreatePatternParser(String pattern)</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimPatternLayout.FormatTextWriterLoggingEvent">
            <summary>Establecer el shim de PatternLayout.Format(TextWriter writer, LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimPatternLayout.StaticConstructor">
            <summary>Establecer el shim de PatternLayout.PatternLayout()</summary>
        </member>
        <member name="T:log4net.Layout.Fakes.ShimRawLayoutConverter">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Layout.RawLayoutConverter</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimRawLayoutConverter.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimRawLayoutConverter.#ctor(log4net.Layout.RawLayoutConverter)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Layout.Fakes.ShimRawLayoutConverter.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimRawLayoutConverter.AllInstances.CanConvertFromType">
            <summary>Establecer el shim de RawLayoutConverter.CanConvertFrom(Type sourceType)</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimRawLayoutConverter.AllInstances.ConvertFromObject">
            <summary>Establecer el shim de RawLayoutConverter.ConvertFrom(Object source)</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimRawLayoutConverter.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimRawLayoutConverter.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimRawLayoutConverter.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimRawLayoutConverter.Bind(log4net.Util.TypeConverters.IConvertFrom)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimRawLayoutConverter.CanConvertFromType">
            <summary>Establecer el shim de RawLayoutConverter.CanConvertFrom(Type sourceType)</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimRawLayoutConverter.Constructor">
            <summary>Establecer el shim de RawLayoutConverter.RawLayoutConverter()</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimRawLayoutConverter.ConvertFromObject">
            <summary>Establecer el shim de RawLayoutConverter.ConvertFrom(Object source)</summary>
        </member>
        <member name="T:log4net.Layout.Fakes.ShimRawPropertyLayout">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Layout.RawPropertyLayout</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimRawPropertyLayout.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimRawPropertyLayout.#ctor(log4net.Layout.RawPropertyLayout)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Layout.Fakes.ShimRawPropertyLayout.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimRawPropertyLayout.AllInstances.FormatLoggingEvent">
            <summary>Establecer el shim de RawPropertyLayout.Format(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimRawPropertyLayout.AllInstances.KeyGet">
            <summary>Establecer el shim de RawPropertyLayout.get_Key()</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimRawPropertyLayout.AllInstances.KeySetString">
            <summary>Establecer el shim de RawPropertyLayout.set_Key(String value)</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimRawPropertyLayout.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimRawPropertyLayout.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimRawPropertyLayout.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimRawPropertyLayout.Bind(log4net.Layout.IRawLayout)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimRawPropertyLayout.Constructor">
            <summary>Establecer el shim de RawPropertyLayout.RawPropertyLayout()</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimRawPropertyLayout.FormatLoggingEvent">
            <summary>Establecer el shim de RawPropertyLayout.Format(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimRawPropertyLayout.KeyGet">
            <summary>Establecer el shim de RawPropertyLayout.get_Key()</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimRawPropertyLayout.KeySetString">
            <summary>Establecer el shim de RawPropertyLayout.set_Key(String value)</summary>
        </member>
        <member name="T:log4net.Layout.Fakes.ShimRawTimeStampLayout">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Layout.RawTimeStampLayout</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimRawTimeStampLayout.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimRawTimeStampLayout.#ctor(log4net.Layout.RawTimeStampLayout)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Layout.Fakes.ShimRawTimeStampLayout.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimRawTimeStampLayout.AllInstances.FormatLoggingEvent">
            <summary>Establecer el shim de RawTimeStampLayout.Format(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimRawTimeStampLayout.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimRawTimeStampLayout.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimRawTimeStampLayout.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimRawTimeStampLayout.Bind(log4net.Layout.IRawLayout)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimRawTimeStampLayout.Constructor">
            <summary>Establecer el shim de RawTimeStampLayout.RawTimeStampLayout()</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimRawTimeStampLayout.FormatLoggingEvent">
            <summary>Establecer el shim de RawTimeStampLayout.Format(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="T:log4net.Layout.Fakes.ShimRawUtcTimeStampLayout">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Layout.RawUtcTimeStampLayout</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimRawUtcTimeStampLayout.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimRawUtcTimeStampLayout.#ctor(log4net.Layout.RawUtcTimeStampLayout)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Layout.Fakes.ShimRawUtcTimeStampLayout.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimRawUtcTimeStampLayout.AllInstances.FormatLoggingEvent">
            <summary>Establecer el shim de RawUtcTimeStampLayout.Format(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimRawUtcTimeStampLayout.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimRawUtcTimeStampLayout.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimRawUtcTimeStampLayout.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimRawUtcTimeStampLayout.Bind(log4net.Layout.IRawLayout)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimRawUtcTimeStampLayout.Constructor">
            <summary>Establecer el shim de RawUtcTimeStampLayout.RawUtcTimeStampLayout()</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimRawUtcTimeStampLayout.FormatLoggingEvent">
            <summary>Establecer el shim de RawUtcTimeStampLayout.Format(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="T:log4net.Layout.Fakes.ShimSimpleLayout">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Layout.SimpleLayout</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimSimpleLayout.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimSimpleLayout.#ctor(log4net.Layout.SimpleLayout)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimSimpleLayout.ActivateOptions">
            <summary>Establecer el shim de SimpleLayout.ActivateOptions()</summary>
        </member>
        <member name="T:log4net.Layout.Fakes.ShimSimpleLayout.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimSimpleLayout.AllInstances.ActivateOptions">
            <summary>Establecer el shim de SimpleLayout.ActivateOptions()</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimSimpleLayout.AllInstances.FormatTextWriterLoggingEvent">
            <summary>Establecer el shim de SimpleLayout.Format(TextWriter writer, LoggingEvent loggingEvent)</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimSimpleLayout.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimSimpleLayout.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimSimpleLayout.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimSimpleLayout.Bind(log4net.Core.IOptionHandler)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimSimpleLayout.Bind(log4net.Layout.ILayout)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimSimpleLayout.Constructor">
            <summary>Establecer el shim de SimpleLayout.SimpleLayout()</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimSimpleLayout.FormatTextWriterLoggingEvent">
            <summary>Establecer el shim de SimpleLayout.Format(TextWriter writer, LoggingEvent loggingEvent)</summary>
        </member>
        <member name="T:log4net.Layout.Fakes.ShimXmlLayout">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Layout.XmlLayout</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimXmlLayout.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimXmlLayout.#ctor(log4net.Layout.XmlLayout)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayout.ActivateOptions">
            <summary>Establecer el shim de XmlLayout.ActivateOptions()</summary>
        </member>
        <member name="T:log4net.Layout.Fakes.ShimXmlLayout.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayout.AllInstances.ActivateOptions">
            <summary>Establecer el shim de XmlLayout.ActivateOptions()</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayout.AllInstances.Base64EncodeMessageGet">
            <summary>Establecer el shim de XmlLayout.get_Base64EncodeMessage()</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayout.AllInstances.Base64EncodeMessageSetBoolean">
            <summary>Establecer el shim de XmlLayout.set_Base64EncodeMessage(Boolean value)</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayout.AllInstances.Base64EncodePropertiesGet">
            <summary>Establecer el shim de XmlLayout.get_Base64EncodeProperties()</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayout.AllInstances.Base64EncodePropertiesSetBoolean">
            <summary>Establecer el shim de XmlLayout.set_Base64EncodeProperties(Boolean value)</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayout.AllInstances.FormatXmlXmlWriterLoggingEvent">
            <summary>Establecer el shim de XmlLayout.FormatXml(XmlWriter writer, LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayout.AllInstances.PrefixGet">
            <summary>Establecer el shim de XmlLayout.get_Prefix()</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayout.AllInstances.PrefixSetString">
            <summary>Establecer el shim de XmlLayout.set_Prefix(String value)</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayout.Base64EncodeMessageGet">
            <summary>Establecer el shim de XmlLayout.get_Base64EncodeMessage()</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayout.Base64EncodeMessageSetBoolean">
            <summary>Establecer el shim de XmlLayout.set_Base64EncodeMessage(Boolean value)</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayout.Base64EncodePropertiesGet">
            <summary>Establecer el shim de XmlLayout.get_Base64EncodeProperties()</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayout.Base64EncodePropertiesSetBoolean">
            <summary>Establecer el shim de XmlLayout.set_Base64EncodeProperties(Boolean value)</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimXmlLayout.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimXmlLayout.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayout.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimXmlLayout.Bind(log4net.Core.IOptionHandler)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimXmlLayout.Bind(log4net.Layout.ILayout)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayout.Constructor">
            <summary>Establecer el shim de XmlLayout.XmlLayout()</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayout.ConstructorBoolean">
            <summary>Establecer el shim de XmlLayout.XmlLayout(Boolean locationInfo)</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayout.FormatXmlXmlWriterLoggingEvent">
            <summary>Establecer el shim de XmlLayout.FormatXml(XmlWriter writer, LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayout.PrefixGet">
            <summary>Establecer el shim de XmlLayout.get_Prefix()</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayout.PrefixSetString">
            <summary>Establecer el shim de XmlLayout.set_Prefix(String value)</summary>
        </member>
        <member name="T:log4net.Layout.Fakes.ShimXmlLayoutBase">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Layout.XmlLayoutBase</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimXmlLayoutBase.#ctor(log4net.Layout.XmlLayoutBase)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayoutBase.ActivateOptions">
            <summary>Establecer el shim de XmlLayoutBase.ActivateOptions()</summary>
        </member>
        <member name="T:log4net.Layout.Fakes.ShimXmlLayoutBase.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayoutBase.AllInstances.ActivateOptions">
            <summary>Establecer el shim de XmlLayoutBase.ActivateOptions()</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayoutBase.AllInstances.ContentTypeGet">
            <summary>Establecer el shim de XmlLayoutBase.get_ContentType()</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayoutBase.AllInstances.FormatTextWriterLoggingEvent">
            <summary>Establecer el shim de XmlLayoutBase.Format(TextWriter writer, LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayoutBase.AllInstances.InvalidCharReplacementGet">
            <summary>Establecer el shim de XmlLayoutBase.get_InvalidCharReplacement()</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayoutBase.AllInstances.InvalidCharReplacementSetString">
            <summary>Establecer el shim de XmlLayoutBase.set_InvalidCharReplacement(String value)</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayoutBase.AllInstances.LocationInfoGet">
            <summary>Establecer el shim de XmlLayoutBase.get_LocationInfo()</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayoutBase.AllInstances.LocationInfoSetBoolean">
            <summary>Establecer el shim de XmlLayoutBase.set_LocationInfo(Boolean value)</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimXmlLayoutBase.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimXmlLayoutBase.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayoutBase.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimXmlLayoutBase.Bind(log4net.Core.IOptionHandler)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimXmlLayoutBase.Bind(log4net.Layout.ILayout)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayoutBase.Constructor">
            <summary>Establecer el shim de XmlLayoutBase.XmlLayoutBase()</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayoutBase.ConstructorBoolean">
            <summary>Establecer el shim de XmlLayoutBase.XmlLayoutBase(Boolean locationInfo)</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayoutBase.ContentTypeGet">
            <summary>Establecer el shim de XmlLayoutBase.get_ContentType()</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayoutBase.FormatTextWriterLoggingEvent">
            <summary>Establecer el shim de XmlLayoutBase.Format(TextWriter writer, LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayoutBase.InvalidCharReplacementGet">
            <summary>Establecer el shim de XmlLayoutBase.get_InvalidCharReplacement()</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayoutBase.InvalidCharReplacementSetString">
            <summary>Establecer el shim de XmlLayoutBase.set_InvalidCharReplacement(String value)</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayoutBase.LocationInfoGet">
            <summary>Establecer el shim de XmlLayoutBase.get_LocationInfo()</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayoutBase.LocationInfoSetBoolean">
            <summary>Establecer el shim de XmlLayoutBase.set_LocationInfo(Boolean value)</summary>
        </member>
        <member name="T:log4net.Layout.Fakes.ShimXmlLayoutSchemaLog4j">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Layout.XmlLayoutSchemaLog4j</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimXmlLayoutSchemaLog4j.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimXmlLayoutSchemaLog4j.#ctor(log4net.Layout.XmlLayoutSchemaLog4j)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Layout.Fakes.ShimXmlLayoutSchemaLog4j.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayoutSchemaLog4j.AllInstances.FormatXmlXmlWriterLoggingEvent">
            <summary>Establecer el shim de XmlLayoutSchemaLog4j.FormatXml(XmlWriter writer, LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayoutSchemaLog4j.AllInstances.VersionGet">
            <summary>Establecer el shim de XmlLayoutSchemaLog4j.get_Version()</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayoutSchemaLog4j.AllInstances.VersionSetString">
            <summary>Establecer el shim de XmlLayoutSchemaLog4j.set_Version(String value)</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimXmlLayoutSchemaLog4j.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimXmlLayoutSchemaLog4j.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayoutSchemaLog4j.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimXmlLayoutSchemaLog4j.Bind(log4net.Core.IOptionHandler)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.ShimXmlLayoutSchemaLog4j.Bind(log4net.Layout.ILayout)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayoutSchemaLog4j.Constructor">
            <summary>Establecer el shim de XmlLayoutSchemaLog4j.XmlLayoutSchemaLog4j()</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayoutSchemaLog4j.ConstructorBoolean">
            <summary>Establecer el shim de XmlLayoutSchemaLog4j.XmlLayoutSchemaLog4j(Boolean locationInfo)</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayoutSchemaLog4j.FormatXmlXmlWriterLoggingEvent">
            <summary>Establecer el shim de XmlLayoutSchemaLog4j.FormatXml(XmlWriter writer, LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayoutSchemaLog4j.StaticConstructor">
            <summary>Establecer el shim de XmlLayoutSchemaLog4j.XmlLayoutSchemaLog4j()</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayoutSchemaLog4j.VersionGet">
            <summary>Establecer el shim de XmlLayoutSchemaLog4j.get_Version()</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.ShimXmlLayoutSchemaLog4j.VersionSetString">
            <summary>Establecer el shim de XmlLayoutSchemaLog4j.set_Version(String value)</summary>
        </member>
        <member name="T:log4net.Layout.Fakes.StubDynamicPatternLayout">
            <summary>Tipo stub de log4net.Layout.DynamicPatternLayout</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubDynamicPatternLayout.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubDynamicPatternLayout.#ctor(System.String)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubDynamicPatternLayout.ActivateOptions">
            <summary>Establecer el stub de PatternLayout.ActivateOptions()</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubDynamicPatternLayout.ActivateOptions01">
            <summary>Establecer el stub de PatternLayout.ActivateOptions()</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubDynamicPatternLayout.AttachBackingFieldToFooter">
            <summary>Asocia delegados para emular StubDynamicPatternLayout.Footer como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubDynamicPatternLayout.AttachBackingFieldToHeader">
            <summary>Asocia delegados para emular StubDynamicPatternLayout.Header como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubDynamicPatternLayout.AttachBackingFieldToIgnoresException">
            <summary>Asocia delegados para emular StubDynamicPatternLayout.IgnoresException como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubDynamicPatternLayout.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubDynamicPatternLayout.ContentType">
            <summary>Establecer el stub de LayoutSkeleton.get_ContentType()</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubDynamicPatternLayout.ContentTypeGet">
            <summary>Establecer el stub de LayoutSkeleton.get_ContentType()</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubDynamicPatternLayout.CreatePatternParser(System.String)">
            <summary>Establecer el stub de PatternLayout.CreatePatternParser(String pattern)</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubDynamicPatternLayout.CreatePatternParserString">
            <summary>Establecer el stub de PatternLayout.CreatePatternParser(String pattern)</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubDynamicPatternLayout.Footer">
            <summary>Establecer el stub de DynamicPatternLayout.get_Footer()</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubDynamicPatternLayout.FooterGet">
            <summary>Establecer el stub de DynamicPatternLayout.get_Footer()</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubDynamicPatternLayout.FooterSetString">
            <summary>Establecer el stub de DynamicPatternLayout.set_Footer(String value)</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubDynamicPatternLayout.Format(System.IO.TextWriter,log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de PatternLayout.Format(TextWriter writer, LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubDynamicPatternLayout.FormatTextWriterLoggingEvent">
            <summary>Establecer el stub de PatternLayout.Format(TextWriter writer, LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubDynamicPatternLayout.Header">
            <summary>Establecer el stub de DynamicPatternLayout.get_Header()</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubDynamicPatternLayout.HeaderGet">
            <summary>Establecer el stub de DynamicPatternLayout.get_Header()</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubDynamicPatternLayout.HeaderSetString">
            <summary>Establecer el stub de DynamicPatternLayout.set_Header(String value)</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubDynamicPatternLayout.IgnoresException">
            <summary>Establecer el stub de LayoutSkeleton.get_IgnoresException()</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubDynamicPatternLayout.IgnoresExceptionGet">
            <summary>Establecer el stub de LayoutSkeleton.get_IgnoresException()</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubDynamicPatternLayout.IgnoresExceptionSetBoolean">
            <summary>Establecer el stub de LayoutSkeleton.set_IgnoresException(Boolean value)</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubDynamicPatternLayout.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubDynamicPatternLayout</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubDynamicPatternLayout.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubDynamicPatternLayout.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:log4net.Layout.Fakes.StubExceptionLayout">
            <summary>Tipo stub de log4net.Layout.ExceptionLayout</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubExceptionLayout.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubExceptionLayout.ActivateOptions">
            <summary>Establecer el stub de ExceptionLayout.ActivateOptions()</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubExceptionLayout.ActivateOptions01">
            <summary>Establecer el stub de ExceptionLayout.ActivateOptions()</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubExceptionLayout.AttachBackingFieldToFooter">
            <summary>Asocia delegados para emular StubExceptionLayout.Footer como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubExceptionLayout.AttachBackingFieldToHeader">
            <summary>Asocia delegados para emular StubExceptionLayout.Header como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubExceptionLayout.AttachBackingFieldToIgnoresException">
            <summary>Asocia delegados para emular StubExceptionLayout.IgnoresException como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubExceptionLayout.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubExceptionLayout.ContentType">
            <summary>Establecer el stub de LayoutSkeleton.get_ContentType()</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubExceptionLayout.ContentTypeGet">
            <summary>Establecer el stub de LayoutSkeleton.get_ContentType()</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubExceptionLayout.Footer">
            <summary>Establecer el stub de LayoutSkeleton.get_Footer()</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubExceptionLayout.FooterGet">
            <summary>Establecer el stub de LayoutSkeleton.get_Footer()</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubExceptionLayout.FooterSetString">
            <summary>Establecer el stub de LayoutSkeleton.set_Footer(String value)</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubExceptionLayout.Format(System.IO.TextWriter,log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de ExceptionLayout.Format(TextWriter writer, LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubExceptionLayout.FormatTextWriterLoggingEvent">
            <summary>Establecer el stub de ExceptionLayout.Format(TextWriter writer, LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubExceptionLayout.Header">
            <summary>Establecer el stub de LayoutSkeleton.get_Header()</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubExceptionLayout.HeaderGet">
            <summary>Establecer el stub de LayoutSkeleton.get_Header()</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubExceptionLayout.HeaderSetString">
            <summary>Establecer el stub de LayoutSkeleton.set_Header(String value)</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubExceptionLayout.IgnoresException">
            <summary>Establecer el stub de LayoutSkeleton.get_IgnoresException()</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubExceptionLayout.IgnoresExceptionGet">
            <summary>Establecer el stub de LayoutSkeleton.get_IgnoresException()</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubExceptionLayout.IgnoresExceptionSetBoolean">
            <summary>Establecer el stub de LayoutSkeleton.set_IgnoresException(Boolean value)</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubExceptionLayout.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubExceptionLayout</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubExceptionLayout.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubExceptionLayout.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:log4net.Layout.Fakes.StubILayout">
            <summary>Tipo stub de log4net.Layout.ILayout</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubILayout.#ctor">
            <summary>Inicializa una nueva instancia de type StubILayout</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubILayout.log4net#Layout#ILayout#ContentType">
            <summary>Establecer el stub de ILayout.get_ContentType()</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubILayout.ContentTypeGet">
            <summary>Establecer el stub de ILayout.get_ContentType()</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubILayout.log4net#Layout#ILayout#Footer">
            <summary>Establecer el stub de ILayout.get_Footer()</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubILayout.FooterGet">
            <summary>Establecer el stub de ILayout.get_Footer()</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubILayout.FormatTextWriterLoggingEvent">
            <summary>Establecer el stub de ILayout.Format(TextWriter writer, LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubILayout.log4net#Layout#ILayout#Header">
            <summary>Establecer el stub de ILayout.get_Header()</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubILayout.HeaderGet">
            <summary>Establecer el stub de ILayout.get_Header()</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubILayout.log4net#Layout#ILayout#IgnoresException">
            <summary>Establecer el stub de ILayout.get_IgnoresException()</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubILayout.IgnoresExceptionGet">
            <summary>Establecer el stub de ILayout.get_IgnoresException()</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubILayout.log4net#Layout#ILayout#Format(System.IO.TextWriter,log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de ILayout.Format(TextWriter writer, LoggingEvent loggingEvent)</summary>
        </member>
        <member name="T:log4net.Layout.Fakes.StubIRawLayout">
            <summary>Tipo stub de log4net.Layout.IRawLayout</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubIRawLayout.#ctor">
            <summary>Inicializa una nueva instancia de type StubIRawLayout</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubIRawLayout.FormatLoggingEvent">
            <summary>Establecer el stub de IRawLayout.Format(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubIRawLayout.log4net#Layout#IRawLayout#Format(log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de IRawLayout.Format(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="T:log4net.Layout.Fakes.StubLayout2RawLayoutAdapter">
            <summary>Tipo stub de log4net.Layout.Layout2RawLayoutAdapter</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubLayout2RawLayoutAdapter.#ctor(log4net.Layout.ILayout)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubLayout2RawLayoutAdapter.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubLayout2RawLayoutAdapter.Format(log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de Layout2RawLayoutAdapter.Format(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubLayout2RawLayoutAdapter.FormatLoggingEvent">
            <summary>Establecer el stub de Layout2RawLayoutAdapter.Format(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubLayout2RawLayoutAdapter.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubLayout2RawLayoutAdapter</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubLayout2RawLayoutAdapter.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubLayout2RawLayoutAdapter.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:log4net.Layout.Fakes.StubLayoutSkeleton">
            <summary>Tipo stub de log4net.Layout.LayoutSkeleton</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubLayoutSkeleton.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubLayoutSkeleton.ActivateOptions">
            <summary>Establecer el stub de LayoutSkeleton.ActivateOptions()</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubLayoutSkeleton.ActivateOptions01">
            <summary>Establecer el stub de LayoutSkeleton.ActivateOptions()</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubLayoutSkeleton.AttachBackingFieldToFooter">
            <summary>Asocia delegados para emular StubLayoutSkeleton.Footer como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubLayoutSkeleton.AttachBackingFieldToHeader">
            <summary>Asocia delegados para emular StubLayoutSkeleton.Header como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubLayoutSkeleton.AttachBackingFieldToIgnoresException">
            <summary>Asocia delegados para emular StubLayoutSkeleton.IgnoresException como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubLayoutSkeleton.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubLayoutSkeleton.ContentType">
            <summary>Establecer el stub de LayoutSkeleton.get_ContentType()</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubLayoutSkeleton.ContentTypeGet">
            <summary>Establecer el stub de LayoutSkeleton.get_ContentType()</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubLayoutSkeleton.Footer">
            <summary>Establecer el stub de LayoutSkeleton.get_Footer()</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubLayoutSkeleton.FooterGet">
            <summary>Establecer el stub de LayoutSkeleton.get_Footer()</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubLayoutSkeleton.FooterSetString">
            <summary>Establecer el stub de LayoutSkeleton.set_Footer(String value)</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubLayoutSkeleton.Format(System.IO.TextWriter,log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de LayoutSkeleton.Format(TextWriter writer, LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubLayoutSkeleton.FormatTextWriterLoggingEvent">
            <summary>Establecer el stub de LayoutSkeleton.Format(TextWriter writer, LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubLayoutSkeleton.Header">
            <summary>Establecer el stub de LayoutSkeleton.get_Header()</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubLayoutSkeleton.HeaderGet">
            <summary>Establecer el stub de LayoutSkeleton.get_Header()</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubLayoutSkeleton.HeaderSetString">
            <summary>Establecer el stub de LayoutSkeleton.set_Header(String value)</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubLayoutSkeleton.IgnoresException">
            <summary>Establecer el stub de LayoutSkeleton.get_IgnoresException()</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubLayoutSkeleton.IgnoresExceptionGet">
            <summary>Establecer el stub de LayoutSkeleton.get_IgnoresException()</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubLayoutSkeleton.IgnoresExceptionSetBoolean">
            <summary>Establecer el stub de LayoutSkeleton.set_IgnoresException(Boolean value)</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubLayoutSkeleton.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubLayoutSkeleton</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubLayoutSkeleton.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubLayoutSkeleton.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:log4net.Layout.Fakes.StubPatternLayout">
            <summary>Tipo stub de log4net.Layout.PatternLayout</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubPatternLayout.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubPatternLayout.#ctor(System.String)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubPatternLayout.ActivateOptions">
            <summary>Establecer el stub de PatternLayout.ActivateOptions()</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubPatternLayout.ActivateOptions01">
            <summary>Establecer el stub de PatternLayout.ActivateOptions()</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubPatternLayout.AttachBackingFieldToFooter">
            <summary>Asocia delegados para emular StubPatternLayout.Footer como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubPatternLayout.AttachBackingFieldToHeader">
            <summary>Asocia delegados para emular StubPatternLayout.Header como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubPatternLayout.AttachBackingFieldToIgnoresException">
            <summary>Asocia delegados para emular StubPatternLayout.IgnoresException como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubPatternLayout.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubPatternLayout.ContentType">
            <summary>Establecer el stub de LayoutSkeleton.get_ContentType()</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubPatternLayout.ContentTypeGet">
            <summary>Establecer el stub de LayoutSkeleton.get_ContentType()</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubPatternLayout.CreatePatternParser(System.String)">
            <summary>Establecer el stub de PatternLayout.CreatePatternParser(String pattern)</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubPatternLayout.CreatePatternParserString">
            <summary>Establecer el stub de PatternLayout.CreatePatternParser(String pattern)</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubPatternLayout.Footer">
            <summary>Establecer el stub de LayoutSkeleton.get_Footer()</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubPatternLayout.FooterGet">
            <summary>Establecer el stub de LayoutSkeleton.get_Footer()</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubPatternLayout.FooterSetString">
            <summary>Establecer el stub de LayoutSkeleton.set_Footer(String value)</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubPatternLayout.Format(System.IO.TextWriter,log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de PatternLayout.Format(TextWriter writer, LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubPatternLayout.FormatTextWriterLoggingEvent">
            <summary>Establecer el stub de PatternLayout.Format(TextWriter writer, LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubPatternLayout.Header">
            <summary>Establecer el stub de LayoutSkeleton.get_Header()</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubPatternLayout.HeaderGet">
            <summary>Establecer el stub de LayoutSkeleton.get_Header()</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubPatternLayout.HeaderSetString">
            <summary>Establecer el stub de LayoutSkeleton.set_Header(String value)</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubPatternLayout.IgnoresException">
            <summary>Establecer el stub de LayoutSkeleton.get_IgnoresException()</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubPatternLayout.IgnoresExceptionGet">
            <summary>Establecer el stub de LayoutSkeleton.get_IgnoresException()</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubPatternLayout.IgnoresExceptionSetBoolean">
            <summary>Establecer el stub de LayoutSkeleton.set_IgnoresException(Boolean value)</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubPatternLayout.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubPatternLayout</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubPatternLayout.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubPatternLayout.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:log4net.Layout.Fakes.StubRawLayoutConverter">
            <summary>Tipo stub de log4net.Layout.RawLayoutConverter</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubRawLayoutConverter.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubRawLayoutConverter.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubRawLayoutConverter.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubRawLayoutConverter</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubRawLayoutConverter.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubRawLayoutConverter.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:log4net.Layout.Fakes.StubRawPropertyLayout">
            <summary>Tipo stub de log4net.Layout.RawPropertyLayout</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubRawPropertyLayout.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubRawPropertyLayout.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubRawPropertyLayout.Format(log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de RawPropertyLayout.Format(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubRawPropertyLayout.FormatLoggingEvent">
            <summary>Establecer el stub de RawPropertyLayout.Format(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubRawPropertyLayout.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubRawPropertyLayout</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubRawPropertyLayout.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubRawPropertyLayout.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:log4net.Layout.Fakes.StubRawTimeStampLayout">
            <summary>Tipo stub de log4net.Layout.RawTimeStampLayout</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubRawTimeStampLayout.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubRawTimeStampLayout.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubRawTimeStampLayout.Format(log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de RawTimeStampLayout.Format(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubRawTimeStampLayout.FormatLoggingEvent">
            <summary>Establecer el stub de RawTimeStampLayout.Format(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubRawTimeStampLayout.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubRawTimeStampLayout</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubRawTimeStampLayout.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubRawTimeStampLayout.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:log4net.Layout.Fakes.StubRawUtcTimeStampLayout">
            <summary>Tipo stub de log4net.Layout.RawUtcTimeStampLayout</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubRawUtcTimeStampLayout.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubRawUtcTimeStampLayout.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubRawUtcTimeStampLayout.Format(log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de RawUtcTimeStampLayout.Format(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubRawUtcTimeStampLayout.FormatLoggingEvent">
            <summary>Establecer el stub de RawUtcTimeStampLayout.Format(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubRawUtcTimeStampLayout.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubRawUtcTimeStampLayout</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubRawUtcTimeStampLayout.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubRawUtcTimeStampLayout.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:log4net.Layout.Fakes.StubSimpleLayout">
            <summary>Tipo stub de log4net.Layout.SimpleLayout</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubSimpleLayout.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubSimpleLayout.ActivateOptions">
            <summary>Establecer el stub de SimpleLayout.ActivateOptions()</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubSimpleLayout.ActivateOptions01">
            <summary>Establecer el stub de SimpleLayout.ActivateOptions()</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubSimpleLayout.AttachBackingFieldToFooter">
            <summary>Asocia delegados para emular StubSimpleLayout.Footer como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubSimpleLayout.AttachBackingFieldToHeader">
            <summary>Asocia delegados para emular StubSimpleLayout.Header como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubSimpleLayout.AttachBackingFieldToIgnoresException">
            <summary>Asocia delegados para emular StubSimpleLayout.IgnoresException como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubSimpleLayout.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubSimpleLayout.ContentType">
            <summary>Establecer el stub de LayoutSkeleton.get_ContentType()</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubSimpleLayout.ContentTypeGet">
            <summary>Establecer el stub de LayoutSkeleton.get_ContentType()</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubSimpleLayout.Footer">
            <summary>Establecer el stub de LayoutSkeleton.get_Footer()</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubSimpleLayout.FooterGet">
            <summary>Establecer el stub de LayoutSkeleton.get_Footer()</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubSimpleLayout.FooterSetString">
            <summary>Establecer el stub de LayoutSkeleton.set_Footer(String value)</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubSimpleLayout.Format(System.IO.TextWriter,log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de SimpleLayout.Format(TextWriter writer, LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubSimpleLayout.FormatTextWriterLoggingEvent">
            <summary>Establecer el stub de SimpleLayout.Format(TextWriter writer, LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubSimpleLayout.Header">
            <summary>Establecer el stub de LayoutSkeleton.get_Header()</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubSimpleLayout.HeaderGet">
            <summary>Establecer el stub de LayoutSkeleton.get_Header()</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubSimpleLayout.HeaderSetString">
            <summary>Establecer el stub de LayoutSkeleton.set_Header(String value)</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubSimpleLayout.IgnoresException">
            <summary>Establecer el stub de LayoutSkeleton.get_IgnoresException()</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubSimpleLayout.IgnoresExceptionGet">
            <summary>Establecer el stub de LayoutSkeleton.get_IgnoresException()</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubSimpleLayout.IgnoresExceptionSetBoolean">
            <summary>Establecer el stub de LayoutSkeleton.set_IgnoresException(Boolean value)</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubSimpleLayout.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubSimpleLayout</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubSimpleLayout.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubSimpleLayout.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:log4net.Layout.Fakes.StubXmlLayout">
            <summary>Tipo stub de log4net.Layout.XmlLayout</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubXmlLayout.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubXmlLayout.#ctor(System.Boolean)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubXmlLayout.ActivateOptions">
            <summary>Establecer el stub de XmlLayout.ActivateOptions()</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubXmlLayout.ActivateOptions01">
            <summary>Establecer el stub de XmlLayout.ActivateOptions()</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubXmlLayout.AttachBackingFieldToFooter">
            <summary>Asocia delegados para emular StubXmlLayout.Footer como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubXmlLayout.AttachBackingFieldToHeader">
            <summary>Asocia delegados para emular StubXmlLayout.Header como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubXmlLayout.AttachBackingFieldToIgnoresException">
            <summary>Asocia delegados para emular StubXmlLayout.IgnoresException como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubXmlLayout.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubXmlLayout.ContentType">
            <summary>Establecer el stub de XmlLayoutBase.get_ContentType()</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubXmlLayout.ContentTypeGet">
            <summary>Establecer el stub de XmlLayoutBase.get_ContentType()</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubXmlLayout.Footer">
            <summary>Establecer el stub de LayoutSkeleton.get_Footer()</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubXmlLayout.FooterGet">
            <summary>Establecer el stub de LayoutSkeleton.get_Footer()</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubXmlLayout.FooterSetString">
            <summary>Establecer el stub de LayoutSkeleton.set_Footer(String value)</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubXmlLayout.Format(System.IO.TextWriter,log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de XmlLayoutBase.Format(TextWriter writer, LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubXmlLayout.FormatTextWriterLoggingEvent">
            <summary>Establecer el stub de XmlLayoutBase.Format(TextWriter writer, LoggingEvent loggingEvent)</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubXmlLayout.FormatXml(System.Xml.XmlWriter,log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de XmlLayout.FormatXml(XmlWriter writer, LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubXmlLayout.FormatXmlXmlWriterLoggingEvent">
            <summary>Establecer el stub de XmlLayout.FormatXml(XmlWriter writer, LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubXmlLayout.Header">
            <summary>Establecer el stub de LayoutSkeleton.get_Header()</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubXmlLayout.HeaderGet">
            <summary>Establecer el stub de LayoutSkeleton.get_Header()</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubXmlLayout.HeaderSetString">
            <summary>Establecer el stub de LayoutSkeleton.set_Header(String value)</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubXmlLayout.IgnoresException">
            <summary>Establecer el stub de LayoutSkeleton.get_IgnoresException()</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubXmlLayout.IgnoresExceptionGet">
            <summary>Establecer el stub de LayoutSkeleton.get_IgnoresException()</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubXmlLayout.IgnoresExceptionSetBoolean">
            <summary>Establecer el stub de LayoutSkeleton.set_IgnoresException(Boolean value)</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubXmlLayout.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubXmlLayout</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubXmlLayout.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubXmlLayout.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:log4net.Layout.Fakes.StubXmlLayoutBase">
            <summary>Tipo stub de log4net.Layout.XmlLayoutBase</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubXmlLayoutBase.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubXmlLayoutBase.#ctor(System.Boolean)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubXmlLayoutBase.ActivateOptions">
            <summary>Establecer el stub de XmlLayoutBase.ActivateOptions()</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubXmlLayoutBase.ActivateOptions01">
            <summary>Establecer el stub de XmlLayoutBase.ActivateOptions()</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubXmlLayoutBase.AttachBackingFieldToFooter">
            <summary>Asocia delegados para emular StubXmlLayoutBase.Footer como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubXmlLayoutBase.AttachBackingFieldToHeader">
            <summary>Asocia delegados para emular StubXmlLayoutBase.Header como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubXmlLayoutBase.AttachBackingFieldToIgnoresException">
            <summary>Asocia delegados para emular StubXmlLayoutBase.IgnoresException como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubXmlLayoutBase.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubXmlLayoutBase.ContentType">
            <summary>Establecer el stub de XmlLayoutBase.get_ContentType()</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubXmlLayoutBase.ContentTypeGet">
            <summary>Establecer el stub de XmlLayoutBase.get_ContentType()</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubXmlLayoutBase.Footer">
            <summary>Establecer el stub de LayoutSkeleton.get_Footer()</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubXmlLayoutBase.FooterGet">
            <summary>Establecer el stub de LayoutSkeleton.get_Footer()</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubXmlLayoutBase.FooterSetString">
            <summary>Establecer el stub de LayoutSkeleton.set_Footer(String value)</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubXmlLayoutBase.Format(System.IO.TextWriter,log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de XmlLayoutBase.Format(TextWriter writer, LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubXmlLayoutBase.FormatTextWriterLoggingEvent">
            <summary>Establecer el stub de XmlLayoutBase.Format(TextWriter writer, LoggingEvent loggingEvent)</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubXmlLayoutBase.FormatXml(System.Xml.XmlWriter,log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de XmlLayoutBase.FormatXml(XmlWriter writer, LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubXmlLayoutBase.FormatXmlXmlWriterLoggingEvent">
            <summary>Establecer el stub de XmlLayoutBase.FormatXml(XmlWriter writer, LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubXmlLayoutBase.Header">
            <summary>Establecer el stub de LayoutSkeleton.get_Header()</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubXmlLayoutBase.HeaderGet">
            <summary>Establecer el stub de LayoutSkeleton.get_Header()</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubXmlLayoutBase.HeaderSetString">
            <summary>Establecer el stub de LayoutSkeleton.set_Header(String value)</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubXmlLayoutBase.IgnoresException">
            <summary>Establecer el stub de LayoutSkeleton.get_IgnoresException()</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubXmlLayoutBase.IgnoresExceptionGet">
            <summary>Establecer el stub de LayoutSkeleton.get_IgnoresException()</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubXmlLayoutBase.IgnoresExceptionSetBoolean">
            <summary>Establecer el stub de LayoutSkeleton.set_IgnoresException(Boolean value)</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubXmlLayoutBase.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubXmlLayoutBase</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubXmlLayoutBase.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubXmlLayoutBase.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:log4net.Layout.Fakes.StubXmlLayoutSchemaLog4j">
            <summary>Tipo stub de log4net.Layout.XmlLayoutSchemaLog4j</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubXmlLayoutSchemaLog4j.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubXmlLayoutSchemaLog4j.#ctor(System.Boolean)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubXmlLayoutSchemaLog4j.ActivateOptions">
            <summary>Establecer el stub de XmlLayoutBase.ActivateOptions()</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubXmlLayoutSchemaLog4j.ActivateOptions01">
            <summary>Establecer el stub de XmlLayoutBase.ActivateOptions()</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubXmlLayoutSchemaLog4j.AttachBackingFieldToFooter">
            <summary>Asocia delegados para emular StubXmlLayoutSchemaLog4j.Footer como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubXmlLayoutSchemaLog4j.AttachBackingFieldToHeader">
            <summary>Asocia delegados para emular StubXmlLayoutSchemaLog4j.Header como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubXmlLayoutSchemaLog4j.AttachBackingFieldToIgnoresException">
            <summary>Asocia delegados para emular StubXmlLayoutSchemaLog4j.IgnoresException como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubXmlLayoutSchemaLog4j.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubXmlLayoutSchemaLog4j.ContentType">
            <summary>Establecer el stub de XmlLayoutBase.get_ContentType()</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubXmlLayoutSchemaLog4j.ContentTypeGet">
            <summary>Establecer el stub de XmlLayoutBase.get_ContentType()</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubXmlLayoutSchemaLog4j.Footer">
            <summary>Establecer el stub de LayoutSkeleton.get_Footer()</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubXmlLayoutSchemaLog4j.FooterGet">
            <summary>Establecer el stub de LayoutSkeleton.get_Footer()</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubXmlLayoutSchemaLog4j.FooterSetString">
            <summary>Establecer el stub de LayoutSkeleton.set_Footer(String value)</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubXmlLayoutSchemaLog4j.Format(System.IO.TextWriter,log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de XmlLayoutBase.Format(TextWriter writer, LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubXmlLayoutSchemaLog4j.FormatTextWriterLoggingEvent">
            <summary>Establecer el stub de XmlLayoutBase.Format(TextWriter writer, LoggingEvent loggingEvent)</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubXmlLayoutSchemaLog4j.FormatXml(System.Xml.XmlWriter,log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de XmlLayoutSchemaLog4j.FormatXml(XmlWriter writer, LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubXmlLayoutSchemaLog4j.FormatXmlXmlWriterLoggingEvent">
            <summary>Establecer el stub de XmlLayoutSchemaLog4j.FormatXml(XmlWriter writer, LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubXmlLayoutSchemaLog4j.Header">
            <summary>Establecer el stub de LayoutSkeleton.get_Header()</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubXmlLayoutSchemaLog4j.HeaderGet">
            <summary>Establecer el stub de LayoutSkeleton.get_Header()</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubXmlLayoutSchemaLog4j.HeaderSetString">
            <summary>Establecer el stub de LayoutSkeleton.set_Header(String value)</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubXmlLayoutSchemaLog4j.IgnoresException">
            <summary>Establecer el stub de LayoutSkeleton.get_IgnoresException()</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubXmlLayoutSchemaLog4j.IgnoresExceptionGet">
            <summary>Establecer el stub de LayoutSkeleton.get_IgnoresException()</summary>
        </member>
        <member name="F:log4net.Layout.Fakes.StubXmlLayoutSchemaLog4j.IgnoresExceptionSetBoolean">
            <summary>Establecer el stub de LayoutSkeleton.set_IgnoresException(Boolean value)</summary>
        </member>
        <member name="M:log4net.Layout.Fakes.StubXmlLayoutSchemaLog4j.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubXmlLayoutSchemaLog4j</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubXmlLayoutSchemaLog4j.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Layout.Fakes.StubXmlLayoutSchemaLog4j.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:log4net.Layout.Pattern.Fakes.ShimNamedPatternConverter">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Layout.Pattern.NamedPatternConverter</summary>
        </member>
        <member name="M:log4net.Layout.Pattern.Fakes.ShimNamedPatternConverter.#ctor(log4net.Layout.Pattern.NamedPatternConverter)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="P:log4net.Layout.Pattern.Fakes.ShimNamedPatternConverter.ActivateOptions">
            <summary>Establecer el shim de NamedPatternConverter.ActivateOptions()</summary>
        </member>
        <member name="T:log4net.Layout.Pattern.Fakes.ShimNamedPatternConverter.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Layout.Pattern.Fakes.ShimNamedPatternConverter.AllInstances.ActivateOptions">
            <summary>Establecer el shim de NamedPatternConverter.ActivateOptions()</summary>
        </member>
        <member name="P:log4net.Layout.Pattern.Fakes.ShimNamedPatternConverter.AllInstances.ConvertTextWriterLoggingEvent">
            <summary>Establecer el shim de NamedPatternConverter.Convert(TextWriter writer, LoggingEvent loggingEvent)</summary>
        </member>
        <member name="M:log4net.Layout.Pattern.Fakes.ShimNamedPatternConverter.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Layout.Pattern.Fakes.ShimNamedPatternConverter.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Layout.Pattern.Fakes.ShimNamedPatternConverter.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Layout.Pattern.Fakes.ShimNamedPatternConverter.Bind(log4net.Core.IOptionHandler)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Layout.Pattern.Fakes.ShimNamedPatternConverter.Constructor">
            <summary>Establecer el shim de NamedPatternConverter.NamedPatternConverter()</summary>
        </member>
        <member name="P:log4net.Layout.Pattern.Fakes.ShimNamedPatternConverter.ConvertTextWriterLoggingEvent">
            <summary>Establecer el shim de NamedPatternConverter.Convert(TextWriter writer, LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Layout.Pattern.Fakes.ShimNamedPatternConverter.StaticConstructor">
            <summary>Establecer el shim de NamedPatternConverter.NamedPatternConverter()</summary>
        </member>
        <member name="T:log4net.Layout.Pattern.Fakes.ShimPatternLayoutConverter">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Layout.Pattern.PatternLayoutConverter</summary>
        </member>
        <member name="M:log4net.Layout.Pattern.Fakes.ShimPatternLayoutConverter.#ctor(log4net.Layout.Pattern.PatternLayoutConverter)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Layout.Pattern.Fakes.ShimPatternLayoutConverter.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Layout.Pattern.Fakes.ShimPatternLayoutConverter.AllInstances.ConvertTextWriterObject">
            <summary>Establecer el shim de PatternLayoutConverter.Convert(TextWriter writer, Object state)</summary>
        </member>
        <member name="P:log4net.Layout.Pattern.Fakes.ShimPatternLayoutConverter.AllInstances.IgnoresExceptionGet">
            <summary>Establecer el shim de PatternLayoutConverter.get_IgnoresException()</summary>
        </member>
        <member name="P:log4net.Layout.Pattern.Fakes.ShimPatternLayoutConverter.AllInstances.IgnoresExceptionSetBoolean">
            <summary>Establecer el shim de PatternLayoutConverter.set_IgnoresException(Boolean value)</summary>
        </member>
        <member name="M:log4net.Layout.Pattern.Fakes.ShimPatternLayoutConverter.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Layout.Pattern.Fakes.ShimPatternLayoutConverter.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Layout.Pattern.Fakes.ShimPatternLayoutConverter.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Layout.Pattern.Fakes.ShimPatternLayoutConverter.Constructor">
            <summary>Establecer el shim de PatternLayoutConverter.PatternLayoutConverter()</summary>
        </member>
        <member name="P:log4net.Layout.Pattern.Fakes.ShimPatternLayoutConverter.ConvertTextWriterObject">
            <summary>Establecer el shim de PatternLayoutConverter.Convert(TextWriter writer, Object state)</summary>
        </member>
        <member name="P:log4net.Layout.Pattern.Fakes.ShimPatternLayoutConverter.IgnoresExceptionGet">
            <summary>Establecer el shim de PatternLayoutConverter.get_IgnoresException()</summary>
        </member>
        <member name="P:log4net.Layout.Pattern.Fakes.ShimPatternLayoutConverter.IgnoresExceptionSetBoolean">
            <summary>Establecer el shim de PatternLayoutConverter.set_IgnoresException(Boolean value)</summary>
        </member>
        <member name="T:log4net.Layout.Pattern.Fakes.StubNamedPatternConverter">
            <summary>Tipo stub de log4net.Layout.Pattern.NamedPatternConverter</summary>
        </member>
        <member name="M:log4net.Layout.Pattern.Fakes.StubNamedPatternConverter.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Layout.Pattern.Fakes.StubNamedPatternConverter.AttachBackingFieldToFormattingInfo">
            <summary>Asocia delegados para emular StubNamedPatternConverter.FormattingInfo como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Layout.Pattern.Fakes.StubNamedPatternConverter.AttachBackingFieldToIgnoresException">
            <summary>Asocia delegados para emular StubNamedPatternConverter.IgnoresException como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Layout.Pattern.Fakes.StubNamedPatternConverter.AttachBackingFieldToOption">
            <summary>Asocia delegados para emular StubNamedPatternConverter.Option como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="P:log4net.Layout.Pattern.Fakes.StubNamedPatternConverter.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:log4net.Layout.Pattern.Fakes.StubNamedPatternConverter.Convert(System.IO.TextWriter,System.Object)">
            <summary>Establecer el stub de PatternLayoutConverter.Convert(TextWriter writer, Object state)</summary>
        </member>
        <member name="F:log4net.Layout.Pattern.Fakes.StubNamedPatternConverter.ConvertTextWriterObject">
            <summary>Establecer el stub de PatternLayoutConverter.Convert(TextWriter writer, Object state)</summary>
        </member>
        <member name="M:log4net.Layout.Pattern.Fakes.StubNamedPatternConverter.Format(System.IO.TextWriter,System.Object)">
            <summary>Establecer el stub de PatternConverter.Format(TextWriter writer, Object state)</summary>
        </member>
        <member name="F:log4net.Layout.Pattern.Fakes.StubNamedPatternConverter.FormatTextWriterObject">
            <summary>Establecer el stub de PatternConverter.Format(TextWriter writer, Object state)</summary>
        </member>
        <member name="P:log4net.Layout.Pattern.Fakes.StubNamedPatternConverter.FormattingInfo">
            <summary>Establecer el stub de PatternConverter.get_FormattingInfo()</summary>
        </member>
        <member name="F:log4net.Layout.Pattern.Fakes.StubNamedPatternConverter.FormattingInfoGet">
            <summary>Establecer el stub de PatternConverter.get_FormattingInfo()</summary>
        </member>
        <member name="F:log4net.Layout.Pattern.Fakes.StubNamedPatternConverter.FormattingInfoSetFormattingInfo">
            <summary>Establecer el stub de PatternConverter.set_FormattingInfo(FormattingInfo value)</summary>
        </member>
        <member name="M:log4net.Layout.Pattern.Fakes.StubNamedPatternConverter.GetFullyQualifiedName(log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de NamedPatternConverter.GetFullyQualifiedName(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Layout.Pattern.Fakes.StubNamedPatternConverter.GetFullyQualifiedNameLoggingEvent">
            <summary>Establecer el stub de NamedPatternConverter.GetFullyQualifiedName(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Layout.Pattern.Fakes.StubNamedPatternConverter.IgnoresException">
            <summary>Establecer el stub de PatternLayoutConverter.get_IgnoresException()</summary>
        </member>
        <member name="F:log4net.Layout.Pattern.Fakes.StubNamedPatternConverter.IgnoresExceptionGet">
            <summary>Establecer el stub de PatternLayoutConverter.get_IgnoresException()</summary>
        </member>
        <member name="F:log4net.Layout.Pattern.Fakes.StubNamedPatternConverter.IgnoresExceptionSetBoolean">
            <summary>Establecer el stub de PatternLayoutConverter.set_IgnoresException(Boolean value)</summary>
        </member>
        <member name="M:log4net.Layout.Pattern.Fakes.StubNamedPatternConverter.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubNamedPatternConverter</summary>
        </member>
        <member name="P:log4net.Layout.Pattern.Fakes.StubNamedPatternConverter.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Layout.Pattern.Fakes.StubNamedPatternConverter.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:log4net.Layout.Pattern.Fakes.StubNamedPatternConverter.Next">
            <summary>Establecer el stub de PatternConverter.get_Next()</summary>
        </member>
        <member name="F:log4net.Layout.Pattern.Fakes.StubNamedPatternConverter.NextGet">
            <summary>Establecer el stub de PatternConverter.get_Next()</summary>
        </member>
        <member name="P:log4net.Layout.Pattern.Fakes.StubNamedPatternConverter.Option">
            <summary>Establecer el stub de PatternConverter.get_Option()</summary>
        </member>
        <member name="F:log4net.Layout.Pattern.Fakes.StubNamedPatternConverter.OptionGet">
            <summary>Establecer el stub de PatternConverter.get_Option()</summary>
        </member>
        <member name="F:log4net.Layout.Pattern.Fakes.StubNamedPatternConverter.OptionSetString">
            <summary>Establecer el stub de PatternConverter.set_Option(String value)</summary>
        </member>
        <member name="M:log4net.Layout.Pattern.Fakes.StubNamedPatternConverter.SetNext(log4net.Util.PatternConverter)">
            <summary>Establecer el stub de PatternConverter.SetNext(PatternConverter patternConverter)</summary>
        </member>
        <member name="F:log4net.Layout.Pattern.Fakes.StubNamedPatternConverter.SetNextPatternConverter">
            <summary>Establecer el stub de PatternConverter.SetNext(PatternConverter patternConverter)</summary>
        </member>
        <member name="T:log4net.Layout.Pattern.Fakes.StubPatternLayoutConverter">
            <summary>Tipo stub de log4net.Layout.Pattern.PatternLayoutConverter</summary>
        </member>
        <member name="M:log4net.Layout.Pattern.Fakes.StubPatternLayoutConverter.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Layout.Pattern.Fakes.StubPatternLayoutConverter.AttachBackingFieldToFormattingInfo">
            <summary>Asocia delegados para emular StubPatternLayoutConverter.FormattingInfo como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Layout.Pattern.Fakes.StubPatternLayoutConverter.AttachBackingFieldToIgnoresException">
            <summary>Asocia delegados para emular StubPatternLayoutConverter.IgnoresException como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Layout.Pattern.Fakes.StubPatternLayoutConverter.AttachBackingFieldToOption">
            <summary>Asocia delegados para emular StubPatternLayoutConverter.Option como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="P:log4net.Layout.Pattern.Fakes.StubPatternLayoutConverter.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:log4net.Layout.Pattern.Fakes.StubPatternLayoutConverter.Convert(System.IO.TextWriter,log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de PatternLayoutConverter.Convert(TextWriter writer, LoggingEvent loggingEvent)</summary>
        </member>
        <member name="M:log4net.Layout.Pattern.Fakes.StubPatternLayoutConverter.Convert(System.IO.TextWriter,System.Object)">
            <summary>Establecer el stub de PatternLayoutConverter.Convert(TextWriter writer, Object state)</summary>
        </member>
        <member name="F:log4net.Layout.Pattern.Fakes.StubPatternLayoutConverter.ConvertTextWriterLoggingEvent">
            <summary>Establecer el stub de PatternLayoutConverter.Convert(TextWriter writer, LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Layout.Pattern.Fakes.StubPatternLayoutConverter.ConvertTextWriterObject">
            <summary>Establecer el stub de PatternLayoutConverter.Convert(TextWriter writer, Object state)</summary>
        </member>
        <member name="M:log4net.Layout.Pattern.Fakes.StubPatternLayoutConverter.Format(System.IO.TextWriter,System.Object)">
            <summary>Establecer el stub de PatternConverter.Format(TextWriter writer, Object state)</summary>
        </member>
        <member name="F:log4net.Layout.Pattern.Fakes.StubPatternLayoutConverter.FormatTextWriterObject">
            <summary>Establecer el stub de PatternConverter.Format(TextWriter writer, Object state)</summary>
        </member>
        <member name="P:log4net.Layout.Pattern.Fakes.StubPatternLayoutConverter.FormattingInfo">
            <summary>Establecer el stub de PatternConverter.get_FormattingInfo()</summary>
        </member>
        <member name="F:log4net.Layout.Pattern.Fakes.StubPatternLayoutConverter.FormattingInfoGet">
            <summary>Establecer el stub de PatternConverter.get_FormattingInfo()</summary>
        </member>
        <member name="F:log4net.Layout.Pattern.Fakes.StubPatternLayoutConverter.FormattingInfoSetFormattingInfo">
            <summary>Establecer el stub de PatternConverter.set_FormattingInfo(FormattingInfo value)</summary>
        </member>
        <member name="P:log4net.Layout.Pattern.Fakes.StubPatternLayoutConverter.IgnoresException">
            <summary>Establecer el stub de PatternLayoutConverter.get_IgnoresException()</summary>
        </member>
        <member name="F:log4net.Layout.Pattern.Fakes.StubPatternLayoutConverter.IgnoresExceptionGet">
            <summary>Establecer el stub de PatternLayoutConverter.get_IgnoresException()</summary>
        </member>
        <member name="F:log4net.Layout.Pattern.Fakes.StubPatternLayoutConverter.IgnoresExceptionSetBoolean">
            <summary>Establecer el stub de PatternLayoutConverter.set_IgnoresException(Boolean value)</summary>
        </member>
        <member name="M:log4net.Layout.Pattern.Fakes.StubPatternLayoutConverter.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubPatternLayoutConverter</summary>
        </member>
        <member name="P:log4net.Layout.Pattern.Fakes.StubPatternLayoutConverter.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Layout.Pattern.Fakes.StubPatternLayoutConverter.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:log4net.Layout.Pattern.Fakes.StubPatternLayoutConverter.Next">
            <summary>Establecer el stub de PatternConverter.get_Next()</summary>
        </member>
        <member name="F:log4net.Layout.Pattern.Fakes.StubPatternLayoutConverter.NextGet">
            <summary>Establecer el stub de PatternConverter.get_Next()</summary>
        </member>
        <member name="P:log4net.Layout.Pattern.Fakes.StubPatternLayoutConverter.Option">
            <summary>Establecer el stub de PatternConverter.get_Option()</summary>
        </member>
        <member name="F:log4net.Layout.Pattern.Fakes.StubPatternLayoutConverter.OptionGet">
            <summary>Establecer el stub de PatternConverter.get_Option()</summary>
        </member>
        <member name="F:log4net.Layout.Pattern.Fakes.StubPatternLayoutConverter.OptionSetString">
            <summary>Establecer el stub de PatternConverter.set_Option(String value)</summary>
        </member>
        <member name="M:log4net.Layout.Pattern.Fakes.StubPatternLayoutConverter.SetNext(log4net.Util.PatternConverter)">
            <summary>Establecer el stub de PatternConverter.SetNext(PatternConverter patternConverter)</summary>
        </member>
        <member name="F:log4net.Layout.Pattern.Fakes.StubPatternLayoutConverter.SetNextPatternConverter">
            <summary>Establecer el stub de PatternConverter.SetNext(PatternConverter patternConverter)</summary>
        </member>
        <member name="T:log4net.ObjectRenderer.Fakes.ShimDefaultRenderer">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.ObjectRenderer.DefaultRenderer</summary>
        </member>
        <member name="M:log4net.ObjectRenderer.Fakes.ShimDefaultRenderer.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.ObjectRenderer.Fakes.ShimDefaultRenderer.#ctor(log4net.ObjectRenderer.DefaultRenderer)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.ObjectRenderer.Fakes.ShimDefaultRenderer.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.ObjectRenderer.Fakes.ShimDefaultRenderer.AllInstances.RenderArrayRendererMapArrayTextWriter">
            <summary>Establecer el shim de DefaultRenderer.RenderArray(RendererMap rendererMap, Array array, TextWriter writer)</summary>
        </member>
        <member name="P:log4net.ObjectRenderer.Fakes.ShimDefaultRenderer.AllInstances.RenderDictionaryEntryRendererMapDictionaryEntryTextWriter">
            <summary>Establecer el shim de DefaultRenderer.RenderDictionaryEntry(RendererMap rendererMap, DictionaryEntry entry, TextWriter writer)</summary>
        </member>
        <member name="P:log4net.ObjectRenderer.Fakes.ShimDefaultRenderer.AllInstances.RenderEnumeratorRendererMapIEnumeratorTextWriter">
            <summary>Establecer el shim de DefaultRenderer.RenderEnumerator(RendererMap rendererMap, IEnumerator enumerator, TextWriter writer)</summary>
        </member>
        <member name="P:log4net.ObjectRenderer.Fakes.ShimDefaultRenderer.AllInstances.RenderObjectRendererMapObjectTextWriter">
            <summary>Establecer el shim de DefaultRenderer.RenderObject(RendererMap rendererMap, Object obj, TextWriter writer)</summary>
        </member>
        <member name="M:log4net.ObjectRenderer.Fakes.ShimDefaultRenderer.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.ObjectRenderer.Fakes.ShimDefaultRenderer.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.ObjectRenderer.Fakes.ShimDefaultRenderer.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.ObjectRenderer.Fakes.ShimDefaultRenderer.Bind(log4net.ObjectRenderer.IObjectRenderer)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.ObjectRenderer.Fakes.ShimDefaultRenderer.Constructor">
            <summary>Establecer el shim de DefaultRenderer.DefaultRenderer()</summary>
        </member>
        <member name="P:log4net.ObjectRenderer.Fakes.ShimDefaultRenderer.RenderArrayRendererMapArrayTextWriter">
            <summary>Establecer el shim de DefaultRenderer.RenderArray(RendererMap rendererMap, Array array, TextWriter writer)</summary>
        </member>
        <member name="P:log4net.ObjectRenderer.Fakes.ShimDefaultRenderer.RenderDictionaryEntryRendererMapDictionaryEntryTextWriter">
            <summary>Establecer el shim de DefaultRenderer.RenderDictionaryEntry(RendererMap rendererMap, DictionaryEntry entry, TextWriter writer)</summary>
        </member>
        <member name="P:log4net.ObjectRenderer.Fakes.ShimDefaultRenderer.RenderEnumeratorRendererMapIEnumeratorTextWriter">
            <summary>Establecer el shim de DefaultRenderer.RenderEnumerator(RendererMap rendererMap, IEnumerator enumerator, TextWriter writer)</summary>
        </member>
        <member name="P:log4net.ObjectRenderer.Fakes.ShimDefaultRenderer.RenderObjectRendererMapObjectTextWriter">
            <summary>Establecer el shim de DefaultRenderer.RenderObject(RendererMap rendererMap, Object obj, TextWriter writer)</summary>
        </member>
        <member name="T:log4net.ObjectRenderer.Fakes.ShimRendererMap">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.ObjectRenderer.RendererMap</summary>
        </member>
        <member name="M:log4net.ObjectRenderer.Fakes.ShimRendererMap.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.ObjectRenderer.Fakes.ShimRendererMap.#ctor(log4net.ObjectRenderer.RendererMap)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.ObjectRenderer.Fakes.ShimRendererMap.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.ObjectRenderer.Fakes.ShimRendererMap.AllInstances.Clear">
            <summary>Establecer el shim de RendererMap.Clear()</summary>
        </member>
        <member name="P:log4net.ObjectRenderer.Fakes.ShimRendererMap.AllInstances.DefaultRendererGet">
            <summary>Establecer el shim de RendererMap.get_DefaultRenderer()</summary>
        </member>
        <member name="P:log4net.ObjectRenderer.Fakes.ShimRendererMap.AllInstances.FindAndRenderObject">
            <summary>Establecer el shim de RendererMap.FindAndRender(Object obj)</summary>
        </member>
        <member name="P:log4net.ObjectRenderer.Fakes.ShimRendererMap.AllInstances.FindAndRenderObjectTextWriter">
            <summary>Establecer el shim de RendererMap.FindAndRender(Object obj, TextWriter writer)</summary>
        </member>
        <member name="P:log4net.ObjectRenderer.Fakes.ShimRendererMap.AllInstances.GetObject">
            <summary>Establecer el shim de RendererMap.Get(Object obj)</summary>
        </member>
        <member name="P:log4net.ObjectRenderer.Fakes.ShimRendererMap.AllInstances.GetType01">
            <summary>Establecer el shim de RendererMap.Get(Type type)</summary>
        </member>
        <member name="P:log4net.ObjectRenderer.Fakes.ShimRendererMap.AllInstances.PutTypeIObjectRenderer">
            <summary>Establecer el shim de RendererMap.Put(Type typeToRender, IObjectRenderer renderer)</summary>
        </member>
        <member name="P:log4net.ObjectRenderer.Fakes.ShimRendererMap.AllInstances.SearchTypeAndInterfacesType">
            <summary>Establecer el shim de RendererMap.SearchTypeAndInterfaces(Type type)</summary>
        </member>
        <member name="M:log4net.ObjectRenderer.Fakes.ShimRendererMap.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.ObjectRenderer.Fakes.ShimRendererMap.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.ObjectRenderer.Fakes.ShimRendererMap.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.ObjectRenderer.Fakes.ShimRendererMap.Clear">
            <summary>Establecer el shim de RendererMap.Clear()</summary>
        </member>
        <member name="P:log4net.ObjectRenderer.Fakes.ShimRendererMap.Constructor">
            <summary>Establecer el shim de RendererMap.RendererMap()</summary>
        </member>
        <member name="P:log4net.ObjectRenderer.Fakes.ShimRendererMap.DefaultRendererGet">
            <summary>Establecer el shim de RendererMap.get_DefaultRenderer()</summary>
        </member>
        <member name="P:log4net.ObjectRenderer.Fakes.ShimRendererMap.FindAndRenderObject">
            <summary>Establecer el shim de RendererMap.FindAndRender(Object obj)</summary>
        </member>
        <member name="P:log4net.ObjectRenderer.Fakes.ShimRendererMap.FindAndRenderObjectTextWriter">
            <summary>Establecer el shim de RendererMap.FindAndRender(Object obj, TextWriter writer)</summary>
        </member>
        <member name="P:log4net.ObjectRenderer.Fakes.ShimRendererMap.GetObject">
            <summary>Establecer el shim de RendererMap.Get(Object obj)</summary>
        </member>
        <member name="P:log4net.ObjectRenderer.Fakes.ShimRendererMap.GetType">
            <summary>Establecer el shim de RendererMap.Get(Type type)</summary>
        </member>
        <member name="P:log4net.ObjectRenderer.Fakes.ShimRendererMap.PutTypeIObjectRenderer">
            <summary>Establecer el shim de RendererMap.Put(Type typeToRender, IObjectRenderer renderer)</summary>
        </member>
        <member name="P:log4net.ObjectRenderer.Fakes.ShimRendererMap.SearchTypeAndInterfacesType">
            <summary>Establecer el shim de RendererMap.SearchTypeAndInterfaces(Type type)</summary>
        </member>
        <member name="P:log4net.ObjectRenderer.Fakes.ShimRendererMap.StaticConstructor">
            <summary>Establecer el shim de RendererMap.RendererMap()</summary>
        </member>
        <member name="T:log4net.ObjectRenderer.Fakes.StubIObjectRenderer">
            <summary>Tipo stub de log4net.ObjectRenderer.IObjectRenderer</summary>
        </member>
        <member name="M:log4net.ObjectRenderer.Fakes.StubIObjectRenderer.#ctor">
            <summary>Inicializa una nueva instancia de type StubIObjectRenderer</summary>
        </member>
        <member name="F:log4net.ObjectRenderer.Fakes.StubIObjectRenderer.RenderObjectRendererMapObjectTextWriter">
            <summary>Establecer el stub de IObjectRenderer.RenderObject(RendererMap rendererMap, Object obj, TextWriter writer)</summary>
        </member>
        <member name="M:log4net.ObjectRenderer.Fakes.StubIObjectRenderer.log4net#ObjectRenderer#IObjectRenderer#RenderObject(log4net.ObjectRenderer.RendererMap,System.Object,System.IO.TextWriter)">
            <summary>Establecer el stub de IObjectRenderer.RenderObject(RendererMap rendererMap, Object obj, TextWriter writer)</summary>
        </member>
        <member name="T:log4net.ObjectRenderer.Fakes.StubRendererMap">
            <summary>Tipo stub de log4net.ObjectRenderer.RendererMap</summary>
        </member>
        <member name="M:log4net.ObjectRenderer.Fakes.StubRendererMap.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:log4net.ObjectRenderer.Fakes.StubRendererMap.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:log4net.ObjectRenderer.Fakes.StubRendererMap.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubRendererMap</summary>
        </member>
        <member name="P:log4net.ObjectRenderer.Fakes.StubRendererMap.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.ObjectRenderer.Fakes.StubRendererMap.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:log4net.Plugin.Fakes.ShimPluginCollection">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Plugin.PluginCollection</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.ShimPluginCollection.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.ShimPluginCollection.#ctor(log4net.Plugin.PluginCollection)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.AddIPlugin">
            <summary>Establecer el shim de PluginCollection.Add(IPlugin item)</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.AddRangeICollection">
            <summary>Establecer el shim de PluginCollection.AddRange(ICollection col)</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.AddRangeIPluginArray">
            <summary>Establecer el shim de PluginCollection.AddRange(IPlugin[] x)</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.AddRangePluginCollection">
            <summary>Establecer el shim de PluginCollection.AddRange(PluginCollection x)</summary>
        </member>
        <member name="T:log4net.Plugin.Fakes.ShimPluginCollection.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.AllInstances.AddIPlugin">
            <summary>Establecer el shim de PluginCollection.Add(IPlugin item)</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.AllInstances.AddRangeICollection">
            <summary>Establecer el shim de PluginCollection.AddRange(ICollection col)</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.AllInstances.AddRangeIPluginArray">
            <summary>Establecer el shim de PluginCollection.AddRange(IPlugin[] x)</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.AllInstances.AddRangePluginCollection">
            <summary>Establecer el shim de PluginCollection.AddRange(PluginCollection x)</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.AllInstances.CapacityGet">
            <summary>Establecer el shim de PluginCollection.get_Capacity()</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.AllInstances.CapacitySetInt32">
            <summary>Establecer el shim de PluginCollection.set_Capacity(Int32 value)</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.AllInstances.Clear">
            <summary>Establecer el shim de PluginCollection.Clear()</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.AllInstances.Clone">
            <summary>Establecer el shim de PluginCollection.Clone()</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.AllInstances.ContainsIPlugin">
            <summary>Establecer el shim de PluginCollection.Contains(IPlugin item)</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.AllInstances.CopyToIPluginArray">
            <summary>Establecer el shim de PluginCollection.CopyTo(IPlugin[] array)</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.AllInstances.CopyToIPluginArrayInt32">
            <summary>Establecer el shim de PluginCollection.CopyTo(IPlugin[] array, Int32 start)</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.AllInstances.CountGet">
            <summary>Establecer el shim de PluginCollection.get_Count()</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.AllInstances.EnsureCapacityInt32">
            <summary>Establecer el shim de PluginCollection.EnsureCapacity(Int32 min)</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.AllInstances.GetEnumerator">
            <summary>Establecer el shim de PluginCollection.GetEnumerator()</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.AllInstances.IndexOfIPlugin">
            <summary>Establecer el shim de PluginCollection.IndexOf(IPlugin item)</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.AllInstances.InsertInt32IPlugin">
            <summary>Establecer el shim de PluginCollection.Insert(Int32 index, IPlugin item)</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.AllInstances.IsFixedSizeGet">
            <summary>Establecer el shim de PluginCollection.get_IsFixedSize()</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.AllInstances.IsReadOnlyGet">
            <summary>Establecer el shim de PluginCollection.get_IsReadOnly()</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.AllInstances.IsSynchronizedGet">
            <summary>Establecer el shim de PluginCollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.AllInstances.ItemGetInt32">
            <summary>Establecer el shim de PluginCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.AllInstances.ItemSetInt32IPlugin">
            <summary>Establecer el shim de PluginCollection.set_Item(Int32 index, IPlugin value)</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.AllInstances.ItemSystemCollectionsIListgetInt32">
            <summary>Establecer el shim de PluginCollection.System.Collections.IList.get_Item(Int32 i)</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.AllInstances.ItemSystemCollectionsIListsetInt32Object">
            <summary>Establecer el shim de PluginCollection.System.Collections.IList.set_Item(Int32 i, Object value)</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.AllInstances.RemoveAtInt32">
            <summary>Establecer el shim de PluginCollection.RemoveAt(Int32 index)</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.AllInstances.RemoveIPlugin">
            <summary>Establecer el shim de PluginCollection.Remove(IPlugin item)</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.AllInstances.SyncRootGet">
            <summary>Establecer el shim de PluginCollection.get_SyncRoot()</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.AllInstances.SystemCollectionsICollectionCopyToArrayInt32">
            <summary>Establecer el shim de PluginCollection.System.Collections.ICollection.CopyTo(Array array, Int32 start)</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Establecer el shim de PluginCollection.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.AllInstances.SystemCollectionsIListAddObject">
            <summary>Establecer el shim de PluginCollection.System.Collections.IList.Add(Object x)</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.AllInstances.SystemCollectionsIListContainsObject">
            <summary>Establecer el shim de PluginCollection.System.Collections.IList.Contains(Object x)</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.AllInstances.SystemCollectionsIListIndexOfObject">
            <summary>Establecer el shim de PluginCollection.System.Collections.IList.IndexOf(Object x)</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.AllInstances.SystemCollectionsIListInsertInt32Object">
            <summary>Establecer el shim de PluginCollection.System.Collections.IList.Insert(Int32 pos, Object x)</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.AllInstances.SystemCollectionsIListRemoveAtInt32">
            <summary>Establecer el shim de PluginCollection.System.Collections.IList.RemoveAt(Int32 pos)</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.AllInstances.SystemCollectionsIListRemoveObject">
            <summary>Establecer el shim de PluginCollection.System.Collections.IList.Remove(Object x)</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.AllInstances.TrimToSize">
            <summary>Establecer el shim de PluginCollection.TrimToSize()</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.AllInstances.ValidateIndexInt32">
            <summary>Establecer el shim de PluginCollection.ValidateIndex(Int32 i)</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.AllInstances.ValidateIndexInt32Boolean">
            <summary>Establecer el shim de PluginCollection.ValidateIndex(Int32 i, Boolean allowEqualEnd)</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.ShimPluginCollection.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.ShimPluginCollection.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.ShimPluginCollection.Bind(System.ICloneable)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.ShimPluginCollection.Bind(System.Collections.ICollection)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.ShimPluginCollection.Bind(System.Collections.IEnumerable)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.ShimPluginCollection.Bind(System.Collections.IList)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.CapacityGet">
            <summary>Establecer el shim de PluginCollection.get_Capacity()</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.CapacitySetInt32">
            <summary>Establecer el shim de PluginCollection.set_Capacity(Int32 value)</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.Clear">
            <summary>Establecer el shim de PluginCollection.Clear()</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.Clone">
            <summary>Establecer el shim de PluginCollection.Clone()</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.Constructor">
            <summary>Establecer el shim de PluginCollection.PluginCollection()</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.ConstructorICollection">
            <summary>Establecer el shim de PluginCollection.PluginCollection(ICollection col)</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.ConstructorIPluginArray">
            <summary>Establecer el shim de PluginCollection.PluginCollection(IPlugin[] a)</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.ConstructorInt32">
            <summary>Establecer el shim de PluginCollection.PluginCollection(Int32 capacity)</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.ConstructorPluginCollection">
            <summary>Establecer el shim de PluginCollection.PluginCollection(PluginCollection c)</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.ContainsIPlugin">
            <summary>Establecer el shim de PluginCollection.Contains(IPlugin item)</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.CopyToIPluginArray">
            <summary>Establecer el shim de PluginCollection.CopyTo(IPlugin[] array)</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.CopyToIPluginArrayInt32">
            <summary>Establecer el shim de PluginCollection.CopyTo(IPlugin[] array, Int32 start)</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.CountGet">
            <summary>Establecer el shim de PluginCollection.get_Count()</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.EnsureCapacityInt32">
            <summary>Establecer el shim de PluginCollection.EnsureCapacity(Int32 min)</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.GetEnumerator">
            <summary>Establecer el shim de PluginCollection.GetEnumerator()</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.IndexOfIPlugin">
            <summary>Establecer el shim de PluginCollection.IndexOf(IPlugin item)</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.InsertInt32IPlugin">
            <summary>Establecer el shim de PluginCollection.Insert(Int32 index, IPlugin item)</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.IsFixedSizeGet">
            <summary>Establecer el shim de PluginCollection.get_IsFixedSize()</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.IsReadOnlyGet">
            <summary>Establecer el shim de PluginCollection.get_IsReadOnly()</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.IsSynchronizedGet">
            <summary>Establecer el shim de PluginCollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.ItemGetInt32">
            <summary>Establecer el shim de PluginCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.ItemSetInt32IPlugin">
            <summary>Establecer el shim de PluginCollection.set_Item(Int32 index, IPlugin value)</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.ItemSystemCollectionsIListgetInt32">
            <summary>Establecer el shim de PluginCollection.System.Collections.IList.get_Item(Int32 i)</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.ItemSystemCollectionsIListsetInt32Object">
            <summary>Establecer el shim de PluginCollection.System.Collections.IList.set_Item(Int32 i, Object value)</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.ReadOnlyPluginCollection">
            <summary>Establecer el shim de PluginCollection.ReadOnly(PluginCollection list)</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.RemoveAtInt32">
            <summary>Establecer el shim de PluginCollection.RemoveAt(Int32 index)</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.RemoveIPlugin">
            <summary>Establecer el shim de PluginCollection.Remove(IPlugin item)</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.SyncRootGet">
            <summary>Establecer el shim de PluginCollection.get_SyncRoot()</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.SystemCollectionsICollectionCopyToArrayInt32">
            <summary>Establecer el shim de PluginCollection.System.Collections.ICollection.CopyTo(Array array, Int32 start)</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Establecer el shim de PluginCollection.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.SystemCollectionsIListAddObject">
            <summary>Establecer el shim de PluginCollection.System.Collections.IList.Add(Object x)</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.SystemCollectionsIListContainsObject">
            <summary>Establecer el shim de PluginCollection.System.Collections.IList.Contains(Object x)</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.SystemCollectionsIListIndexOfObject">
            <summary>Establecer el shim de PluginCollection.System.Collections.IList.IndexOf(Object x)</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.SystemCollectionsIListInsertInt32Object">
            <summary>Establecer el shim de PluginCollection.System.Collections.IList.Insert(Int32 pos, Object x)</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.SystemCollectionsIListRemoveAtInt32">
            <summary>Establecer el shim de PluginCollection.System.Collections.IList.RemoveAt(Int32 pos)</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.SystemCollectionsIListRemoveObject">
            <summary>Establecer el shim de PluginCollection.System.Collections.IList.Remove(Object x)</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.TrimToSize">
            <summary>Establecer el shim de PluginCollection.TrimToSize()</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.ValidateIndexInt32">
            <summary>Establecer el shim de PluginCollection.ValidateIndex(Int32 i)</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginCollection.ValidateIndexInt32Boolean">
            <summary>Establecer el shim de PluginCollection.ValidateIndex(Int32 i, Boolean allowEqualEnd)</summary>
        </member>
        <member name="T:log4net.Plugin.Fakes.ShimPluginMap">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Plugin.PluginMap</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.ShimPluginMap.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.ShimPluginMap.#ctor(log4net.Plugin.PluginMap)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginMap.AddIPlugin">
            <summary>Establecer el shim de PluginMap.Add(IPlugin plugin)</summary>
        </member>
        <member name="T:log4net.Plugin.Fakes.ShimPluginMap.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginMap.AllInstances.AddIPlugin">
            <summary>Establecer el shim de PluginMap.Add(IPlugin plugin)</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginMap.AllInstances.AllPluginsGet">
            <summary>Establecer el shim de PluginMap.get_AllPlugins()</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginMap.AllInstances.ItemGetString">
            <summary>Establecer el shim de PluginMap.get_Item(String name)</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginMap.AllInstances.RemoveIPlugin">
            <summary>Establecer el shim de PluginMap.Remove(IPlugin plugin)</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginMap.AllPluginsGet">
            <summary>Establecer el shim de PluginMap.get_AllPlugins()</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.ShimPluginMap.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.ShimPluginMap.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginMap.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginMap.ConstructorILoggerRepository">
            <summary>Establecer el shim de PluginMap.PluginMap(ILoggerRepository repository)</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginMap.ItemGetString">
            <summary>Establecer el shim de PluginMap.get_Item(String name)</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginMap.RemoveIPlugin">
            <summary>Establecer el shim de PluginMap.Remove(IPlugin plugin)</summary>
        </member>
        <member name="T:log4net.Plugin.Fakes.ShimPluginSkeleton">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Plugin.PluginSkeleton</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.ShimPluginSkeleton.#ctor(log4net.Plugin.PluginSkeleton)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Plugin.Fakes.ShimPluginSkeleton.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginSkeleton.AllInstances.AttachILoggerRepository">
            <summary>Establecer el shim de PluginSkeleton.Attach(ILoggerRepository repository)</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginSkeleton.AllInstances.LoggerRepositoryGet">
            <summary>Establecer el shim de PluginSkeleton.get_LoggerRepository()</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginSkeleton.AllInstances.LoggerRepositorySetILoggerRepository">
            <summary>Establecer el shim de PluginSkeleton.set_LoggerRepository(ILoggerRepository value)</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginSkeleton.AllInstances.NameGet">
            <summary>Establecer el shim de PluginSkeleton.get_Name()</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginSkeleton.AllInstances.NameSetString">
            <summary>Establecer el shim de PluginSkeleton.set_Name(String value)</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginSkeleton.AllInstances.Shutdown">
            <summary>Establecer el shim de PluginSkeleton.Shutdown()</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginSkeleton.AttachILoggerRepository">
            <summary>Establecer el shim de PluginSkeleton.Attach(ILoggerRepository repository)</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.ShimPluginSkeleton.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.ShimPluginSkeleton.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginSkeleton.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.ShimPluginSkeleton.Bind(log4net.Plugin.IPlugin)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginSkeleton.ConstructorString">
            <summary>Establecer el shim de PluginSkeleton.PluginSkeleton(String name)</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginSkeleton.LoggerRepositoryGet">
            <summary>Establecer el shim de PluginSkeleton.get_LoggerRepository()</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginSkeleton.LoggerRepositorySetILoggerRepository">
            <summary>Establecer el shim de PluginSkeleton.set_LoggerRepository(ILoggerRepository value)</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginSkeleton.NameGet">
            <summary>Establecer el shim de PluginSkeleton.get_Name()</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginSkeleton.NameSetString">
            <summary>Establecer el shim de PluginSkeleton.set_Name(String value)</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimPluginSkeleton.Shutdown">
            <summary>Establecer el shim de PluginSkeleton.Shutdown()</summary>
        </member>
        <member name="T:log4net.Plugin.Fakes.ShimRemoteLoggingServerPlugin">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Plugin.RemoteLoggingServerPlugin</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.ShimRemoteLoggingServerPlugin.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.ShimRemoteLoggingServerPlugin.#ctor(log4net.Plugin.RemoteLoggingServerPlugin)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Plugin.Fakes.ShimRemoteLoggingServerPlugin.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimRemoteLoggingServerPlugin.AllInstances.AttachILoggerRepository">
            <summary>Establecer el shim de RemoteLoggingServerPlugin.Attach(ILoggerRepository repository)</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimRemoteLoggingServerPlugin.AllInstances.Shutdown">
            <summary>Establecer el shim de RemoteLoggingServerPlugin.Shutdown()</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimRemoteLoggingServerPlugin.AllInstances.SinkUriGet">
            <summary>Establecer el shim de RemoteLoggingServerPlugin.get_SinkUri()</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimRemoteLoggingServerPlugin.AllInstances.SinkUriSetString">
            <summary>Establecer el shim de RemoteLoggingServerPlugin.set_SinkUri(String value)</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimRemoteLoggingServerPlugin.AttachILoggerRepository">
            <summary>Establecer el shim de RemoteLoggingServerPlugin.Attach(ILoggerRepository repository)</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.ShimRemoteLoggingServerPlugin.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.ShimRemoteLoggingServerPlugin.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimRemoteLoggingServerPlugin.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.ShimRemoteLoggingServerPlugin.Bind(log4net.Plugin.IPlugin)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimRemoteLoggingServerPlugin.Constructor">
            <summary>Establecer el shim de RemoteLoggingServerPlugin.RemoteLoggingServerPlugin()</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimRemoteLoggingServerPlugin.ConstructorString">
            <summary>Establecer el shim de RemoteLoggingServerPlugin.RemoteLoggingServerPlugin(String sinkUri)</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimRemoteLoggingServerPlugin.Shutdown">
            <summary>Establecer el shim de RemoteLoggingServerPlugin.Shutdown()</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimRemoteLoggingServerPlugin.SinkUriGet">
            <summary>Establecer el shim de RemoteLoggingServerPlugin.get_SinkUri()</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimRemoteLoggingServerPlugin.SinkUriSetString">
            <summary>Establecer el shim de RemoteLoggingServerPlugin.set_SinkUri(String value)</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.ShimRemoteLoggingServerPlugin.StaticConstructor">
            <summary>Establecer el shim de RemoteLoggingServerPlugin.RemoteLoggingServerPlugin()</summary>
        </member>
        <member name="T:log4net.Plugin.Fakes.StubIPlugin">
            <summary>Tipo stub de log4net.Plugin.IPlugin</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.StubIPlugin.#ctor">
            <summary>Inicializa una nueva instancia de type StubIPlugin</summary>
        </member>
        <member name="F:log4net.Plugin.Fakes.StubIPlugin.AttachILoggerRepository">
            <summary>Establecer el stub de IPlugin.Attach(ILoggerRepository repository)</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.StubIPlugin.log4net#Plugin#IPlugin#Name">
            <summary>Establecer el stub de IPlugin.get_Name()</summary>
        </member>
        <member name="F:log4net.Plugin.Fakes.StubIPlugin.NameGet">
            <summary>Establecer el stub de IPlugin.get_Name()</summary>
        </member>
        <member name="F:log4net.Plugin.Fakes.StubIPlugin.Shutdown">
            <summary>Establecer el stub de IPlugin.Shutdown()</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.StubIPlugin.log4net#Plugin#IPlugin#Attach(log4net.Repository.ILoggerRepository)">
            <summary>Establecer el stub de IPlugin.Attach(ILoggerRepository repository)</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.StubIPlugin.log4net#Plugin#IPlugin#Shutdown">
            <summary>Establecer el stub de IPlugin.Shutdown()</summary>
        </member>
        <member name="T:log4net.Plugin.Fakes.StubIPluginFactory">
            <summary>Tipo stub de log4net.Plugin.IPluginFactory</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.StubIPluginFactory.#ctor">
            <summary>Inicializa una nueva instancia de type StubIPluginFactory</summary>
        </member>
        <member name="F:log4net.Plugin.Fakes.StubIPluginFactory.CreatePlugin">
            <summary>Establecer el stub de IPluginFactory.CreatePlugin()</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.StubIPluginFactory.log4net#Plugin#IPluginFactory#CreatePlugin">
            <summary>Establecer el stub de IPluginFactory.CreatePlugin()</summary>
        </member>
        <member name="T:log4net.Plugin.Fakes.StubPluginCollection">
            <summary>Tipo stub de log4net.Plugin.PluginCollection</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.StubPluginCollection.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.StubPluginCollection.#ctor(System.Int32)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.StubPluginCollection.#ctor(System.Collections.ICollection)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.StubPluginCollection.#ctor(log4net.Plugin.IPlugin[])">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.StubPluginCollection.#ctor(log4net.Plugin.PluginCollection.Tag)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.StubPluginCollection.#ctor(log4net.Plugin.PluginCollection)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.StubPluginCollection.Add(log4net.Plugin.IPlugin)">
            <summary>Establecer el stub de PluginCollection.Add(IPlugin item)</summary>
        </member>
        <member name="F:log4net.Plugin.Fakes.StubPluginCollection.AddIPlugin">
            <summary>Establecer el stub de PluginCollection.Add(IPlugin item)</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.StubPluginCollection.AddRange(log4net.Plugin.IPlugin[])">
            <summary>Establecer el stub de PluginCollection.AddRange(IPlugin[] x)</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.StubPluginCollection.AddRange(log4net.Plugin.PluginCollection)">
            <summary>Establecer el stub de PluginCollection.AddRange(PluginCollection x)</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.StubPluginCollection.AddRange(System.Collections.ICollection)">
            <summary>Establecer el stub de PluginCollection.AddRange(ICollection col)</summary>
        </member>
        <member name="F:log4net.Plugin.Fakes.StubPluginCollection.AddRangeICollection">
            <summary>Establecer el stub de PluginCollection.AddRange(ICollection col)</summary>
        </member>
        <member name="F:log4net.Plugin.Fakes.StubPluginCollection.AddRangeIPluginArray">
            <summary>Establecer el stub de PluginCollection.AddRange(IPlugin[] x)</summary>
        </member>
        <member name="F:log4net.Plugin.Fakes.StubPluginCollection.AddRangePluginCollection">
            <summary>Establecer el stub de PluginCollection.AddRange(PluginCollection x)</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.StubPluginCollection.AttachBackingFieldToCapacity">
            <summary>Asocia delegados para emular StubPluginCollection.Capacity como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.StubPluginCollection.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.StubPluginCollection.Capacity">
            <summary>Establecer el stub de PluginCollection.get_Capacity()</summary>
        </member>
        <member name="F:log4net.Plugin.Fakes.StubPluginCollection.CapacityGet">
            <summary>Establecer el stub de PluginCollection.get_Capacity()</summary>
        </member>
        <member name="F:log4net.Plugin.Fakes.StubPluginCollection.CapacitySetInt32">
            <summary>Establecer el stub de PluginCollection.set_Capacity(Int32 value)</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.StubPluginCollection.Clear">
            <summary>Establecer el stub de PluginCollection.Clear()</summary>
        </member>
        <member name="F:log4net.Plugin.Fakes.StubPluginCollection.Clear01">
            <summary>Establecer el stub de PluginCollection.Clear()</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.StubPluginCollection.Clone">
            <summary>Establecer el stub de PluginCollection.Clone()</summary>
        </member>
        <member name="F:log4net.Plugin.Fakes.StubPluginCollection.Clone01">
            <summary>Establecer el stub de PluginCollection.Clone()</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.StubPluginCollection.Contains(log4net.Plugin.IPlugin)">
            <summary>Establecer el stub de PluginCollection.Contains(IPlugin item)</summary>
        </member>
        <member name="F:log4net.Plugin.Fakes.StubPluginCollection.ContainsIPlugin">
            <summary>Establecer el stub de PluginCollection.Contains(IPlugin item)</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.StubPluginCollection.CopyTo(log4net.Plugin.IPlugin[])">
            <summary>Establecer el stub de PluginCollection.CopyTo(IPlugin[] array)</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.StubPluginCollection.CopyTo(log4net.Plugin.IPlugin[],System.Int32)">
            <summary>Establecer el stub de PluginCollection.CopyTo(IPlugin[] array, Int32 start)</summary>
        </member>
        <member name="F:log4net.Plugin.Fakes.StubPluginCollection.CopyToIPluginArray">
            <summary>Establecer el stub de PluginCollection.CopyTo(IPlugin[] array)</summary>
        </member>
        <member name="F:log4net.Plugin.Fakes.StubPluginCollection.CopyToIPluginArrayInt32">
            <summary>Establecer el stub de PluginCollection.CopyTo(IPlugin[] array, Int32 start)</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.StubPluginCollection.Count">
            <summary>Establecer el stub de PluginCollection.get_Count()</summary>
        </member>
        <member name="F:log4net.Plugin.Fakes.StubPluginCollection.CountGet">
            <summary>Establecer el stub de PluginCollection.get_Count()</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.StubPluginCollection.GetEnumerator">
            <summary>Establecer el stub de PluginCollection.GetEnumerator()</summary>
        </member>
        <member name="F:log4net.Plugin.Fakes.StubPluginCollection.GetEnumerator01">
            <summary>Establecer el stub de PluginCollection.GetEnumerator()</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.StubPluginCollection.IndexOf(log4net.Plugin.IPlugin)">
            <summary>Establecer el stub de PluginCollection.IndexOf(IPlugin item)</summary>
        </member>
        <member name="F:log4net.Plugin.Fakes.StubPluginCollection.IndexOfIPlugin">
            <summary>Establecer el stub de PluginCollection.IndexOf(IPlugin item)</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.StubPluginCollection.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubPluginCollection</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.StubPluginCollection.Insert(System.Int32,log4net.Plugin.IPlugin)">
            <summary>Establecer el stub de PluginCollection.Insert(Int32 index, IPlugin item)</summary>
        </member>
        <member name="F:log4net.Plugin.Fakes.StubPluginCollection.InsertInt32IPlugin">
            <summary>Establecer el stub de PluginCollection.Insert(Int32 index, IPlugin item)</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.StubPluginCollection.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.StubPluginCollection.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.StubPluginCollection.IsFixedSize">
            <summary>Establecer el stub de PluginCollection.get_IsFixedSize()</summary>
        </member>
        <member name="F:log4net.Plugin.Fakes.StubPluginCollection.IsFixedSizeGet">
            <summary>Establecer el stub de PluginCollection.get_IsFixedSize()</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.StubPluginCollection.IsReadOnly">
            <summary>Establecer el stub de PluginCollection.get_IsReadOnly()</summary>
        </member>
        <member name="F:log4net.Plugin.Fakes.StubPluginCollection.IsReadOnlyGet">
            <summary>Establecer el stub de PluginCollection.get_IsReadOnly()</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.StubPluginCollection.IsSynchronized">
            <summary>Establecer el stub de PluginCollection.get_IsSynchronized()</summary>
        </member>
        <member name="F:log4net.Plugin.Fakes.StubPluginCollection.IsSynchronizedGet">
            <summary>Establecer el stub de PluginCollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.StubPluginCollection.Item(System.Int32)">
            <summary>Establecer el stub de PluginCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="F:log4net.Plugin.Fakes.StubPluginCollection.ItemGetInt32">
            <summary>Establecer el stub de PluginCollection.get_Item(Int32 index)</summary>
        </member>
        <member name="F:log4net.Plugin.Fakes.StubPluginCollection.ItemSetInt32IPlugin">
            <summary>Establecer el stub de PluginCollection.set_Item(Int32 index, IPlugin value)</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.StubPluginCollection.Remove(log4net.Plugin.IPlugin)">
            <summary>Establecer el stub de PluginCollection.Remove(IPlugin item)</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.StubPluginCollection.RemoveAt(System.Int32)">
            <summary>Establecer el stub de PluginCollection.RemoveAt(Int32 index)</summary>
        </member>
        <member name="F:log4net.Plugin.Fakes.StubPluginCollection.RemoveAtInt32">
            <summary>Establecer el stub de PluginCollection.RemoveAt(Int32 index)</summary>
        </member>
        <member name="F:log4net.Plugin.Fakes.StubPluginCollection.RemoveIPlugin">
            <summary>Establecer el stub de PluginCollection.Remove(IPlugin item)</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.StubPluginCollection.SyncRoot">
            <summary>Establecer el stub de PluginCollection.get_SyncRoot()</summary>
        </member>
        <member name="F:log4net.Plugin.Fakes.StubPluginCollection.SyncRootGet">
            <summary>Establecer el stub de PluginCollection.get_SyncRoot()</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.StubPluginCollection.TrimToSize">
            <summary>Establecer el stub de PluginCollection.TrimToSize()</summary>
        </member>
        <member name="F:log4net.Plugin.Fakes.StubPluginCollection.TrimToSize01">
            <summary>Establecer el stub de PluginCollection.TrimToSize()</summary>
        </member>
        <member name="T:log4net.Plugin.Fakes.StubPluginSkeleton">
            <summary>Tipo stub de log4net.Plugin.PluginSkeleton</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.StubPluginSkeleton.#ctor(System.String)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.StubPluginSkeleton.Attach(log4net.Repository.ILoggerRepository)">
            <summary>Establecer el stub de PluginSkeleton.Attach(ILoggerRepository repository)</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.StubPluginSkeleton.AttachBackingFieldToLoggerRepository">
            <summary>Asocia delegados para emular StubPluginSkeleton.LoggerRepository como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.StubPluginSkeleton.AttachBackingFieldToName">
            <summary>Asocia delegados para emular StubPluginSkeleton.Name como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="F:log4net.Plugin.Fakes.StubPluginSkeleton.AttachILoggerRepository">
            <summary>Establecer el stub de PluginSkeleton.Attach(ILoggerRepository repository)</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.StubPluginSkeleton.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.StubPluginSkeleton.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubPluginSkeleton</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.StubPluginSkeleton.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.StubPluginSkeleton.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.StubPluginSkeleton.LoggerRepository">
            <summary>Establecer el stub de PluginSkeleton.get_LoggerRepository()</summary>
        </member>
        <member name="F:log4net.Plugin.Fakes.StubPluginSkeleton.LoggerRepositoryGet">
            <summary>Establecer el stub de PluginSkeleton.get_LoggerRepository()</summary>
        </member>
        <member name="F:log4net.Plugin.Fakes.StubPluginSkeleton.LoggerRepositorySetILoggerRepository">
            <summary>Establecer el stub de PluginSkeleton.set_LoggerRepository(ILoggerRepository value)</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.StubPluginSkeleton.Name">
            <summary>Establecer el stub de PluginSkeleton.get_Name()</summary>
        </member>
        <member name="F:log4net.Plugin.Fakes.StubPluginSkeleton.NameGet">
            <summary>Establecer el stub de PluginSkeleton.get_Name()</summary>
        </member>
        <member name="F:log4net.Plugin.Fakes.StubPluginSkeleton.NameSetString">
            <summary>Establecer el stub de PluginSkeleton.set_Name(String value)</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.StubPluginSkeleton.Shutdown">
            <summary>Establecer el stub de PluginSkeleton.Shutdown()</summary>
        </member>
        <member name="F:log4net.Plugin.Fakes.StubPluginSkeleton.Shutdown01">
            <summary>Establecer el stub de PluginSkeleton.Shutdown()</summary>
        </member>
        <member name="T:log4net.Plugin.Fakes.StubRemoteLoggingServerPlugin">
            <summary>Tipo stub de log4net.Plugin.RemoteLoggingServerPlugin</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.StubRemoteLoggingServerPlugin.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.StubRemoteLoggingServerPlugin.#ctor(System.String)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.StubRemoteLoggingServerPlugin.Attach(log4net.Repository.ILoggerRepository)">
            <summary>Establecer el stub de RemoteLoggingServerPlugin.Attach(ILoggerRepository repository)</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.StubRemoteLoggingServerPlugin.AttachBackingFieldToLoggerRepository">
            <summary>Asocia delegados para emular StubRemoteLoggingServerPlugin.LoggerRepository como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.StubRemoteLoggingServerPlugin.AttachBackingFieldToName">
            <summary>Asocia delegados para emular StubRemoteLoggingServerPlugin.Name como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.StubRemoteLoggingServerPlugin.AttachBackingFieldToSinkUri">
            <summary>Asocia delegados para emular StubRemoteLoggingServerPlugin.SinkUri como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="F:log4net.Plugin.Fakes.StubRemoteLoggingServerPlugin.AttachILoggerRepository">
            <summary>Establecer el stub de RemoteLoggingServerPlugin.Attach(ILoggerRepository repository)</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.StubRemoteLoggingServerPlugin.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.StubRemoteLoggingServerPlugin.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubRemoteLoggingServerPlugin</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.StubRemoteLoggingServerPlugin.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.StubRemoteLoggingServerPlugin.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.StubRemoteLoggingServerPlugin.LoggerRepository">
            <summary>Establecer el stub de PluginSkeleton.get_LoggerRepository()</summary>
        </member>
        <member name="F:log4net.Plugin.Fakes.StubRemoteLoggingServerPlugin.LoggerRepositoryGet">
            <summary>Establecer el stub de PluginSkeleton.get_LoggerRepository()</summary>
        </member>
        <member name="F:log4net.Plugin.Fakes.StubRemoteLoggingServerPlugin.LoggerRepositorySetILoggerRepository">
            <summary>Establecer el stub de PluginSkeleton.set_LoggerRepository(ILoggerRepository value)</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.StubRemoteLoggingServerPlugin.Name">
            <summary>Establecer el stub de PluginSkeleton.get_Name()</summary>
        </member>
        <member name="F:log4net.Plugin.Fakes.StubRemoteLoggingServerPlugin.NameGet">
            <summary>Establecer el stub de PluginSkeleton.get_Name()</summary>
        </member>
        <member name="F:log4net.Plugin.Fakes.StubRemoteLoggingServerPlugin.NameSetString">
            <summary>Establecer el stub de PluginSkeleton.set_Name(String value)</summary>
        </member>
        <member name="M:log4net.Plugin.Fakes.StubRemoteLoggingServerPlugin.Shutdown">
            <summary>Establecer el stub de RemoteLoggingServerPlugin.Shutdown()</summary>
        </member>
        <member name="F:log4net.Plugin.Fakes.StubRemoteLoggingServerPlugin.Shutdown01">
            <summary>Establecer el stub de RemoteLoggingServerPlugin.Shutdown()</summary>
        </member>
        <member name="P:log4net.Plugin.Fakes.StubRemoteLoggingServerPlugin.SinkUri">
            <summary>Establecer el stub de RemoteLoggingServerPlugin.get_SinkUri()</summary>
        </member>
        <member name="F:log4net.Plugin.Fakes.StubRemoteLoggingServerPlugin.SinkUriGet">
            <summary>Establecer el stub de RemoteLoggingServerPlugin.get_SinkUri()</summary>
        </member>
        <member name="F:log4net.Plugin.Fakes.StubRemoteLoggingServerPlugin.SinkUriSetString">
            <summary>Establecer el stub de RemoteLoggingServerPlugin.set_SinkUri(String value)</summary>
        </member>
        <member name="T:log4net.Repository.Fakes.ShimConfigurationChangedEventArgs">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Repository.ConfigurationChangedEventArgs</summary>
        </member>
        <member name="M:log4net.Repository.Fakes.ShimConfigurationChangedEventArgs.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Repository.Fakes.ShimConfigurationChangedEventArgs.#ctor(log4net.Repository.ConfigurationChangedEventArgs)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Repository.Fakes.ShimConfigurationChangedEventArgs.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimConfigurationChangedEventArgs.AllInstances.ConfigurationMessagesGet">
            <summary>Establecer el shim de ConfigurationChangedEventArgs.get_ConfigurationMessages()</summary>
        </member>
        <member name="M:log4net.Repository.Fakes.ShimConfigurationChangedEventArgs.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Repository.Fakes.ShimConfigurationChangedEventArgs.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimConfigurationChangedEventArgs.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimConfigurationChangedEventArgs.ConfigurationMessagesGet">
            <summary>Establecer el shim de ConfigurationChangedEventArgs.get_ConfigurationMessages()</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimConfigurationChangedEventArgs.ConstructorICollection">
            <summary>Establecer el shim de ConfigurationChangedEventArgs.ConfigurationChangedEventArgs(ICollection configurationMessages)</summary>
        </member>
        <member name="T:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Repository.LoggerRepositorySkeleton</summary>
        </member>
        <member name="M:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.#ctor(log4net.Repository.LoggerRepositorySkeleton)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.AddBuiltinLevels">
            <summary>Establecer el shim de LoggerRepositorySkeleton.AddBuiltinLevels()</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.AddRendererTypeIObjectRenderer">
            <summary>Establecer el shim de LoggerRepositorySkeleton.AddRenderer(Type typeToRender, IObjectRenderer rendererInstance)</summary>
        </member>
        <member name="T:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.AllInstances.AddBuiltinLevels">
            <summary>Establecer el shim de LoggerRepositorySkeleton.AddBuiltinLevels()</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.AllInstances.AddRendererTypeIObjectRenderer">
            <summary>Establecer el shim de LoggerRepositorySkeleton.AddRenderer(Type typeToRender, IObjectRenderer rendererInstance)</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.AllInstances.ConfigurationChangedAddLoggerRepositoryConfigurationChangedEventHandler">
            <summary>Establecer el shim de LoggerRepositorySkeleton.add_ConfigurationChanged(LoggerRepositoryConfigurationChangedEventHandler value)</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.AllInstances.ConfigurationChangedRemoveLoggerRepositoryConfigurationChangedEventHandler">
            <summary>Establecer el shim de LoggerRepositorySkeleton.remove_ConfigurationChanged(LoggerRepositoryConfigurationChangedEventHandler value)</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.AllInstances.ConfigurationMessagesGet">
            <summary>Establecer el shim de LoggerRepositorySkeleton.get_ConfigurationMessages()</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.AllInstances.ConfigurationMessagesSetICollection">
            <summary>Establecer el shim de LoggerRepositorySkeleton.set_ConfigurationMessages(ICollection value)</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.AllInstances.ConfigurationResetAddLoggerRepositoryConfigurationResetEventHandler">
            <summary>Establecer el shim de LoggerRepositorySkeleton.add_ConfigurationReset(LoggerRepositoryConfigurationResetEventHandler value)</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.AllInstances.ConfigurationResetRemoveLoggerRepositoryConfigurationResetEventHandler">
            <summary>Establecer el shim de LoggerRepositorySkeleton.remove_ConfigurationReset(LoggerRepositoryConfigurationResetEventHandler value)</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.AllInstances.ConfiguredGet">
            <summary>Establecer el shim de LoggerRepositorySkeleton.get_Configured()</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.AllInstances.ConfiguredSetBoolean">
            <summary>Establecer el shim de LoggerRepositorySkeleton.set_Configured(Boolean value)</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.AllInstances.FlushInt32">
            <summary>Establecer el shim de LoggerRepositorySkeleton.Flush(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.AllInstances.LevelMapGet">
            <summary>Establecer el shim de LoggerRepositorySkeleton.get_LevelMap()</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.AllInstances.NameGet">
            <summary>Establecer el shim de LoggerRepositorySkeleton.get_Name()</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.AllInstances.NameSetString">
            <summary>Establecer el shim de LoggerRepositorySkeleton.set_Name(String value)</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.AllInstances.OnConfigurationChangedEventArgs">
            <summary>Establecer el shim de LoggerRepositorySkeleton.OnConfigurationChanged(EventArgs e)</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.AllInstances.OnConfigurationResetEventArgs">
            <summary>Establecer el shim de LoggerRepositorySkeleton.OnConfigurationReset(EventArgs e)</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.AllInstances.OnShutdownEventArgs">
            <summary>Establecer el shim de LoggerRepositorySkeleton.OnShutdown(EventArgs e)</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.AllInstances.PluginMapGet">
            <summary>Establecer el shim de LoggerRepositorySkeleton.get_PluginMap()</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.AllInstances.PropertiesGet">
            <summary>Establecer el shim de LoggerRepositorySkeleton.get_Properties()</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.AllInstances.RaiseConfigurationChangedEventArgs">
            <summary>Establecer el shim de LoggerRepositorySkeleton.RaiseConfigurationChanged(EventArgs e)</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.AllInstances.RendererMapGet">
            <summary>Establecer el shim de LoggerRepositorySkeleton.get_RendererMap()</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.AllInstances.ResetConfiguration">
            <summary>Establecer el shim de LoggerRepositorySkeleton.ResetConfiguration()</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.AllInstances.Shutdown">
            <summary>Establecer el shim de LoggerRepositorySkeleton.Shutdown()</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.AllInstances.ShutdownEventAddLoggerRepositoryShutdownEventHandler">
            <summary>Establecer el shim de LoggerRepositorySkeleton.add_ShutdownEvent(LoggerRepositoryShutdownEventHandler value)</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.AllInstances.ShutdownEventRemoveLoggerRepositoryShutdownEventHandler">
            <summary>Establecer el shim de LoggerRepositorySkeleton.remove_ShutdownEvent(LoggerRepositoryShutdownEventHandler value)</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.AllInstances.ThresholdGet">
            <summary>Establecer el shim de LoggerRepositorySkeleton.get_Threshold()</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.AllInstances.ThresholdSetLevel">
            <summary>Establecer el shim de LoggerRepositorySkeleton.set_Threshold(Level value)</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.AllInstances.m_configurationChangedEventAddLoggerRepositoryConfigurationChangedEventHandler">
            <summary>Establecer el shim de LoggerRepositorySkeleton.add_m_configurationChangedEvent(LoggerRepositoryConfigurationChangedEventHandler value)</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.AllInstances.m_configurationChangedEventRemoveLoggerRepositoryConfigurationChangedEventHandler">
            <summary>Establecer el shim de LoggerRepositorySkeleton.remove_m_configurationChangedEvent(LoggerRepositoryConfigurationChangedEventHandler value)</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.AllInstances.m_configurationResetEventAddLoggerRepositoryConfigurationResetEventHandler">
            <summary>Establecer el shim de LoggerRepositorySkeleton.add_m_configurationResetEvent(LoggerRepositoryConfigurationResetEventHandler value)</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.AllInstances.m_configurationResetEventRemoveLoggerRepositoryConfigurationResetEventHandler">
            <summary>Establecer el shim de LoggerRepositorySkeleton.remove_m_configurationResetEvent(LoggerRepositoryConfigurationResetEventHandler value)</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.AllInstances.m_shutdownEventAddLoggerRepositoryShutdownEventHandler">
            <summary>Establecer el shim de LoggerRepositorySkeleton.add_m_shutdownEvent(LoggerRepositoryShutdownEventHandler value)</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.AllInstances.m_shutdownEventRemoveLoggerRepositoryShutdownEventHandler">
            <summary>Establecer el shim de LoggerRepositorySkeleton.remove_m_shutdownEvent(LoggerRepositoryShutdownEventHandler value)</summary>
        </member>
        <member name="M:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.Bind(log4net.Appender.IFlushable)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.Bind(log4net.Repository.ILoggerRepository)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.ConfigurationChangedAddLoggerRepositoryConfigurationChangedEventHandler">
            <summary>Establecer el shim de LoggerRepositorySkeleton.add_ConfigurationChanged(LoggerRepositoryConfigurationChangedEventHandler value)</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.ConfigurationChangedRemoveLoggerRepositoryConfigurationChangedEventHandler">
            <summary>Establecer el shim de LoggerRepositorySkeleton.remove_ConfigurationChanged(LoggerRepositoryConfigurationChangedEventHandler value)</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.ConfigurationMessagesGet">
            <summary>Establecer el shim de LoggerRepositorySkeleton.get_ConfigurationMessages()</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.ConfigurationMessagesSetICollection">
            <summary>Establecer el shim de LoggerRepositorySkeleton.set_ConfigurationMessages(ICollection value)</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.ConfigurationResetAddLoggerRepositoryConfigurationResetEventHandler">
            <summary>Establecer el shim de LoggerRepositorySkeleton.add_ConfigurationReset(LoggerRepositoryConfigurationResetEventHandler value)</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.ConfigurationResetRemoveLoggerRepositoryConfigurationResetEventHandler">
            <summary>Establecer el shim de LoggerRepositorySkeleton.remove_ConfigurationReset(LoggerRepositoryConfigurationResetEventHandler value)</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.ConfiguredGet">
            <summary>Establecer el shim de LoggerRepositorySkeleton.get_Configured()</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.ConfiguredSetBoolean">
            <summary>Establecer el shim de LoggerRepositorySkeleton.set_Configured(Boolean value)</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.Constructor">
            <summary>Establecer el shim de LoggerRepositorySkeleton.LoggerRepositorySkeleton()</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.ConstructorPropertiesDictionary">
            <summary>Establecer el shim de LoggerRepositorySkeleton.LoggerRepositorySkeleton(PropertiesDictionary properties)</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.FlushInt32">
            <summary>Establecer el shim de LoggerRepositorySkeleton.Flush(Int32 millisecondsTimeout)</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.GetWaitTimeDateTimeInt32">
            <summary>Establecer el shim de LoggerRepositorySkeleton.GetWaitTime(DateTime startTimeUtc, Int32 millisecondsTimeout)</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.LevelMapGet">
            <summary>Establecer el shim de LoggerRepositorySkeleton.get_LevelMap()</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.NameGet">
            <summary>Establecer el shim de LoggerRepositorySkeleton.get_Name()</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.NameSetString">
            <summary>Establecer el shim de LoggerRepositorySkeleton.set_Name(String value)</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.OnConfigurationChangedEventArgs">
            <summary>Establecer el shim de LoggerRepositorySkeleton.OnConfigurationChanged(EventArgs e)</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.OnConfigurationResetEventArgs">
            <summary>Establecer el shim de LoggerRepositorySkeleton.OnConfigurationReset(EventArgs e)</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.OnShutdownEventArgs">
            <summary>Establecer el shim de LoggerRepositorySkeleton.OnShutdown(EventArgs e)</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.PluginMapGet">
            <summary>Establecer el shim de LoggerRepositorySkeleton.get_PluginMap()</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.PropertiesGet">
            <summary>Establecer el shim de LoggerRepositorySkeleton.get_Properties()</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.RaiseConfigurationChangedEventArgs">
            <summary>Establecer el shim de LoggerRepositorySkeleton.RaiseConfigurationChanged(EventArgs e)</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.RendererMapGet">
            <summary>Establecer el shim de LoggerRepositorySkeleton.get_RendererMap()</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.ResetConfiguration">
            <summary>Establecer el shim de LoggerRepositorySkeleton.ResetConfiguration()</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.Shutdown">
            <summary>Establecer el shim de LoggerRepositorySkeleton.Shutdown()</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.ShutdownEventAddLoggerRepositoryShutdownEventHandler">
            <summary>Establecer el shim de LoggerRepositorySkeleton.add_ShutdownEvent(LoggerRepositoryShutdownEventHandler value)</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.ShutdownEventRemoveLoggerRepositoryShutdownEventHandler">
            <summary>Establecer el shim de LoggerRepositorySkeleton.remove_ShutdownEvent(LoggerRepositoryShutdownEventHandler value)</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.StaticConstructor">
            <summary>Establecer el shim de LoggerRepositorySkeleton.LoggerRepositorySkeleton()</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.ThresholdGet">
            <summary>Establecer el shim de LoggerRepositorySkeleton.get_Threshold()</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.ThresholdSetLevel">
            <summary>Establecer el shim de LoggerRepositorySkeleton.set_Threshold(Level value)</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.m_configurationChangedEventAddLoggerRepositoryConfigurationChangedEventHandler">
            <summary>Establecer el shim de LoggerRepositorySkeleton.add_m_configurationChangedEvent(LoggerRepositoryConfigurationChangedEventHandler value)</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.m_configurationChangedEventRemoveLoggerRepositoryConfigurationChangedEventHandler">
            <summary>Establecer el shim de LoggerRepositorySkeleton.remove_m_configurationChangedEvent(LoggerRepositoryConfigurationChangedEventHandler value)</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.m_configurationResetEventAddLoggerRepositoryConfigurationResetEventHandler">
            <summary>Establecer el shim de LoggerRepositorySkeleton.add_m_configurationResetEvent(LoggerRepositoryConfigurationResetEventHandler value)</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.m_configurationResetEventRemoveLoggerRepositoryConfigurationResetEventHandler">
            <summary>Establecer el shim de LoggerRepositorySkeleton.remove_m_configurationResetEvent(LoggerRepositoryConfigurationResetEventHandler value)</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.m_shutdownEventAddLoggerRepositoryShutdownEventHandler">
            <summary>Establecer el shim de LoggerRepositorySkeleton.add_m_shutdownEvent(LoggerRepositoryShutdownEventHandler value)</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.ShimLoggerRepositorySkeleton.m_shutdownEventRemoveLoggerRepositoryShutdownEventHandler">
            <summary>Establecer el shim de LoggerRepositorySkeleton.remove_m_shutdownEvent(LoggerRepositoryShutdownEventHandler value)</summary>
        </member>
        <member name="T:log4net.Repository.Fakes.StubConfigurationChangedEventArgs">
            <summary>Tipo stub de log4net.Repository.ConfigurationChangedEventArgs</summary>
        </member>
        <member name="M:log4net.Repository.Fakes.StubConfigurationChangedEventArgs.#ctor(System.Collections.ICollection)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.StubConfigurationChangedEventArgs.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:log4net.Repository.Fakes.StubConfigurationChangedEventArgs.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubConfigurationChangedEventArgs</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.StubConfigurationChangedEventArgs.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.StubConfigurationChangedEventArgs.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:log4net.Repository.Fakes.StubIBasicRepositoryConfigurator">
            <summary>Tipo stub de log4net.Repository.IBasicRepositoryConfigurator</summary>
        </member>
        <member name="M:log4net.Repository.Fakes.StubIBasicRepositoryConfigurator.#ctor">
            <summary>Inicializa una nueva instancia de type StubIBasicRepositoryConfigurator</summary>
        </member>
        <member name="F:log4net.Repository.Fakes.StubIBasicRepositoryConfigurator.ConfigureIAppender">
            <summary>Establecer el stub de IBasicRepositoryConfigurator.Configure(IAppender appender)</summary>
        </member>
        <member name="F:log4net.Repository.Fakes.StubIBasicRepositoryConfigurator.ConfigureIAppenderArray">
            <summary>Establecer el stub de IBasicRepositoryConfigurator.Configure(IAppender[] appenders)</summary>
        </member>
        <member name="M:log4net.Repository.Fakes.StubIBasicRepositoryConfigurator.log4net#Repository#IBasicRepositoryConfigurator#Configure(log4net.Appender.IAppender)">
            <summary>Establecer el stub de IBasicRepositoryConfigurator.Configure(IAppender appender)</summary>
        </member>
        <member name="M:log4net.Repository.Fakes.StubIBasicRepositoryConfigurator.log4net#Repository#IBasicRepositoryConfigurator#Configure(log4net.Appender.IAppender[])">
            <summary>Establecer el stub de IBasicRepositoryConfigurator.Configure(IAppender[] appenders)</summary>
        </member>
        <member name="T:log4net.Repository.Fakes.StubILoggerRepository">
            <summary>Tipo stub de log4net.Repository.ILoggerRepository</summary>
        </member>
        <member name="M:log4net.Repository.Fakes.StubILoggerRepository.#ctor">
            <summary>Inicializa una nueva instancia de type StubILoggerRepository</summary>
        </member>
        <member name="M:log4net.Repository.Fakes.StubILoggerRepository.AttachBackingFieldToConfigurationMessages">
            <summary>Asocia delegados para emular StubILoggerRepository.ConfigurationMessages como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Repository.Fakes.StubILoggerRepository.AttachBackingFieldToConfigured">
            <summary>Asocia delegados para emular StubILoggerRepository.Configured como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Repository.Fakes.StubILoggerRepository.AttachBackingFieldToName">
            <summary>Asocia delegados para emular StubILoggerRepository.Name como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Repository.Fakes.StubILoggerRepository.AttachBackingFieldToThreshold">
            <summary>Asocia delegados para emular StubILoggerRepository.Threshold como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.StubILoggerRepository.log4net#Repository#ILoggerRepository#ConfigurationMessages">
            <summary>Establecer el stub de ILoggerRepository.get_ConfigurationMessages()</summary>
        </member>
        <member name="F:log4net.Repository.Fakes.StubILoggerRepository.ConfigurationMessagesGet">
            <summary>Establecer el stub de ILoggerRepository.get_ConfigurationMessages()</summary>
        </member>
        <member name="F:log4net.Repository.Fakes.StubILoggerRepository.ConfigurationMessagesSetICollection">
            <summary>Establecer el stub de ILoggerRepository.set_ConfigurationMessages(ICollection value)</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.StubILoggerRepository.log4net#Repository#ILoggerRepository#Configured">
            <summary>Establecer el stub de ILoggerRepository.get_Configured()</summary>
        </member>
        <member name="F:log4net.Repository.Fakes.StubILoggerRepository.ConfiguredGet">
            <summary>Establecer el stub de ILoggerRepository.get_Configured()</summary>
        </member>
        <member name="F:log4net.Repository.Fakes.StubILoggerRepository.ConfiguredSetBoolean">
            <summary>Establecer el stub de ILoggerRepository.set_Configured(Boolean value)</summary>
        </member>
        <member name="F:log4net.Repository.Fakes.StubILoggerRepository.ExistsString">
            <summary>Establecer el stub de ILoggerRepository.Exists(String name)</summary>
        </member>
        <member name="F:log4net.Repository.Fakes.StubILoggerRepository.GetAppenders">
            <summary>Establecer el stub de ILoggerRepository.GetAppenders()</summary>
        </member>
        <member name="F:log4net.Repository.Fakes.StubILoggerRepository.GetCurrentLoggers">
            <summary>Establecer el stub de ILoggerRepository.GetCurrentLoggers()</summary>
        </member>
        <member name="F:log4net.Repository.Fakes.StubILoggerRepository.GetLoggerString">
            <summary>Establecer el stub de ILoggerRepository.GetLogger(String name)</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.StubILoggerRepository.log4net#Repository#ILoggerRepository#LevelMap">
            <summary>Establecer el stub de ILoggerRepository.get_LevelMap()</summary>
        </member>
        <member name="F:log4net.Repository.Fakes.StubILoggerRepository.LevelMapGet">
            <summary>Establecer el stub de ILoggerRepository.get_LevelMap()</summary>
        </member>
        <member name="F:log4net.Repository.Fakes.StubILoggerRepository.LogLoggingEvent">
            <summary>Establecer el stub de ILoggerRepository.Log(LoggingEvent logEvent)</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.StubILoggerRepository.log4net#Repository#ILoggerRepository#Name">
            <summary>Establecer el stub de ILoggerRepository.get_Name()</summary>
        </member>
        <member name="F:log4net.Repository.Fakes.StubILoggerRepository.NameGet">
            <summary>Establecer el stub de ILoggerRepository.get_Name()</summary>
        </member>
        <member name="F:log4net.Repository.Fakes.StubILoggerRepository.NameSetString">
            <summary>Establecer el stub de ILoggerRepository.set_Name(String value)</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.StubILoggerRepository.log4net#Repository#ILoggerRepository#PluginMap">
            <summary>Establecer el stub de ILoggerRepository.get_PluginMap()</summary>
        </member>
        <member name="F:log4net.Repository.Fakes.StubILoggerRepository.PluginMapGet">
            <summary>Establecer el stub de ILoggerRepository.get_PluginMap()</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.StubILoggerRepository.log4net#Repository#ILoggerRepository#Properties">
            <summary>Establecer el stub de ILoggerRepository.get_Properties()</summary>
        </member>
        <member name="F:log4net.Repository.Fakes.StubILoggerRepository.PropertiesGet">
            <summary>Establecer el stub de ILoggerRepository.get_Properties()</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.StubILoggerRepository.log4net#Repository#ILoggerRepository#RendererMap">
            <summary>Establecer el stub de ILoggerRepository.get_RendererMap()</summary>
        </member>
        <member name="F:log4net.Repository.Fakes.StubILoggerRepository.RendererMapGet">
            <summary>Establecer el stub de ILoggerRepository.get_RendererMap()</summary>
        </member>
        <member name="F:log4net.Repository.Fakes.StubILoggerRepository.ResetConfiguration">
            <summary>Establecer el stub de ILoggerRepository.ResetConfiguration()</summary>
        </member>
        <member name="F:log4net.Repository.Fakes.StubILoggerRepository.Shutdown">
            <summary>Establecer el stub de ILoggerRepository.Shutdown()</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.StubILoggerRepository.log4net#Repository#ILoggerRepository#Threshold">
            <summary>Establecer el stub de ILoggerRepository.get_Threshold()</summary>
        </member>
        <member name="F:log4net.Repository.Fakes.StubILoggerRepository.ThresholdGet">
            <summary>Establecer el stub de ILoggerRepository.get_Threshold()</summary>
        </member>
        <member name="F:log4net.Repository.Fakes.StubILoggerRepository.ThresholdSetLevel">
            <summary>Establecer el stub de ILoggerRepository.set_Threshold(Level value)</summary>
        </member>
        <member name="M:log4net.Repository.Fakes.StubILoggerRepository.log4net#Repository#ILoggerRepository#Exists(System.String)">
            <summary>Establecer el stub de ILoggerRepository.Exists(String name)</summary>
        </member>
        <member name="M:log4net.Repository.Fakes.StubILoggerRepository.log4net#Repository#ILoggerRepository#GetAppenders">
            <summary>Establecer el stub de ILoggerRepository.GetAppenders()</summary>
        </member>
        <member name="M:log4net.Repository.Fakes.StubILoggerRepository.log4net#Repository#ILoggerRepository#GetCurrentLoggers">
            <summary>Establecer el stub de ILoggerRepository.GetCurrentLoggers()</summary>
        </member>
        <member name="M:log4net.Repository.Fakes.StubILoggerRepository.log4net#Repository#ILoggerRepository#GetLogger(System.String)">
            <summary>Establecer el stub de ILoggerRepository.GetLogger(String name)</summary>
        </member>
        <member name="M:log4net.Repository.Fakes.StubILoggerRepository.log4net#Repository#ILoggerRepository#Log(log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de ILoggerRepository.Log(LoggingEvent logEvent)</summary>
        </member>
        <member name="M:log4net.Repository.Fakes.StubILoggerRepository.log4net#Repository#ILoggerRepository#ResetConfiguration">
            <summary>Establecer el stub de ILoggerRepository.ResetConfiguration()</summary>
        </member>
        <member name="M:log4net.Repository.Fakes.StubILoggerRepository.log4net#Repository#ILoggerRepository#Shutdown">
            <summary>Establecer el stub de ILoggerRepository.Shutdown()</summary>
        </member>
        <member name="T:log4net.Repository.Fakes.StubIXmlRepositoryConfigurator">
            <summary>Tipo stub de log4net.Repository.IXmlRepositoryConfigurator</summary>
        </member>
        <member name="M:log4net.Repository.Fakes.StubIXmlRepositoryConfigurator.#ctor">
            <summary>Inicializa una nueva instancia de type StubIXmlRepositoryConfigurator</summary>
        </member>
        <member name="F:log4net.Repository.Fakes.StubIXmlRepositoryConfigurator.ConfigureXmlElement">
            <summary>Establecer el stub de IXmlRepositoryConfigurator.Configure(XmlElement element)</summary>
        </member>
        <member name="M:log4net.Repository.Fakes.StubIXmlRepositoryConfigurator.log4net#Repository#IXmlRepositoryConfigurator#Configure(System.Xml.XmlElement)">
            <summary>Establecer el stub de IXmlRepositoryConfigurator.Configure(XmlElement element)</summary>
        </member>
        <member name="T:log4net.Repository.Fakes.StubLoggerRepositorySkeleton">
            <summary>Tipo stub de log4net.Repository.LoggerRepositorySkeleton</summary>
        </member>
        <member name="M:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.#ctor(log4net.Util.PropertiesDictionary)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.AddRenderer(System.Type,log4net.ObjectRenderer.IObjectRenderer)">
            <summary>Establecer el stub de LoggerRepositorySkeleton.AddRenderer(Type typeToRender, IObjectRenderer rendererInstance)</summary>
        </member>
        <member name="F:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.AddRendererTypeIObjectRenderer">
            <summary>Establecer el stub de LoggerRepositorySkeleton.AddRenderer(Type typeToRender, IObjectRenderer rendererInstance)</summary>
        </member>
        <member name="M:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.AttachBackingFieldToConfigurationMessages">
            <summary>Asocia delegados para emular StubLoggerRepositorySkeleton.ConfigurationMessages como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.AttachBackingFieldToConfigured">
            <summary>Asocia delegados para emular StubLoggerRepositorySkeleton.Configured como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.AttachBackingFieldToName">
            <summary>Asocia delegados para emular StubLoggerRepositorySkeleton.Name como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.AttachBackingFieldToThreshold">
            <summary>Asocia delegados para emular StubLoggerRepositorySkeleton.Threshold como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.ConfigurationMessages">
            <summary>Establecer el stub de LoggerRepositorySkeleton.get_ConfigurationMessages()</summary>
        </member>
        <member name="F:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.ConfigurationMessagesGet">
            <summary>Establecer el stub de LoggerRepositorySkeleton.get_ConfigurationMessages()</summary>
        </member>
        <member name="F:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.ConfigurationMessagesSetICollection">
            <summary>Establecer el stub de LoggerRepositorySkeleton.set_ConfigurationMessages(ICollection value)</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.Configured">
            <summary>Establecer el stub de LoggerRepositorySkeleton.get_Configured()</summary>
        </member>
        <member name="F:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.ConfiguredGet">
            <summary>Establecer el stub de LoggerRepositorySkeleton.get_Configured()</summary>
        </member>
        <member name="F:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.ConfiguredSetBoolean">
            <summary>Establecer el stub de LoggerRepositorySkeleton.set_Configured(Boolean value)</summary>
        </member>
        <member name="M:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.Exists(System.String)">
            <summary>Establecer el stub de LoggerRepositorySkeleton.Exists(String name)</summary>
        </member>
        <member name="F:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.ExistsString">
            <summary>Establecer el stub de LoggerRepositorySkeleton.Exists(String name)</summary>
        </member>
        <member name="M:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.GetAppenders">
            <summary>Establecer el stub de LoggerRepositorySkeleton.GetAppenders()</summary>
        </member>
        <member name="F:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.GetAppenders01">
            <summary>Establecer el stub de LoggerRepositorySkeleton.GetAppenders()</summary>
        </member>
        <member name="M:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.GetCurrentLoggers">
            <summary>Establecer el stub de LoggerRepositorySkeleton.GetCurrentLoggers()</summary>
        </member>
        <member name="F:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.GetCurrentLoggers01">
            <summary>Establecer el stub de LoggerRepositorySkeleton.GetCurrentLoggers()</summary>
        </member>
        <member name="M:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.GetLogger(System.String)">
            <summary>Establecer el stub de LoggerRepositorySkeleton.GetLogger(String name)</summary>
        </member>
        <member name="F:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.GetLoggerString">
            <summary>Establecer el stub de LoggerRepositorySkeleton.GetLogger(String name)</summary>
        </member>
        <member name="M:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubLoggerRepositorySkeleton</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.LevelMap">
            <summary>Establecer el stub de LoggerRepositorySkeleton.get_LevelMap()</summary>
        </member>
        <member name="F:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.LevelMapGet">
            <summary>Establecer el stub de LoggerRepositorySkeleton.get_LevelMap()</summary>
        </member>
        <member name="M:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.Log(log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de LoggerRepositorySkeleton.Log(LoggingEvent logEvent)</summary>
        </member>
        <member name="F:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.LogLoggingEvent">
            <summary>Establecer el stub de LoggerRepositorySkeleton.Log(LoggingEvent logEvent)</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.Name">
            <summary>Establecer el stub de LoggerRepositorySkeleton.get_Name()</summary>
        </member>
        <member name="F:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.NameGet">
            <summary>Establecer el stub de LoggerRepositorySkeleton.get_Name()</summary>
        </member>
        <member name="F:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.NameSetString">
            <summary>Establecer el stub de LoggerRepositorySkeleton.set_Name(String value)</summary>
        </member>
        <member name="M:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.OnConfigurationChanged(System.EventArgs)">
            <summary>Establecer el stub de LoggerRepositorySkeleton.OnConfigurationChanged(EventArgs e)</summary>
        </member>
        <member name="F:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.OnConfigurationChangedEventArgs">
            <summary>Establecer el stub de LoggerRepositorySkeleton.OnConfigurationChanged(EventArgs e)</summary>
        </member>
        <member name="M:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.OnConfigurationReset(System.EventArgs)">
            <summary>Establecer el stub de LoggerRepositorySkeleton.OnConfigurationReset(EventArgs e)</summary>
        </member>
        <member name="F:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.OnConfigurationResetEventArgs">
            <summary>Establecer el stub de LoggerRepositorySkeleton.OnConfigurationReset(EventArgs e)</summary>
        </member>
        <member name="M:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.OnShutdown(System.EventArgs)">
            <summary>Establecer el stub de LoggerRepositorySkeleton.OnShutdown(EventArgs e)</summary>
        </member>
        <member name="F:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.OnShutdownEventArgs">
            <summary>Establecer el stub de LoggerRepositorySkeleton.OnShutdown(EventArgs e)</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.PluginMap">
            <summary>Establecer el stub de LoggerRepositorySkeleton.get_PluginMap()</summary>
        </member>
        <member name="F:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.PluginMapGet">
            <summary>Establecer el stub de LoggerRepositorySkeleton.get_PluginMap()</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.RendererMap">
            <summary>Establecer el stub de LoggerRepositorySkeleton.get_RendererMap()</summary>
        </member>
        <member name="F:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.RendererMapGet">
            <summary>Establecer el stub de LoggerRepositorySkeleton.get_RendererMap()</summary>
        </member>
        <member name="M:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.ResetConfiguration">
            <summary>Establecer el stub de LoggerRepositorySkeleton.ResetConfiguration()</summary>
        </member>
        <member name="F:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.ResetConfiguration01">
            <summary>Establecer el stub de LoggerRepositorySkeleton.ResetConfiguration()</summary>
        </member>
        <member name="M:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.Shutdown">
            <summary>Establecer el stub de LoggerRepositorySkeleton.Shutdown()</summary>
        </member>
        <member name="F:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.Shutdown01">
            <summary>Establecer el stub de LoggerRepositorySkeleton.Shutdown()</summary>
        </member>
        <member name="P:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.Threshold">
            <summary>Establecer el stub de LoggerRepositorySkeleton.get_Threshold()</summary>
        </member>
        <member name="F:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.ThresholdGet">
            <summary>Establecer el stub de LoggerRepositorySkeleton.get_Threshold()</summary>
        </member>
        <member name="F:log4net.Repository.Fakes.StubLoggerRepositorySkeleton.ThresholdSetLevel">
            <summary>Establecer el stub de LoggerRepositorySkeleton.set_Threshold(Level value)</summary>
        </member>
        <member name="T:log4net.Repository.Hierarchy.Fakes.ShimHierarchy">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Repository.Hierarchy.Hierarchy</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.#ctor(log4net.Repository.Hierarchy.Hierarchy)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.AddPropertyPropertyEntry">
            <summary>Establecer el shim de Hierarchy.AddProperty(PropertyEntry propertyEntry)</summary>
        </member>
        <member name="T:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.AllInstances.AddPropertyPropertyEntry">
            <summary>Establecer el shim de Hierarchy.AddProperty(PropertyEntry propertyEntry)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.AllInstances.BasicRepositoryConfigureIAppenderArray">
            <summary>Establecer el shim de Hierarchy.BasicRepositoryConfigure(IAppender[] appenders)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.AllInstances.Clear">
            <summary>Establecer el shim de Hierarchy.Clear()</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.AllInstances.EmittedNoAppenderWarningGet">
            <summary>Establecer el shim de Hierarchy.get_EmittedNoAppenderWarning()</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.AllInstances.EmittedNoAppenderWarningSetBoolean">
            <summary>Establecer el shim de Hierarchy.set_EmittedNoAppenderWarning(Boolean value)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.AllInstances.ExistsString">
            <summary>Establecer el shim de Hierarchy.Exists(String name)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.AllInstances.GetAppenders">
            <summary>Establecer el shim de Hierarchy.GetAppenders()</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.AllInstances.GetCurrentLoggers">
            <summary>Establecer el shim de Hierarchy.GetCurrentLoggers()</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.AllInstances.GetLoggerString">
            <summary>Establecer el shim de Hierarchy.GetLogger(String name)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.AllInstances.GetLoggerStringILoggerFactory">
            <summary>Establecer el shim de Hierarchy.GetLogger(String name, ILoggerFactory factory)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.AllInstances.IsDisabledLevel">
            <summary>Establecer el shim de Hierarchy.IsDisabled(Level level)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.AllInstances.LogLoggingEvent">
            <summary>Establecer el shim de Hierarchy.Log(LoggingEvent logEvent)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.AllInstances.LoggerCreatedEventAddLoggerCreationEventHandler">
            <summary>Establecer el shim de Hierarchy.add_LoggerCreatedEvent(LoggerCreationEventHandler value)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.AllInstances.LoggerCreatedEventRemoveLoggerCreationEventHandler">
            <summary>Establecer el shim de Hierarchy.remove_LoggerCreatedEvent(LoggerCreationEventHandler value)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.AllInstances.LoggerFactoryGet">
            <summary>Establecer el shim de Hierarchy.get_LoggerFactory()</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.AllInstances.LoggerFactorySetILoggerFactory">
            <summary>Establecer el shim de Hierarchy.set_LoggerFactory(ILoggerFactory value)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.AllInstances.OnLoggerCreationEventLogger">
            <summary>Establecer el shim de Hierarchy.OnLoggerCreationEvent(Logger logger)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.AllInstances.ResetConfiguration">
            <summary>Establecer el shim de Hierarchy.ResetConfiguration()</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.AllInstances.RootGet">
            <summary>Establecer el shim de Hierarchy.get_Root()</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.AllInstances.Shutdown">
            <summary>Establecer el shim de Hierarchy.Shutdown()</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.AllInstances.UpdateParentsLogger">
            <summary>Establecer el shim de Hierarchy.UpdateParents(Logger log)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.AllInstances.XmlRepositoryConfigureXmlElement">
            <summary>Establecer el shim de Hierarchy.XmlRepositoryConfigure(XmlElement element)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.AllInstances.log4netRepositoryIBasicRepositoryConfiguratorConfigureIAppender">
            <summary>Establecer el shim de Hierarchy.log4net.Repository.IBasicRepositoryConfigurator.Configure(IAppender appender)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.AllInstances.log4netRepositoryIBasicRepositoryConfiguratorConfigureIAppenderArray">
            <summary>Establecer el shim de Hierarchy.log4net.Repository.IBasicRepositoryConfigurator.Configure(IAppender[] appenders)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.AllInstances.log4netRepositoryIXmlRepositoryConfiguratorConfigureXmlElement">
            <summary>Establecer el shim de Hierarchy.log4net.Repository.IXmlRepositoryConfigurator.Configure(XmlElement element)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.AllInstances.m_loggerCreatedEventAddLoggerCreationEventHandler">
            <summary>Establecer el shim de Hierarchy.add_m_loggerCreatedEvent(LoggerCreationEventHandler value)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.AllInstances.m_loggerCreatedEventRemoveLoggerCreationEventHandler">
            <summary>Establecer el shim de Hierarchy.remove_m_loggerCreatedEvent(LoggerCreationEventHandler value)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.BasicRepositoryConfigureIAppenderArray">
            <summary>Establecer el shim de Hierarchy.BasicRepositoryConfigure(IAppender[] appenders)</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.Bind(log4net.Appender.IFlushable)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.Bind(log4net.Repository.IBasicRepositoryConfigurator)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.Bind(log4net.Repository.ILoggerRepository)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.Bind(log4net.Repository.IXmlRepositoryConfigurator)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.Clear">
            <summary>Establecer el shim de Hierarchy.Clear()</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.CollectAppenderArrayListIAppender">
            <summary>Establecer el shim de Hierarchy.CollectAppender(ArrayList appenderList, IAppender appender)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.CollectAppendersArrayListIAppenderAttachable">
            <summary>Establecer el shim de Hierarchy.CollectAppenders(ArrayList appenderList, IAppenderAttachable container)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.Constructor">
            <summary>Establecer el shim de Hierarchy.Hierarchy()</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.ConstructorILoggerFactory">
            <summary>Establecer el shim de Hierarchy.Hierarchy(ILoggerFactory loggerFactory)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.ConstructorPropertiesDictionary">
            <summary>Establecer el shim de Hierarchy.Hierarchy(PropertiesDictionary properties)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.ConstructorPropertiesDictionaryILoggerFactory">
            <summary>Establecer el shim de Hierarchy.Hierarchy(PropertiesDictionary properties, ILoggerFactory loggerFactory)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.EmittedNoAppenderWarningGet">
            <summary>Establecer el shim de Hierarchy.get_EmittedNoAppenderWarning()</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.EmittedNoAppenderWarningSetBoolean">
            <summary>Establecer el shim de Hierarchy.set_EmittedNoAppenderWarning(Boolean value)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.ExistsString">
            <summary>Establecer el shim de Hierarchy.Exists(String name)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.GetAppenders">
            <summary>Establecer el shim de Hierarchy.GetAppenders()</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.GetCurrentLoggers">
            <summary>Establecer el shim de Hierarchy.GetCurrentLoggers()</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.GetLoggerString">
            <summary>Establecer el shim de Hierarchy.GetLogger(String name)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.GetLoggerStringILoggerFactory">
            <summary>Establecer el shim de Hierarchy.GetLogger(String name, ILoggerFactory factory)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.IsDisabledLevel">
            <summary>Establecer el shim de Hierarchy.IsDisabled(Level level)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.LogLoggingEvent">
            <summary>Establecer el shim de Hierarchy.Log(LoggingEvent logEvent)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.LoggerCreatedEventAddLoggerCreationEventHandler">
            <summary>Establecer el shim de Hierarchy.add_LoggerCreatedEvent(LoggerCreationEventHandler value)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.LoggerCreatedEventRemoveLoggerCreationEventHandler">
            <summary>Establecer el shim de Hierarchy.remove_LoggerCreatedEvent(LoggerCreationEventHandler value)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.LoggerFactoryGet">
            <summary>Establecer el shim de Hierarchy.get_LoggerFactory()</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.LoggerFactorySetILoggerFactory">
            <summary>Establecer el shim de Hierarchy.set_LoggerFactory(ILoggerFactory value)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.OnLoggerCreationEventLogger">
            <summary>Establecer el shim de Hierarchy.OnLoggerCreationEvent(Logger logger)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.ResetConfiguration">
            <summary>Establecer el shim de Hierarchy.ResetConfiguration()</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.RootGet">
            <summary>Establecer el shim de Hierarchy.get_Root()</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.Shutdown">
            <summary>Establecer el shim de Hierarchy.Shutdown()</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.StaticConstructor">
            <summary>Establecer el shim de Hierarchy.Hierarchy()</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.UpdateParentsLogger">
            <summary>Establecer el shim de Hierarchy.UpdateParents(Logger log)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.XmlRepositoryConfigureXmlElement">
            <summary>Establecer el shim de Hierarchy.XmlRepositoryConfigure(XmlElement element)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.log4netRepositoryIBasicRepositoryConfiguratorConfigureIAppender">
            <summary>Establecer el shim de Hierarchy.log4net.Repository.IBasicRepositoryConfigurator.Configure(IAppender appender)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.log4netRepositoryIBasicRepositoryConfiguratorConfigureIAppenderArray">
            <summary>Establecer el shim de Hierarchy.log4net.Repository.IBasicRepositoryConfigurator.Configure(IAppender[] appenders)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.log4netRepositoryIXmlRepositoryConfiguratorConfigureXmlElement">
            <summary>Establecer el shim de Hierarchy.log4net.Repository.IXmlRepositoryConfigurator.Configure(XmlElement element)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.m_loggerCreatedEventAddLoggerCreationEventHandler">
            <summary>Establecer el shim de Hierarchy.add_m_loggerCreatedEvent(LoggerCreationEventHandler value)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimHierarchy.m_loggerCreatedEventRemoveLoggerCreationEventHandler">
            <summary>Establecer el shim de Hierarchy.remove_m_loggerCreatedEvent(LoggerCreationEventHandler value)</summary>
        </member>
        <member name="T:log4net.Repository.Hierarchy.Fakes.ShimLogger">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Repository.Hierarchy.Logger</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.ShimLogger.#ctor(log4net.Repository.Hierarchy.Logger)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.AddAppenderIAppender">
            <summary>Establecer el shim de Logger.AddAppender(IAppender newAppender)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.AdditivityGet">
            <summary>Establecer el shim de Logger.get_Additivity()</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.AdditivitySetBoolean">
            <summary>Establecer el shim de Logger.set_Additivity(Boolean value)</summary>
        </member>
        <member name="T:log4net.Repository.Hierarchy.Fakes.ShimLogger.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.AllInstances.AddAppenderIAppender">
            <summary>Establecer el shim de Logger.AddAppender(IAppender newAppender)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.AllInstances.AdditivityGet">
            <summary>Establecer el shim de Logger.get_Additivity()</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.AllInstances.AdditivitySetBoolean">
            <summary>Establecer el shim de Logger.set_Additivity(Boolean value)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.AllInstances.AppendersGet">
            <summary>Establecer el shim de Logger.get_Appenders()</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.AllInstances.CallAppendersLoggingEvent">
            <summary>Establecer el shim de Logger.CallAppenders(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.AllInstances.CloseNestedAppenders">
            <summary>Establecer el shim de Logger.CloseNestedAppenders()</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.AllInstances.EffectiveLevelGet">
            <summary>Establecer el shim de Logger.get_EffectiveLevel()</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.AllInstances.ForcedLogLoggingEvent">
            <summary>Establecer el shim de Logger.ForcedLog(LoggingEvent logEvent)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.AllInstances.ForcedLogTypeLevelObjectException">
            <summary>Establecer el shim de Logger.ForcedLog(Type callerStackBoundaryDeclaringType, Level level, Object message, Exception exception)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.AllInstances.GetAppenderString">
            <summary>Establecer el shim de Logger.GetAppender(String name)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.AllInstances.HierarchyGet">
            <summary>Establecer el shim de Logger.get_Hierarchy()</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.AllInstances.HierarchySetHierarchy">
            <summary>Establecer el shim de Logger.set_Hierarchy(Hierarchy value)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.AllInstances.IsEnabledForLevel">
            <summary>Establecer el shim de Logger.IsEnabledFor(Level level)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.AllInstances.LevelGet">
            <summary>Establecer el shim de Logger.get_Level()</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.AllInstances.LevelSetLevel">
            <summary>Establecer el shim de Logger.set_Level(Level value)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.AllInstances.LogLevelObjectException">
            <summary>Establecer el shim de Logger.Log(Level level, Object message, Exception exception)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.AllInstances.LogLoggingEvent">
            <summary>Establecer el shim de Logger.Log(LoggingEvent logEvent)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.AllInstances.LogTypeLevelObjectException">
            <summary>Establecer el shim de Logger.Log(Type callerStackBoundaryDeclaringType, Level level, Object message, Exception exception)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.AllInstances.NameGet">
            <summary>Establecer el shim de Logger.get_Name()</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.AllInstances.ParentGet">
            <summary>Establecer el shim de Logger.get_Parent()</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.AllInstances.ParentSetLogger">
            <summary>Establecer el shim de Logger.set_Parent(Logger value)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.AllInstances.RemoveAllAppenders">
            <summary>Establecer el shim de Logger.RemoveAllAppenders()</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.AllInstances.RemoveAppenderIAppender">
            <summary>Establecer el shim de Logger.RemoveAppender(IAppender appender)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.AllInstances.RemoveAppenderString">
            <summary>Establecer el shim de Logger.RemoveAppender(String name)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.AllInstances.RepositoryGet">
            <summary>Establecer el shim de Logger.get_Repository()</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.AppendersGet">
            <summary>Establecer el shim de Logger.get_Appenders()</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.ShimLogger.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.ShimLogger.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.ShimLogger.Bind(log4net.Core.IAppenderAttachable)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.ShimLogger.Bind(log4net.Core.ILogger)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.CallAppendersLoggingEvent">
            <summary>Establecer el shim de Logger.CallAppenders(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.CloseNestedAppenders">
            <summary>Establecer el shim de Logger.CloseNestedAppenders()</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.ConstructorString">
            <summary>Establecer el shim de Logger.Logger(String name)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.EffectiveLevelGet">
            <summary>Establecer el shim de Logger.get_EffectiveLevel()</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.ForcedLogLoggingEvent">
            <summary>Establecer el shim de Logger.ForcedLog(LoggingEvent logEvent)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.ForcedLogTypeLevelObjectException">
            <summary>Establecer el shim de Logger.ForcedLog(Type callerStackBoundaryDeclaringType, Level level, Object message, Exception exception)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.GetAppenderString">
            <summary>Establecer el shim de Logger.GetAppender(String name)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.HierarchyGet">
            <summary>Establecer el shim de Logger.get_Hierarchy()</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.HierarchySetHierarchy">
            <summary>Establecer el shim de Logger.set_Hierarchy(Hierarchy value)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.IsEnabledForLevel">
            <summary>Establecer el shim de Logger.IsEnabledFor(Level level)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.LevelGet">
            <summary>Establecer el shim de Logger.get_Level()</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.LevelSetLevel">
            <summary>Establecer el shim de Logger.set_Level(Level value)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.LogLevelObjectException">
            <summary>Establecer el shim de Logger.Log(Level level, Object message, Exception exception)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.LogLoggingEvent">
            <summary>Establecer el shim de Logger.Log(LoggingEvent logEvent)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.LogTypeLevelObjectException">
            <summary>Establecer el shim de Logger.Log(Type callerStackBoundaryDeclaringType, Level level, Object message, Exception exception)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.NameGet">
            <summary>Establecer el shim de Logger.get_Name()</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.ParentGet">
            <summary>Establecer el shim de Logger.get_Parent()</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.ParentSetLogger">
            <summary>Establecer el shim de Logger.set_Parent(Logger value)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.RemoveAllAppenders">
            <summary>Establecer el shim de Logger.RemoveAllAppenders()</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.RemoveAppenderIAppender">
            <summary>Establecer el shim de Logger.RemoveAppender(IAppender appender)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.RemoveAppenderString">
            <summary>Establecer el shim de Logger.RemoveAppender(String name)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.RepositoryGet">
            <summary>Establecer el shim de Logger.get_Repository()</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLogger.StaticConstructor">
            <summary>Establecer el shim de Logger.Logger()</summary>
        </member>
        <member name="T:log4net.Repository.Hierarchy.Fakes.ShimLoggerCreationEventArgs">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Repository.Hierarchy.LoggerCreationEventArgs</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.ShimLoggerCreationEventArgs.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.ShimLoggerCreationEventArgs.#ctor(log4net.Repository.Hierarchy.LoggerCreationEventArgs)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Repository.Hierarchy.Fakes.ShimLoggerCreationEventArgs.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLoggerCreationEventArgs.AllInstances.LoggerGet">
            <summary>Establecer el shim de LoggerCreationEventArgs.get_Logger()</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.ShimLoggerCreationEventArgs.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.ShimLoggerCreationEventArgs.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLoggerCreationEventArgs.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLoggerCreationEventArgs.ConstructorLogger">
            <summary>Establecer el shim de LoggerCreationEventArgs.LoggerCreationEventArgs(Logger log)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimLoggerCreationEventArgs.LoggerGet">
            <summary>Establecer el shim de LoggerCreationEventArgs.get_Logger()</summary>
        </member>
        <member name="T:log4net.Repository.Hierarchy.Fakes.ShimRootLogger">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Repository.Hierarchy.RootLogger</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.ShimRootLogger.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.ShimRootLogger.#ctor(log4net.Repository.Hierarchy.RootLogger)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Repository.Hierarchy.Fakes.ShimRootLogger.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimRootLogger.AllInstances.EffectiveLevelGet">
            <summary>Establecer el shim de RootLogger.get_EffectiveLevel()</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimRootLogger.AllInstances.LevelGet">
            <summary>Establecer el shim de RootLogger.get_Level()</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimRootLogger.AllInstances.LevelSetLevel">
            <summary>Establecer el shim de RootLogger.set_Level(Level value)</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.ShimRootLogger.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.ShimRootLogger.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimRootLogger.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.ShimRootLogger.Bind(log4net.Core.IAppenderAttachable)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.ShimRootLogger.Bind(log4net.Core.ILogger)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimRootLogger.ConstructorLevel">
            <summary>Establecer el shim de RootLogger.RootLogger(Level level)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimRootLogger.EffectiveLevelGet">
            <summary>Establecer el shim de RootLogger.get_EffectiveLevel()</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimRootLogger.LevelGet">
            <summary>Establecer el shim de RootLogger.get_Level()</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimRootLogger.LevelSetLevel">
            <summary>Establecer el shim de RootLogger.set_Level(Level value)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimRootLogger.StaticConstructor">
            <summary>Establecer el shim de RootLogger.RootLogger()</summary>
        </member>
        <member name="T:log4net.Repository.Hierarchy.Fakes.ShimXmlHierarchyConfigurator">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Repository.Hierarchy.XmlHierarchyConfigurator</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.ShimXmlHierarchyConfigurator.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.ShimXmlHierarchyConfigurator.#ctor(log4net.Repository.Hierarchy.XmlHierarchyConfigurator)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Repository.Hierarchy.Fakes.ShimXmlHierarchyConfigurator.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimXmlHierarchyConfigurator.AllInstances.ConfigureXmlElement">
            <summary>Establecer el shim de XmlHierarchyConfigurator.Configure(XmlElement element)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimXmlHierarchyConfigurator.AllInstances.ConvertStringToTypeString">
            <summary>Establecer el shim de XmlHierarchyConfigurator.ConvertStringTo(Type type, String value)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimXmlHierarchyConfigurator.AllInstances.CreateCaseInsensitiveWrapperIDictionary">
            <summary>Establecer el shim de XmlHierarchyConfigurator.CreateCaseInsensitiveWrapper(IDictionary dict)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimXmlHierarchyConfigurator.AllInstances.CreateObjectFromXmlXmlElementTypeType">
            <summary>Establecer el shim de XmlHierarchyConfigurator.CreateObjectFromXml(XmlElement element, Type defaultTargetType, Type typeConstraint)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimXmlHierarchyConfigurator.AllInstances.FindAppenderByReferenceXmlElement">
            <summary>Establecer el shim de XmlHierarchyConfigurator.FindAppenderByReference(XmlElement appenderRef)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimXmlHierarchyConfigurator.AllInstances.FindMethodInfoTypeString">
            <summary>Establecer el shim de XmlHierarchyConfigurator.FindMethodInfo(Type targetType, String name)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimXmlHierarchyConfigurator.AllInstances.HasAttributesOrElementsXmlElement">
            <summary>Establecer el shim de XmlHierarchyConfigurator.HasAttributesOrElements(XmlElement element)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimXmlHierarchyConfigurator.AllInstances.HasCaseInsensitiveEnvironmentGet">
            <summary>Establecer el shim de XmlHierarchyConfigurator.get_HasCaseInsensitiveEnvironment()</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimXmlHierarchyConfigurator.AllInstances.ParseAppenderXmlElement">
            <summary>Establecer el shim de XmlHierarchyConfigurator.ParseAppender(XmlElement appenderElement)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimXmlHierarchyConfigurator.AllInstances.ParseChildrenOfLoggerElementXmlElementLoggerBoolean">
            <summary>Establecer el shim de XmlHierarchyConfigurator.ParseChildrenOfLoggerElement(XmlElement catElement, Logger log, Boolean isRoot)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimXmlHierarchyConfigurator.AllInstances.ParseLevelXmlElementLoggerBoolean">
            <summary>Establecer el shim de XmlHierarchyConfigurator.ParseLevel(XmlElement element, Logger log, Boolean isRoot)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimXmlHierarchyConfigurator.AllInstances.ParseLoggerXmlElement">
            <summary>Establecer el shim de XmlHierarchyConfigurator.ParseLogger(XmlElement loggerElement)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimXmlHierarchyConfigurator.AllInstances.ParseRendererXmlElement">
            <summary>Establecer el shim de XmlHierarchyConfigurator.ParseRenderer(XmlElement element)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimXmlHierarchyConfigurator.AllInstances.ParseRootXmlElement">
            <summary>Establecer el shim de XmlHierarchyConfigurator.ParseRoot(XmlElement rootElement)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimXmlHierarchyConfigurator.AllInstances.SetParameterXmlElementObject">
            <summary>Establecer el shim de XmlHierarchyConfigurator.SetParameter(XmlElement element, Object target)</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.ShimXmlHierarchyConfigurator.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.ShimXmlHierarchyConfigurator.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimXmlHierarchyConfigurator.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimXmlHierarchyConfigurator.ConfigureXmlElement">
            <summary>Establecer el shim de XmlHierarchyConfigurator.Configure(XmlElement element)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimXmlHierarchyConfigurator.ConstructorHierarchy">
            <summary>Establecer el shim de XmlHierarchyConfigurator.XmlHierarchyConfigurator(Hierarchy hierarchy)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimXmlHierarchyConfigurator.ConvertStringToTypeString">
            <summary>Establecer el shim de XmlHierarchyConfigurator.ConvertStringTo(Type type, String value)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimXmlHierarchyConfigurator.CreateCaseInsensitiveWrapperIDictionary">
            <summary>Establecer el shim de XmlHierarchyConfigurator.CreateCaseInsensitiveWrapper(IDictionary dict)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimXmlHierarchyConfigurator.CreateObjectFromXmlXmlElementTypeType">
            <summary>Establecer el shim de XmlHierarchyConfigurator.CreateObjectFromXml(XmlElement element, Type defaultTargetType, Type typeConstraint)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimXmlHierarchyConfigurator.FindAppenderByReferenceXmlElement">
            <summary>Establecer el shim de XmlHierarchyConfigurator.FindAppenderByReference(XmlElement appenderRef)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimXmlHierarchyConfigurator.FindMethodInfoTypeString">
            <summary>Establecer el shim de XmlHierarchyConfigurator.FindMethodInfo(Type targetType, String name)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimXmlHierarchyConfigurator.HasAttributesOrElementsXmlElement">
            <summary>Establecer el shim de XmlHierarchyConfigurator.HasAttributesOrElements(XmlElement element)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimXmlHierarchyConfigurator.HasCaseInsensitiveEnvironmentGet">
            <summary>Establecer el shim de XmlHierarchyConfigurator.get_HasCaseInsensitiveEnvironment()</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimXmlHierarchyConfigurator.IsTypeConstructibleType">
            <summary>Establecer el shim de XmlHierarchyConfigurator.IsTypeConstructible(Type type)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimXmlHierarchyConfigurator.ParseAppenderXmlElement">
            <summary>Establecer el shim de XmlHierarchyConfigurator.ParseAppender(XmlElement appenderElement)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimXmlHierarchyConfigurator.ParseChildrenOfLoggerElementXmlElementLoggerBoolean">
            <summary>Establecer el shim de XmlHierarchyConfigurator.ParseChildrenOfLoggerElement(XmlElement catElement, Logger log, Boolean isRoot)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimXmlHierarchyConfigurator.ParseLevelXmlElementLoggerBoolean">
            <summary>Establecer el shim de XmlHierarchyConfigurator.ParseLevel(XmlElement element, Logger log, Boolean isRoot)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimXmlHierarchyConfigurator.ParseLoggerXmlElement">
            <summary>Establecer el shim de XmlHierarchyConfigurator.ParseLogger(XmlElement loggerElement)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimXmlHierarchyConfigurator.ParseRendererXmlElement">
            <summary>Establecer el shim de XmlHierarchyConfigurator.ParseRenderer(XmlElement element)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimXmlHierarchyConfigurator.ParseRootXmlElement">
            <summary>Establecer el shim de XmlHierarchyConfigurator.ParseRoot(XmlElement rootElement)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimXmlHierarchyConfigurator.SetParameterXmlElementObject">
            <summary>Establecer el shim de XmlHierarchyConfigurator.SetParameter(XmlElement element, Object target)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.ShimXmlHierarchyConfigurator.StaticConstructor">
            <summary>Establecer el shim de XmlHierarchyConfigurator.XmlHierarchyConfigurator()</summary>
        </member>
        <member name="T:log4net.Repository.Hierarchy.Fakes.StubHierarchy">
            <summary>Tipo stub de log4net.Repository.Hierarchy.Hierarchy</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubHierarchy.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubHierarchy.#ctor(log4net.Repository.Hierarchy.ILoggerFactory)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubHierarchy.#ctor(log4net.Util.PropertiesDictionary)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubHierarchy.#ctor(log4net.Util.PropertiesDictionary,log4net.Repository.Hierarchy.ILoggerFactory)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubHierarchy.AddRenderer(System.Type,log4net.ObjectRenderer.IObjectRenderer)">
            <summary>Establecer el stub de LoggerRepositorySkeleton.AddRenderer(Type typeToRender, IObjectRenderer rendererInstance)</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubHierarchy.AddRendererTypeIObjectRenderer">
            <summary>Establecer el stub de LoggerRepositorySkeleton.AddRenderer(Type typeToRender, IObjectRenderer rendererInstance)</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubHierarchy.AttachBackingFieldToConfigurationMessages">
            <summary>Asocia delegados para emular StubHierarchy.ConfigurationMessages como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubHierarchy.AttachBackingFieldToConfigured">
            <summary>Asocia delegados para emular StubHierarchy.Configured como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubHierarchy.AttachBackingFieldToName">
            <summary>Asocia delegados para emular StubHierarchy.Name como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubHierarchy.AttachBackingFieldToThreshold">
            <summary>Asocia delegados para emular StubHierarchy.Threshold como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.StubHierarchy.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.StubHierarchy.ConfigurationMessages">
            <summary>Establecer el stub de LoggerRepositorySkeleton.get_ConfigurationMessages()</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubHierarchy.ConfigurationMessagesGet">
            <summary>Establecer el stub de LoggerRepositorySkeleton.get_ConfigurationMessages()</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubHierarchy.ConfigurationMessagesSetICollection">
            <summary>Establecer el stub de LoggerRepositorySkeleton.set_ConfigurationMessages(ICollection value)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.StubHierarchy.Configured">
            <summary>Establecer el stub de LoggerRepositorySkeleton.get_Configured()</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubHierarchy.ConfiguredGet">
            <summary>Establecer el stub de LoggerRepositorySkeleton.get_Configured()</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubHierarchy.ConfiguredSetBoolean">
            <summary>Establecer el stub de LoggerRepositorySkeleton.set_Configured(Boolean value)</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubHierarchy.Exists(System.String)">
            <summary>Establecer el stub de Hierarchy.Exists(String name)</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubHierarchy.ExistsString">
            <summary>Establecer el stub de Hierarchy.Exists(String name)</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubHierarchy.GetAppenders">
            <summary>Establecer el stub de Hierarchy.GetAppenders()</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubHierarchy.GetAppenders01">
            <summary>Establecer el stub de Hierarchy.GetAppenders()</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubHierarchy.GetCurrentLoggers">
            <summary>Establecer el stub de Hierarchy.GetCurrentLoggers()</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubHierarchy.GetCurrentLoggers01">
            <summary>Establecer el stub de Hierarchy.GetCurrentLoggers()</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubHierarchy.GetLogger(System.String)">
            <summary>Establecer el stub de Hierarchy.GetLogger(String name)</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubHierarchy.GetLoggerString">
            <summary>Establecer el stub de Hierarchy.GetLogger(String name)</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubHierarchy.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubHierarchy</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.StubHierarchy.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.StubHierarchy.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.StubHierarchy.LevelMap">
            <summary>Establecer el stub de LoggerRepositorySkeleton.get_LevelMap()</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubHierarchy.LevelMapGet">
            <summary>Establecer el stub de LoggerRepositorySkeleton.get_LevelMap()</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubHierarchy.Log(log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de Hierarchy.Log(LoggingEvent logEvent)</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubHierarchy.LogLoggingEvent">
            <summary>Establecer el stub de Hierarchy.Log(LoggingEvent logEvent)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.StubHierarchy.Name">
            <summary>Establecer el stub de LoggerRepositorySkeleton.get_Name()</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubHierarchy.NameGet">
            <summary>Establecer el stub de LoggerRepositorySkeleton.get_Name()</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubHierarchy.NameSetString">
            <summary>Establecer el stub de LoggerRepositorySkeleton.set_Name(String value)</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubHierarchy.OnConfigurationChanged(System.EventArgs)">
            <summary>Establecer el stub de LoggerRepositorySkeleton.OnConfigurationChanged(EventArgs e)</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubHierarchy.OnConfigurationChangedEventArgs">
            <summary>Establecer el stub de LoggerRepositorySkeleton.OnConfigurationChanged(EventArgs e)</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubHierarchy.OnConfigurationReset(System.EventArgs)">
            <summary>Establecer el stub de LoggerRepositorySkeleton.OnConfigurationReset(EventArgs e)</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubHierarchy.OnConfigurationResetEventArgs">
            <summary>Establecer el stub de LoggerRepositorySkeleton.OnConfigurationReset(EventArgs e)</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubHierarchy.OnLoggerCreationEvent(log4net.Repository.Hierarchy.Logger)">
            <summary>Establecer el stub de Hierarchy.OnLoggerCreationEvent(Logger logger)</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubHierarchy.OnLoggerCreationEventLogger">
            <summary>Establecer el stub de Hierarchy.OnLoggerCreationEvent(Logger logger)</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubHierarchy.OnShutdown(System.EventArgs)">
            <summary>Establecer el stub de LoggerRepositorySkeleton.OnShutdown(EventArgs e)</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubHierarchy.OnShutdownEventArgs">
            <summary>Establecer el stub de LoggerRepositorySkeleton.OnShutdown(EventArgs e)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.StubHierarchy.PluginMap">
            <summary>Establecer el stub de LoggerRepositorySkeleton.get_PluginMap()</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubHierarchy.PluginMapGet">
            <summary>Establecer el stub de LoggerRepositorySkeleton.get_PluginMap()</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.StubHierarchy.RendererMap">
            <summary>Establecer el stub de LoggerRepositorySkeleton.get_RendererMap()</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubHierarchy.RendererMapGet">
            <summary>Establecer el stub de LoggerRepositorySkeleton.get_RendererMap()</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubHierarchy.ResetConfiguration">
            <summary>Establecer el stub de Hierarchy.ResetConfiguration()</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubHierarchy.ResetConfiguration01">
            <summary>Establecer el stub de Hierarchy.ResetConfiguration()</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubHierarchy.Shutdown">
            <summary>Establecer el stub de Hierarchy.Shutdown()</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubHierarchy.Shutdown01">
            <summary>Establecer el stub de Hierarchy.Shutdown()</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.StubHierarchy.Threshold">
            <summary>Establecer el stub de LoggerRepositorySkeleton.get_Threshold()</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubHierarchy.ThresholdGet">
            <summary>Establecer el stub de LoggerRepositorySkeleton.get_Threshold()</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubHierarchy.ThresholdSetLevel">
            <summary>Establecer el stub de LoggerRepositorySkeleton.set_Threshold(Level value)</summary>
        </member>
        <member name="T:log4net.Repository.Hierarchy.Fakes.StubILoggerFactory">
            <summary>Tipo stub de log4net.Repository.Hierarchy.ILoggerFactory</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubILoggerFactory.#ctor">
            <summary>Inicializa una nueva instancia de type StubILoggerFactory</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubILoggerFactory.CreateLoggerILoggerRepositoryString">
            <summary>Establecer el stub de ILoggerFactory.CreateLogger(ILoggerRepository repository, String name)</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubILoggerFactory.log4net#Repository#Hierarchy#ILoggerFactory#CreateLogger(log4net.Repository.ILoggerRepository,System.String)">
            <summary>Establecer el stub de ILoggerFactory.CreateLogger(ILoggerRepository repository, String name)</summary>
        </member>
        <member name="T:log4net.Repository.Hierarchy.Fakes.StubLogger">
            <summary>Tipo stub de log4net.Repository.Hierarchy.Logger</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubLogger.#ctor(System.String)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubLogger.AddAppender(log4net.Appender.IAppender)">
            <summary>Establecer el stub de Logger.AddAppender(IAppender newAppender)</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubLogger.AddAppenderIAppender">
            <summary>Establecer el stub de Logger.AddAppender(IAppender newAppender)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.StubLogger.Additivity">
            <summary>Establecer el stub de Logger.get_Additivity()</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubLogger.AdditivityGet">
            <summary>Establecer el stub de Logger.get_Additivity()</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubLogger.AdditivitySetBoolean">
            <summary>Establecer el stub de Logger.set_Additivity(Boolean value)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.StubLogger.Appenders">
            <summary>Establecer el stub de Logger.get_Appenders()</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubLogger.AppendersGet">
            <summary>Establecer el stub de Logger.get_Appenders()</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubLogger.AttachBackingFieldToAdditivity">
            <summary>Asocia delegados para emular StubLogger.Additivity como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubLogger.AttachBackingFieldToHierarchy">
            <summary>Asocia delegados para emular StubLogger.Hierarchy como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubLogger.AttachBackingFieldToLevel">
            <summary>Asocia delegados para emular StubLogger.Level como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubLogger.AttachBackingFieldToParent">
            <summary>Asocia delegados para emular StubLogger.Parent como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubLogger.CallAppenders(log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de Logger.CallAppenders(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubLogger.CallAppendersLoggingEvent">
            <summary>Establecer el stub de Logger.CallAppenders(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.StubLogger.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubLogger.CloseNestedAppenders">
            <summary>Establecer el stub de Logger.CloseNestedAppenders()</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubLogger.CloseNestedAppenders01">
            <summary>Establecer el stub de Logger.CloseNestedAppenders()</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.StubLogger.EffectiveLevel">
            <summary>Establecer el stub de Logger.get_EffectiveLevel()</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubLogger.EffectiveLevelGet">
            <summary>Establecer el stub de Logger.get_EffectiveLevel()</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubLogger.ForcedLog(log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de Logger.ForcedLog(LoggingEvent logEvent)</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubLogger.ForcedLog(System.Type,log4net.Core.Level,System.Object,System.Exception)">
            <summary>Establecer el stub de Logger.ForcedLog(Type callerStackBoundaryDeclaringType, Level level, Object message, Exception exception)</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubLogger.ForcedLogLoggingEvent">
            <summary>Establecer el stub de Logger.ForcedLog(LoggingEvent logEvent)</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubLogger.ForcedLogTypeLevelObjectException">
            <summary>Establecer el stub de Logger.ForcedLog(Type callerStackBoundaryDeclaringType, Level level, Object message, Exception exception)</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubLogger.GetAppender(System.String)">
            <summary>Establecer el stub de Logger.GetAppender(String name)</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubLogger.GetAppenderString">
            <summary>Establecer el stub de Logger.GetAppender(String name)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.StubLogger.Hierarchy">
            <summary>Establecer el stub de Logger.get_Hierarchy()</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubLogger.HierarchyGet">
            <summary>Establecer el stub de Logger.get_Hierarchy()</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubLogger.HierarchySetHierarchy">
            <summary>Establecer el stub de Logger.set_Hierarchy(Hierarchy value)</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubLogger.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubLogger</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.StubLogger.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.StubLogger.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubLogger.IsEnabledFor(log4net.Core.Level)">
            <summary>Establecer el stub de Logger.IsEnabledFor(Level level)</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubLogger.IsEnabledForLevel">
            <summary>Establecer el stub de Logger.IsEnabledFor(Level level)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.StubLogger.Level">
            <summary>Establecer el stub de Logger.get_Level()</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubLogger.LevelGet">
            <summary>Establecer el stub de Logger.get_Level()</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubLogger.LevelSetLevel">
            <summary>Establecer el stub de Logger.set_Level(Level value)</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubLogger.Log(log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de Logger.Log(LoggingEvent logEvent)</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubLogger.Log(log4net.Core.Level,System.Object,System.Exception)">
            <summary>Establecer el stub de Logger.Log(Level level, Object message, Exception exception)</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubLogger.Log(System.Type,log4net.Core.Level,System.Object,System.Exception)">
            <summary>Establecer el stub de Logger.Log(Type callerStackBoundaryDeclaringType, Level level, Object message, Exception exception)</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubLogger.LogLevelObjectException">
            <summary>Establecer el stub de Logger.Log(Level level, Object message, Exception exception)</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubLogger.LogLoggingEvent">
            <summary>Establecer el stub de Logger.Log(LoggingEvent logEvent)</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubLogger.LogTypeLevelObjectException">
            <summary>Establecer el stub de Logger.Log(Type callerStackBoundaryDeclaringType, Level level, Object message, Exception exception)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.StubLogger.Name">
            <summary>Establecer el stub de Logger.get_Name()</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubLogger.NameGet">
            <summary>Establecer el stub de Logger.get_Name()</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.StubLogger.Parent">
            <summary>Establecer el stub de Logger.get_Parent()</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubLogger.ParentGet">
            <summary>Establecer el stub de Logger.get_Parent()</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubLogger.ParentSetLogger">
            <summary>Establecer el stub de Logger.set_Parent(Logger value)</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubLogger.RemoveAllAppenders">
            <summary>Establecer el stub de Logger.RemoveAllAppenders()</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubLogger.RemoveAllAppenders01">
            <summary>Establecer el stub de Logger.RemoveAllAppenders()</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubLogger.RemoveAppender(log4net.Appender.IAppender)">
            <summary>Establecer el stub de Logger.RemoveAppender(IAppender appender)</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubLogger.RemoveAppender(System.String)">
            <summary>Establecer el stub de Logger.RemoveAppender(String name)</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubLogger.RemoveAppenderIAppender">
            <summary>Establecer el stub de Logger.RemoveAppender(IAppender appender)</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubLogger.RemoveAppenderString">
            <summary>Establecer el stub de Logger.RemoveAppender(String name)</summary>
        </member>
        <member name="T:log4net.Repository.Hierarchy.Fakes.StubLoggerCreationEventArgs">
            <summary>Tipo stub de log4net.Repository.Hierarchy.LoggerCreationEventArgs</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubLoggerCreationEventArgs.#ctor(log4net.Repository.Hierarchy.Logger)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.StubLoggerCreationEventArgs.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubLoggerCreationEventArgs.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubLoggerCreationEventArgs</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.StubLoggerCreationEventArgs.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.StubLoggerCreationEventArgs.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:log4net.Repository.Hierarchy.Fakes.StubRootLogger">
            <summary>Tipo stub de log4net.Repository.Hierarchy.RootLogger</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubRootLogger.#ctor(log4net.Core.Level)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubRootLogger.AddAppender(log4net.Appender.IAppender)">
            <summary>Establecer el stub de Logger.AddAppender(IAppender newAppender)</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubRootLogger.AddAppenderIAppender">
            <summary>Establecer el stub de Logger.AddAppender(IAppender newAppender)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.StubRootLogger.Additivity">
            <summary>Establecer el stub de Logger.get_Additivity()</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubRootLogger.AdditivityGet">
            <summary>Establecer el stub de Logger.get_Additivity()</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubRootLogger.AdditivitySetBoolean">
            <summary>Establecer el stub de Logger.set_Additivity(Boolean value)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.StubRootLogger.Appenders">
            <summary>Establecer el stub de Logger.get_Appenders()</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubRootLogger.AppendersGet">
            <summary>Establecer el stub de Logger.get_Appenders()</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubRootLogger.AttachBackingFieldToAdditivity">
            <summary>Asocia delegados para emular StubRootLogger.Additivity como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubRootLogger.AttachBackingFieldToHierarchy">
            <summary>Asocia delegados para emular StubRootLogger.Hierarchy como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubRootLogger.AttachBackingFieldToLevel">
            <summary>Asocia delegados para emular StubRootLogger.Level como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubRootLogger.AttachBackingFieldToParent">
            <summary>Asocia delegados para emular StubRootLogger.Parent como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubRootLogger.CallAppenders(log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de Logger.CallAppenders(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubRootLogger.CallAppendersLoggingEvent">
            <summary>Establecer el stub de Logger.CallAppenders(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.StubRootLogger.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubRootLogger.CloseNestedAppenders">
            <summary>Establecer el stub de Logger.CloseNestedAppenders()</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubRootLogger.CloseNestedAppenders01">
            <summary>Establecer el stub de Logger.CloseNestedAppenders()</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.StubRootLogger.EffectiveLevel">
            <summary>Establecer el stub de RootLogger.get_EffectiveLevel()</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubRootLogger.EffectiveLevelGet">
            <summary>Establecer el stub de RootLogger.get_EffectiveLevel()</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubRootLogger.ForcedLog(log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de Logger.ForcedLog(LoggingEvent logEvent)</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubRootLogger.ForcedLog(System.Type,log4net.Core.Level,System.Object,System.Exception)">
            <summary>Establecer el stub de Logger.ForcedLog(Type callerStackBoundaryDeclaringType, Level level, Object message, Exception exception)</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubRootLogger.ForcedLogLoggingEvent">
            <summary>Establecer el stub de Logger.ForcedLog(LoggingEvent logEvent)</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubRootLogger.ForcedLogTypeLevelObjectException">
            <summary>Establecer el stub de Logger.ForcedLog(Type callerStackBoundaryDeclaringType, Level level, Object message, Exception exception)</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubRootLogger.GetAppender(System.String)">
            <summary>Establecer el stub de Logger.GetAppender(String name)</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubRootLogger.GetAppenderString">
            <summary>Establecer el stub de Logger.GetAppender(String name)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.StubRootLogger.Hierarchy">
            <summary>Establecer el stub de Logger.get_Hierarchy()</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubRootLogger.HierarchyGet">
            <summary>Establecer el stub de Logger.get_Hierarchy()</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubRootLogger.HierarchySetHierarchy">
            <summary>Establecer el stub de Logger.set_Hierarchy(Hierarchy value)</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubRootLogger.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubRootLogger</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.StubRootLogger.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.StubRootLogger.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubRootLogger.IsEnabledFor(log4net.Core.Level)">
            <summary>Establecer el stub de Logger.IsEnabledFor(Level level)</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubRootLogger.IsEnabledForLevel">
            <summary>Establecer el stub de Logger.IsEnabledFor(Level level)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.StubRootLogger.Level">
            <summary>Establecer el stub de RootLogger.get_Level()</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubRootLogger.LevelGet">
            <summary>Establecer el stub de RootLogger.get_Level()</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubRootLogger.LevelSetLevel">
            <summary>Establecer el stub de RootLogger.set_Level(Level value)</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubRootLogger.Log(log4net.Core.LoggingEvent)">
            <summary>Establecer el stub de Logger.Log(LoggingEvent logEvent)</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubRootLogger.Log(log4net.Core.Level,System.Object,System.Exception)">
            <summary>Establecer el stub de Logger.Log(Level level, Object message, Exception exception)</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubRootLogger.Log(System.Type,log4net.Core.Level,System.Object,System.Exception)">
            <summary>Establecer el stub de Logger.Log(Type callerStackBoundaryDeclaringType, Level level, Object message, Exception exception)</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubRootLogger.LogLevelObjectException">
            <summary>Establecer el stub de Logger.Log(Level level, Object message, Exception exception)</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubRootLogger.LogLoggingEvent">
            <summary>Establecer el stub de Logger.Log(LoggingEvent logEvent)</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubRootLogger.LogTypeLevelObjectException">
            <summary>Establecer el stub de Logger.Log(Type callerStackBoundaryDeclaringType, Level level, Object message, Exception exception)</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.StubRootLogger.Name">
            <summary>Establecer el stub de Logger.get_Name()</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubRootLogger.NameGet">
            <summary>Establecer el stub de Logger.get_Name()</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.StubRootLogger.Parent">
            <summary>Establecer el stub de Logger.get_Parent()</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubRootLogger.ParentGet">
            <summary>Establecer el stub de Logger.get_Parent()</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubRootLogger.ParentSetLogger">
            <summary>Establecer el stub de Logger.set_Parent(Logger value)</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubRootLogger.RemoveAllAppenders">
            <summary>Establecer el stub de Logger.RemoveAllAppenders()</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubRootLogger.RemoveAllAppenders01">
            <summary>Establecer el stub de Logger.RemoveAllAppenders()</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubRootLogger.RemoveAppender(log4net.Appender.IAppender)">
            <summary>Establecer el stub de Logger.RemoveAppender(IAppender appender)</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubRootLogger.RemoveAppender(System.String)">
            <summary>Establecer el stub de Logger.RemoveAppender(String name)</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubRootLogger.RemoveAppenderIAppender">
            <summary>Establecer el stub de Logger.RemoveAppender(IAppender appender)</summary>
        </member>
        <member name="F:log4net.Repository.Hierarchy.Fakes.StubRootLogger.RemoveAppenderString">
            <summary>Establecer el stub de Logger.RemoveAppender(String name)</summary>
        </member>
        <member name="T:log4net.Repository.Hierarchy.Fakes.StubXmlHierarchyConfigurator">
            <summary>Tipo stub de log4net.Repository.Hierarchy.XmlHierarchyConfigurator</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubXmlHierarchyConfigurator.#ctor(log4net.Repository.Hierarchy.Hierarchy)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.StubXmlHierarchyConfigurator.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:log4net.Repository.Hierarchy.Fakes.StubXmlHierarchyConfigurator.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubXmlHierarchyConfigurator</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.StubXmlHierarchyConfigurator.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Repository.Hierarchy.Fakes.StubXmlHierarchyConfigurator.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimAppenderAttachedImpl">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Util.AppenderAttachedImpl</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimAppenderAttachedImpl.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimAppenderAttachedImpl.#ctor(log4net.Util.AppenderAttachedImpl)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimAppenderAttachedImpl.AddAppenderIAppender">
            <summary>Establecer el shim de AppenderAttachedImpl.AddAppender(IAppender newAppender)</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimAppenderAttachedImpl.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimAppenderAttachedImpl.AllInstances.AddAppenderIAppender">
            <summary>Establecer el shim de AppenderAttachedImpl.AddAppender(IAppender newAppender)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimAppenderAttachedImpl.AllInstances.AppendLoopOnAppendersLoggingEvent">
            <summary>Establecer el shim de AppenderAttachedImpl.AppendLoopOnAppenders(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimAppenderAttachedImpl.AllInstances.AppendLoopOnAppendersLoggingEventArray">
            <summary>Establecer el shim de AppenderAttachedImpl.AppendLoopOnAppenders(LoggingEvent[] loggingEvents)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimAppenderAttachedImpl.AllInstances.AppendersGet">
            <summary>Establecer el shim de AppenderAttachedImpl.get_Appenders()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimAppenderAttachedImpl.AllInstances.GetAppenderString">
            <summary>Establecer el shim de AppenderAttachedImpl.GetAppender(String name)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimAppenderAttachedImpl.AllInstances.RemoveAllAppenders">
            <summary>Establecer el shim de AppenderAttachedImpl.RemoveAllAppenders()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimAppenderAttachedImpl.AllInstances.RemoveAppenderIAppender">
            <summary>Establecer el shim de AppenderAttachedImpl.RemoveAppender(IAppender appender)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimAppenderAttachedImpl.AllInstances.RemoveAppenderString">
            <summary>Establecer el shim de AppenderAttachedImpl.RemoveAppender(String name)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimAppenderAttachedImpl.AppendLoopOnAppendersLoggingEvent">
            <summary>Establecer el shim de AppenderAttachedImpl.AppendLoopOnAppenders(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimAppenderAttachedImpl.AppendLoopOnAppendersLoggingEventArray">
            <summary>Establecer el shim de AppenderAttachedImpl.AppendLoopOnAppenders(LoggingEvent[] loggingEvents)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimAppenderAttachedImpl.AppendersGet">
            <summary>Establecer el shim de AppenderAttachedImpl.get_Appenders()</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimAppenderAttachedImpl.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimAppenderAttachedImpl.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimAppenderAttachedImpl.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimAppenderAttachedImpl.Bind(log4net.Core.IAppenderAttachable)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimAppenderAttachedImpl.CallAppendIAppenderLoggingEventArray">
            <summary>Establecer el shim de AppenderAttachedImpl.CallAppend(IAppender appender, LoggingEvent[] loggingEvents)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimAppenderAttachedImpl.Constructor">
            <summary>Establecer el shim de AppenderAttachedImpl.AppenderAttachedImpl()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimAppenderAttachedImpl.GetAppenderString">
            <summary>Establecer el shim de AppenderAttachedImpl.GetAppender(String name)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimAppenderAttachedImpl.RemoveAllAppenders">
            <summary>Establecer el shim de AppenderAttachedImpl.RemoveAllAppenders()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimAppenderAttachedImpl.RemoveAppenderIAppender">
            <summary>Establecer el shim de AppenderAttachedImpl.RemoveAppender(IAppender appender)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimAppenderAttachedImpl.RemoveAppenderString">
            <summary>Establecer el shim de AppenderAttachedImpl.RemoveAppender(String name)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimAppenderAttachedImpl.StaticConstructor">
            <summary>Establecer el shim de AppenderAttachedImpl.AppenderAttachedImpl()</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimCompositeProperties">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Util.CompositeProperties</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimCompositeProperties.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimCompositeProperties.#ctor(log4net.Util.CompositeProperties)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimCompositeProperties.AddReadOnlyPropertiesDictionary">
            <summary>Establecer el shim de CompositeProperties.Add(ReadOnlyPropertiesDictionary properties)</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimCompositeProperties.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimCompositeProperties.AllInstances.AddReadOnlyPropertiesDictionary">
            <summary>Establecer el shim de CompositeProperties.Add(ReadOnlyPropertiesDictionary properties)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimCompositeProperties.AllInstances.Flatten">
            <summary>Establecer el shim de CompositeProperties.Flatten()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimCompositeProperties.AllInstances.ItemGetString">
            <summary>Establecer el shim de CompositeProperties.get_Item(String key)</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimCompositeProperties.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimCompositeProperties.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimCompositeProperties.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimCompositeProperties.Constructor">
            <summary>Establecer el shim de CompositeProperties.CompositeProperties()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimCompositeProperties.Flatten">
            <summary>Establecer el shim de CompositeProperties.Flatten()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimCompositeProperties.ItemGetString">
            <summary>Establecer el shim de CompositeProperties.get_Item(String key)</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimContextPropertiesBase">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Util.ContextPropertiesBase</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimContextPropertiesBase.#ctor(log4net.Util.ContextPropertiesBase)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimContextPropertiesBase.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimContextPropertiesBase.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimContextPropertiesBase.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimContextPropertiesBase.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimContextPropertiesBase.Constructor">
            <summary>Establecer el shim de ContextPropertiesBase.ContextPropertiesBase()</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimConverterInfo">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Util.ConverterInfo</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimConverterInfo.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimConverterInfo.#ctor(log4net.Util.ConverterInfo)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimConverterInfo.AddPropertyPropertyEntry">
            <summary>Establecer el shim de ConverterInfo.AddProperty(PropertyEntry entry)</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimConverterInfo.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimConverterInfo.AllInstances.AddPropertyPropertyEntry">
            <summary>Establecer el shim de ConverterInfo.AddProperty(PropertyEntry entry)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimConverterInfo.AllInstances.NameGet">
            <summary>Establecer el shim de ConverterInfo.get_Name()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimConverterInfo.AllInstances.NameSetString">
            <summary>Establecer el shim de ConverterInfo.set_Name(String value)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimConverterInfo.AllInstances.PropertiesGet">
            <summary>Establecer el shim de ConverterInfo.get_Properties()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimConverterInfo.AllInstances.TypeGet">
            <summary>Establecer el shim de ConverterInfo.get_Type()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimConverterInfo.AllInstances.TypeSetType">
            <summary>Establecer el shim de ConverterInfo.set_Type(Type value)</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimConverterInfo.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimConverterInfo.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimConverterInfo.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimConverterInfo.Constructor">
            <summary>Establecer el shim de ConverterInfo.ConverterInfo()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimConverterInfo.NameGet">
            <summary>Establecer el shim de ConverterInfo.get_Name()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimConverterInfo.NameSetString">
            <summary>Establecer el shim de ConverterInfo.set_Name(String value)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimConverterInfo.PropertiesGet">
            <summary>Establecer el shim de ConverterInfo.get_Properties()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimConverterInfo.TypeGet">
            <summary>Establecer el shim de ConverterInfo.get_Type()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimConverterInfo.TypeSetType">
            <summary>Establecer el shim de ConverterInfo.set_Type(Type value)</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimCountingQuietTextWriter">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Util.CountingQuietTextWriter</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimCountingQuietTextWriter.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimCountingQuietTextWriter.#ctor(log4net.Util.CountingQuietTextWriter)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimCountingQuietTextWriter.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimCountingQuietTextWriter.AllInstances.CountGet">
            <summary>Establecer el shim de CountingQuietTextWriter.get_Count()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimCountingQuietTextWriter.AllInstances.CountSetInt64">
            <summary>Establecer el shim de CountingQuietTextWriter.set_Count(Int64 value)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimCountingQuietTextWriter.AllInstances.WriteChar">
            <summary>Establecer el shim de CountingQuietTextWriter.Write(Char value)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimCountingQuietTextWriter.AllInstances.WriteCharArrayInt32Int32">
            <summary>Establecer el shim de CountingQuietTextWriter.Write(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimCountingQuietTextWriter.AllInstances.WriteString">
            <summary>Establecer el shim de CountingQuietTextWriter.Write(String str)</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimCountingQuietTextWriter.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimCountingQuietTextWriter.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimCountingQuietTextWriter.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimCountingQuietTextWriter.Bind(System.IDisposable)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimCountingQuietTextWriter.ConstructorTextWriterIErrorHandler">
            <summary>Establecer el shim de CountingQuietTextWriter.CountingQuietTextWriter(TextWriter writer, IErrorHandler errorHandler)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimCountingQuietTextWriter.CountGet">
            <summary>Establecer el shim de CountingQuietTextWriter.get_Count()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimCountingQuietTextWriter.CountSetInt64">
            <summary>Establecer el shim de CountingQuietTextWriter.set_Count(Int64 value)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimCountingQuietTextWriter.WriteChar">
            <summary>Establecer el shim de CountingQuietTextWriter.Write(Char value)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimCountingQuietTextWriter.WriteCharArrayInt32Int32">
            <summary>Establecer el shim de CountingQuietTextWriter.Write(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimCountingQuietTextWriter.WriteString">
            <summary>Establecer el shim de CountingQuietTextWriter.Write(String str)</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimCyclicBuffer">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Util.CyclicBuffer</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimCyclicBuffer.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimCyclicBuffer.#ctor(log4net.Util.CyclicBuffer)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimCyclicBuffer.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimCyclicBuffer.AllInstances.AppendLoggingEvent">
            <summary>Establecer el shim de CyclicBuffer.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimCyclicBuffer.AllInstances.Clear">
            <summary>Establecer el shim de CyclicBuffer.Clear()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimCyclicBuffer.AllInstances.ItemGetInt32">
            <summary>Establecer el shim de CyclicBuffer.get_Item(Int32 i)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimCyclicBuffer.AllInstances.LengthGet">
            <summary>Establecer el shim de CyclicBuffer.get_Length()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimCyclicBuffer.AllInstances.MaxSizeGet">
            <summary>Establecer el shim de CyclicBuffer.get_MaxSize()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimCyclicBuffer.AllInstances.PopAll">
            <summary>Establecer el shim de CyclicBuffer.PopAll()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimCyclicBuffer.AllInstances.PopOldest">
            <summary>Establecer el shim de CyclicBuffer.PopOldest()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimCyclicBuffer.AppendLoggingEvent">
            <summary>Establecer el shim de CyclicBuffer.Append(LoggingEvent loggingEvent)</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimCyclicBuffer.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimCyclicBuffer.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimCyclicBuffer.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimCyclicBuffer.Clear">
            <summary>Establecer el shim de CyclicBuffer.Clear()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimCyclicBuffer.ConstructorInt32">
            <summary>Establecer el shim de CyclicBuffer.CyclicBuffer(Int32 maxSize)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimCyclicBuffer.ItemGetInt32">
            <summary>Establecer el shim de CyclicBuffer.get_Item(Int32 i)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimCyclicBuffer.LengthGet">
            <summary>Establecer el shim de CyclicBuffer.get_Length()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimCyclicBuffer.MaxSizeGet">
            <summary>Establecer el shim de CyclicBuffer.get_MaxSize()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimCyclicBuffer.PopAll">
            <summary>Establecer el shim de CyclicBuffer.PopAll()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimCyclicBuffer.PopOldest">
            <summary>Establecer el shim de CyclicBuffer.PopOldest()</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimEmptyCollection">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Util.EmptyCollection</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimEmptyCollection.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimEmptyCollection.#ctor(log4net.Util.EmptyCollection)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimEmptyCollection.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyCollection.AllInstances.CopyToArrayInt32">
            <summary>Establecer el shim de EmptyCollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyCollection.AllInstances.CountGet">
            <summary>Establecer el shim de EmptyCollection.get_Count()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyCollection.AllInstances.GetEnumerator">
            <summary>Establecer el shim de EmptyCollection.GetEnumerator()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyCollection.AllInstances.IsSynchronizedGet">
            <summary>Establecer el shim de EmptyCollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyCollection.AllInstances.SyncRootGet">
            <summary>Establecer el shim de EmptyCollection.get_SyncRoot()</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimEmptyCollection.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimEmptyCollection.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyCollection.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimEmptyCollection.Bind(System.Collections.ICollection)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimEmptyCollection.Bind(System.Collections.IEnumerable)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyCollection.Constructor">
            <summary>Establecer el shim de EmptyCollection.EmptyCollection()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyCollection.CopyToArrayInt32">
            <summary>Establecer el shim de EmptyCollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyCollection.CountGet">
            <summary>Establecer el shim de EmptyCollection.get_Count()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyCollection.GetEnumerator">
            <summary>Establecer el shim de EmptyCollection.GetEnumerator()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyCollection.InstanceGet">
            <summary>Establecer el shim de EmptyCollection.get_Instance()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyCollection.IsSynchronizedGet">
            <summary>Establecer el shim de EmptyCollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyCollection.StaticConstructor">
            <summary>Establecer el shim de EmptyCollection.EmptyCollection()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyCollection.SyncRootGet">
            <summary>Establecer el shim de EmptyCollection.get_SyncRoot()</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimEmptyDictionary">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Util.EmptyDictionary</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimEmptyDictionary.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimEmptyDictionary.#ctor(log4net.Util.EmptyDictionary)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyDictionary.AddObjectObject">
            <summary>Establecer el shim de EmptyDictionary.Add(Object key, Object value)</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimEmptyDictionary.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyDictionary.AllInstances.AddObjectObject">
            <summary>Establecer el shim de EmptyDictionary.Add(Object key, Object value)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyDictionary.AllInstances.Clear">
            <summary>Establecer el shim de EmptyDictionary.Clear()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyDictionary.AllInstances.ContainsObject">
            <summary>Establecer el shim de EmptyDictionary.Contains(Object key)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyDictionary.AllInstances.CopyToArrayInt32">
            <summary>Establecer el shim de EmptyDictionary.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyDictionary.AllInstances.CountGet">
            <summary>Establecer el shim de EmptyDictionary.get_Count()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyDictionary.AllInstances.GetEnumerator">
            <summary>Establecer el shim de EmptyDictionary.GetEnumerator()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyDictionary.AllInstances.IsFixedSizeGet">
            <summary>Establecer el shim de EmptyDictionary.get_IsFixedSize()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyDictionary.AllInstances.IsReadOnlyGet">
            <summary>Establecer el shim de EmptyDictionary.get_IsReadOnly()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyDictionary.AllInstances.IsSynchronizedGet">
            <summary>Establecer el shim de EmptyDictionary.get_IsSynchronized()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyDictionary.AllInstances.ItemGetObject">
            <summary>Establecer el shim de EmptyDictionary.get_Item(Object key)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyDictionary.AllInstances.ItemSetObjectObject">
            <summary>Establecer el shim de EmptyDictionary.set_Item(Object key, Object value)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyDictionary.AllInstances.KeysGet">
            <summary>Establecer el shim de EmptyDictionary.get_Keys()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyDictionary.AllInstances.RemoveObject">
            <summary>Establecer el shim de EmptyDictionary.Remove(Object key)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyDictionary.AllInstances.SyncRootGet">
            <summary>Establecer el shim de EmptyDictionary.get_SyncRoot()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyDictionary.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Establecer el shim de EmptyDictionary.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyDictionary.AllInstances.ValuesGet">
            <summary>Establecer el shim de EmptyDictionary.get_Values()</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimEmptyDictionary.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimEmptyDictionary.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyDictionary.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimEmptyDictionary.Bind(System.Collections.ICollection)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimEmptyDictionary.Bind(System.Collections.IDictionary)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimEmptyDictionary.Bind(System.Collections.IEnumerable)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyDictionary.Clear">
            <summary>Establecer el shim de EmptyDictionary.Clear()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyDictionary.Constructor">
            <summary>Establecer el shim de EmptyDictionary.EmptyDictionary()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyDictionary.ContainsObject">
            <summary>Establecer el shim de EmptyDictionary.Contains(Object key)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyDictionary.CopyToArrayInt32">
            <summary>Establecer el shim de EmptyDictionary.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyDictionary.CountGet">
            <summary>Establecer el shim de EmptyDictionary.get_Count()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyDictionary.GetEnumerator">
            <summary>Establecer el shim de EmptyDictionary.GetEnumerator()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyDictionary.InstanceGet">
            <summary>Establecer el shim de EmptyDictionary.get_Instance()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyDictionary.IsFixedSizeGet">
            <summary>Establecer el shim de EmptyDictionary.get_IsFixedSize()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyDictionary.IsReadOnlyGet">
            <summary>Establecer el shim de EmptyDictionary.get_IsReadOnly()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyDictionary.IsSynchronizedGet">
            <summary>Establecer el shim de EmptyDictionary.get_IsSynchronized()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyDictionary.ItemGetObject">
            <summary>Establecer el shim de EmptyDictionary.get_Item(Object key)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyDictionary.ItemSetObjectObject">
            <summary>Establecer el shim de EmptyDictionary.set_Item(Object key, Object value)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyDictionary.KeysGet">
            <summary>Establecer el shim de EmptyDictionary.get_Keys()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyDictionary.RemoveObject">
            <summary>Establecer el shim de EmptyDictionary.Remove(Object key)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyDictionary.StaticConstructor">
            <summary>Establecer el shim de EmptyDictionary.EmptyDictionary()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyDictionary.SyncRootGet">
            <summary>Establecer el shim de EmptyDictionary.get_SyncRoot()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyDictionary.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Establecer el shim de EmptyDictionary.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimEmptyDictionary.ValuesGet">
            <summary>Establecer el shim de EmptyDictionary.get_Values()</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimFormattingInfo">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Util.FormattingInfo</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimFormattingInfo.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimFormattingInfo.#ctor(log4net.Util.FormattingInfo)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimFormattingInfo.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimFormattingInfo.AllInstances.LeftAlignGet">
            <summary>Establecer el shim de FormattingInfo.get_LeftAlign()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimFormattingInfo.AllInstances.LeftAlignSetBoolean">
            <summary>Establecer el shim de FormattingInfo.set_LeftAlign(Boolean value)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimFormattingInfo.AllInstances.MaxGet">
            <summary>Establecer el shim de FormattingInfo.get_Max()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimFormattingInfo.AllInstances.MaxSetInt32">
            <summary>Establecer el shim de FormattingInfo.set_Max(Int32 value)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimFormattingInfo.AllInstances.MinGet">
            <summary>Establecer el shim de FormattingInfo.get_Min()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimFormattingInfo.AllInstances.MinSetInt32">
            <summary>Establecer el shim de FormattingInfo.set_Min(Int32 value)</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimFormattingInfo.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimFormattingInfo.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimFormattingInfo.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimFormattingInfo.Constructor">
            <summary>Establecer el shim de FormattingInfo.FormattingInfo()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimFormattingInfo.ConstructorInt32Int32Boolean">
            <summary>Establecer el shim de FormattingInfo.FormattingInfo(Int32 min, Int32 max, Boolean leftAlign)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimFormattingInfo.LeftAlignGet">
            <summary>Establecer el shim de FormattingInfo.get_LeftAlign()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimFormattingInfo.LeftAlignSetBoolean">
            <summary>Establecer el shim de FormattingInfo.set_LeftAlign(Boolean value)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimFormattingInfo.MaxGet">
            <summary>Establecer el shim de FormattingInfo.get_Max()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimFormattingInfo.MaxSetInt32">
            <summary>Establecer el shim de FormattingInfo.set_Max(Int32 value)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimFormattingInfo.MinGet">
            <summary>Establecer el shim de FormattingInfo.get_Min()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimFormattingInfo.MinSetInt32">
            <summary>Establecer el shim de FormattingInfo.set_Min(Int32 value)</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimGlobalContextProperties">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Util.GlobalContextProperties</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimGlobalContextProperties.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimGlobalContextProperties.#ctor(log4net.Util.GlobalContextProperties)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimGlobalContextProperties.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimGlobalContextProperties.AllInstances.Clear">
            <summary>Establecer el shim de GlobalContextProperties.Clear()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimGlobalContextProperties.AllInstances.GetReadOnlyProperties">
            <summary>Establecer el shim de GlobalContextProperties.GetReadOnlyProperties()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimGlobalContextProperties.AllInstances.ItemGetString">
            <summary>Establecer el shim de GlobalContextProperties.get_Item(String key)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimGlobalContextProperties.AllInstances.ItemSetStringObject">
            <summary>Establecer el shim de GlobalContextProperties.set_Item(String key, Object value)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimGlobalContextProperties.AllInstances.RemoveString">
            <summary>Establecer el shim de GlobalContextProperties.Remove(String key)</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimGlobalContextProperties.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimGlobalContextProperties.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimGlobalContextProperties.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimGlobalContextProperties.Clear">
            <summary>Establecer el shim de GlobalContextProperties.Clear()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimGlobalContextProperties.Constructor">
            <summary>Establecer el shim de GlobalContextProperties.GlobalContextProperties()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimGlobalContextProperties.GetReadOnlyProperties">
            <summary>Establecer el shim de GlobalContextProperties.GetReadOnlyProperties()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimGlobalContextProperties.ItemGetString">
            <summary>Establecer el shim de GlobalContextProperties.get_Item(String key)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimGlobalContextProperties.ItemSetStringObject">
            <summary>Establecer el shim de GlobalContextProperties.set_Item(String key, Object value)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimGlobalContextProperties.RemoveString">
            <summary>Establecer el shim de GlobalContextProperties.Remove(String key)</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimILogExtensions">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Util.ILogExtensions</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimILogExtensions.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimILogExtensions.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimILogExtensions.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimILogExtensions.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimILogExtensions.DebugExtILogFuncOfObject">
            <summary>Establecer el shim de ILogExtensions.DebugExt(ILog logger, Func`1&lt;Object&gt; callback)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimILogExtensions.DebugExtILogFuncOfObjectException">
            <summary>Establecer el shim de ILogExtensions.DebugExt(ILog logger, Func`1&lt;Object&gt; callback, Exception exception)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimILogExtensions.DebugExtILogObject">
            <summary>Establecer el shim de ILogExtensions.DebugExt(ILog logger, Object message)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimILogExtensions.DebugExtILogObjectException">
            <summary>Establecer el shim de ILogExtensions.DebugExt(ILog logger, Object message, Exception exception)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimILogExtensions.DebugFormatExtILogIFormatProviderStringObjectArray">
            <summary>Establecer el shim de ILogExtensions.DebugFormatExt(ILog logger, IFormatProvider provider, String format, Object[] args)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimILogExtensions.DebugFormatExtILogStringObject">
            <summary>Establecer el shim de ILogExtensions.DebugFormatExt(ILog logger, String format, Object arg0)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimILogExtensions.DebugFormatExtILogStringObjectArray">
            <summary>Establecer el shim de ILogExtensions.DebugFormatExt(ILog logger, String format, Object[] args)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimILogExtensions.DebugFormatExtILogStringObjectObject">
            <summary>Establecer el shim de ILogExtensions.DebugFormatExt(ILog logger, String format, Object arg0, Object arg1)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimILogExtensions.DebugFormatExtILogStringObjectObjectObject">
            <summary>Establecer el shim de ILogExtensions.DebugFormatExt(ILog logger, String format, Object arg0, Object arg1, Object arg2)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimILogExtensions.ErrorExtILogFuncOfObject">
            <summary>Establecer el shim de ILogExtensions.ErrorExt(ILog logger, Func`1&lt;Object&gt; callback)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimILogExtensions.ErrorExtILogFuncOfObjectException">
            <summary>Establecer el shim de ILogExtensions.ErrorExt(ILog logger, Func`1&lt;Object&gt; callback, Exception exception)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimILogExtensions.ErrorExtILogObject">
            <summary>Establecer el shim de ILogExtensions.ErrorExt(ILog logger, Object message)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimILogExtensions.ErrorExtILogObjectException">
            <summary>Establecer el shim de ILogExtensions.ErrorExt(ILog logger, Object message, Exception exception)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimILogExtensions.ErrorFormatExtILogIFormatProviderStringObjectArray">
            <summary>Establecer el shim de ILogExtensions.ErrorFormatExt(ILog logger, IFormatProvider provider, String format, Object[] args)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimILogExtensions.ErrorFormatExtILogStringObject">
            <summary>Establecer el shim de ILogExtensions.ErrorFormatExt(ILog logger, String format, Object arg0)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimILogExtensions.ErrorFormatExtILogStringObjectArray">
            <summary>Establecer el shim de ILogExtensions.ErrorFormatExt(ILog logger, String format, Object[] args)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimILogExtensions.ErrorFormatExtILogStringObjectObject">
            <summary>Establecer el shim de ILogExtensions.ErrorFormatExt(ILog logger, String format, Object arg0, Object arg1)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimILogExtensions.ErrorFormatExtILogStringObjectObjectObject">
            <summary>Establecer el shim de ILogExtensions.ErrorFormatExt(ILog logger, String format, Object arg0, Object arg1, Object arg2)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimILogExtensions.FatalExtILogFuncOfObject">
            <summary>Establecer el shim de ILogExtensions.FatalExt(ILog logger, Func`1&lt;Object&gt; callback)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimILogExtensions.FatalExtILogFuncOfObjectException">
            <summary>Establecer el shim de ILogExtensions.FatalExt(ILog logger, Func`1&lt;Object&gt; callback, Exception exception)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimILogExtensions.FatalExtILogObject">
            <summary>Establecer el shim de ILogExtensions.FatalExt(ILog logger, Object message)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimILogExtensions.FatalExtILogObjectException">
            <summary>Establecer el shim de ILogExtensions.FatalExt(ILog logger, Object message, Exception exception)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimILogExtensions.FatalFormatExtILogIFormatProviderStringObjectArray">
            <summary>Establecer el shim de ILogExtensions.FatalFormatExt(ILog logger, IFormatProvider provider, String format, Object[] args)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimILogExtensions.FatalFormatExtILogStringObject">
            <summary>Establecer el shim de ILogExtensions.FatalFormatExt(ILog logger, String format, Object arg0)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimILogExtensions.FatalFormatExtILogStringObjectArray">
            <summary>Establecer el shim de ILogExtensions.FatalFormatExt(ILog logger, String format, Object[] args)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimILogExtensions.FatalFormatExtILogStringObjectObject">
            <summary>Establecer el shim de ILogExtensions.FatalFormatExt(ILog logger, String format, Object arg0, Object arg1)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimILogExtensions.FatalFormatExtILogStringObjectObjectObject">
            <summary>Establecer el shim de ILogExtensions.FatalFormatExt(ILog logger, String format, Object arg0, Object arg1, Object arg2)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimILogExtensions.InfoExtILogFuncOfObject">
            <summary>Establecer el shim de ILogExtensions.InfoExt(ILog logger, Func`1&lt;Object&gt; callback)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimILogExtensions.InfoExtILogFuncOfObjectException">
            <summary>Establecer el shim de ILogExtensions.InfoExt(ILog logger, Func`1&lt;Object&gt; callback, Exception exception)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimILogExtensions.InfoExtILogObject">
            <summary>Establecer el shim de ILogExtensions.InfoExt(ILog logger, Object message)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimILogExtensions.InfoExtILogObjectException">
            <summary>Establecer el shim de ILogExtensions.InfoExt(ILog logger, Object message, Exception exception)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimILogExtensions.InfoFormatExtILogIFormatProviderStringObjectArray">
            <summary>Establecer el shim de ILogExtensions.InfoFormatExt(ILog logger, IFormatProvider provider, String format, Object[] args)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimILogExtensions.InfoFormatExtILogStringObject">
            <summary>Establecer el shim de ILogExtensions.InfoFormatExt(ILog logger, String format, Object arg0)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimILogExtensions.InfoFormatExtILogStringObjectArray">
            <summary>Establecer el shim de ILogExtensions.InfoFormatExt(ILog logger, String format, Object[] args)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimILogExtensions.InfoFormatExtILogStringObjectObject">
            <summary>Establecer el shim de ILogExtensions.InfoFormatExt(ILog logger, String format, Object arg0, Object arg1)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimILogExtensions.InfoFormatExtILogStringObjectObjectObject">
            <summary>Establecer el shim de ILogExtensions.InfoFormatExt(ILog logger, String format, Object arg0, Object arg1, Object arg2)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimILogExtensions.StaticConstructor">
            <summary>Establecer el shim de ILogExtensions.ILogExtensions()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimILogExtensions.WarnExtILogFuncOfObject">
            <summary>Establecer el shim de ILogExtensions.WarnExt(ILog logger, Func`1&lt;Object&gt; callback)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimILogExtensions.WarnExtILogFuncOfObjectException">
            <summary>Establecer el shim de ILogExtensions.WarnExt(ILog logger, Func`1&lt;Object&gt; callback, Exception exception)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimILogExtensions.WarnExtILogObject">
            <summary>Establecer el shim de ILogExtensions.WarnExt(ILog logger, Object message)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimILogExtensions.WarnExtILogObjectException">
            <summary>Establecer el shim de ILogExtensions.WarnExt(ILog logger, Object message, Exception exception)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimILogExtensions.WarnFormatExtILogIFormatProviderStringObjectArray">
            <summary>Establecer el shim de ILogExtensions.WarnFormatExt(ILog logger, IFormatProvider provider, String format, Object[] args)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimILogExtensions.WarnFormatExtILogStringObject">
            <summary>Establecer el shim de ILogExtensions.WarnFormatExt(ILog logger, String format, Object arg0)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimILogExtensions.WarnFormatExtILogStringObjectArray">
            <summary>Establecer el shim de ILogExtensions.WarnFormatExt(ILog logger, String format, Object[] args)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimILogExtensions.WarnFormatExtILogStringObjectObject">
            <summary>Establecer el shim de ILogExtensions.WarnFormatExt(ILog logger, String format, Object arg0, Object arg1)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimILogExtensions.WarnFormatExtILogStringObjectObjectObject">
            <summary>Establecer el shim de ILogExtensions.WarnFormatExt(ILog logger, String format, Object arg0, Object arg1, Object arg2)</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimLevelMapping">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Util.LevelMapping</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimLevelMapping.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimLevelMapping.#ctor(log4net.Util.LevelMapping)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLevelMapping.ActivateOptions">
            <summary>Establecer el shim de LevelMapping.ActivateOptions()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLevelMapping.AddLevelMappingEntry">
            <summary>Establecer el shim de LevelMapping.Add(LevelMappingEntry entry)</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimLevelMapping.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLevelMapping.AllInstances.ActivateOptions">
            <summary>Establecer el shim de LevelMapping.ActivateOptions()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLevelMapping.AllInstances.AddLevelMappingEntry">
            <summary>Establecer el shim de LevelMapping.Add(LevelMappingEntry entry)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLevelMapping.AllInstances.LookupLevel">
            <summary>Establecer el shim de LevelMapping.Lookup(Level level)</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimLevelMapping.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimLevelMapping.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLevelMapping.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimLevelMapping.Bind(log4net.Core.IOptionHandler)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLevelMapping.Constructor">
            <summary>Establecer el shim de LevelMapping.LevelMapping()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLevelMapping.LookupLevel">
            <summary>Establecer el shim de LevelMapping.Lookup(Level level)</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimLevelMappingEntry">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Util.LevelMappingEntry</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimLevelMappingEntry.#ctor(log4net.Util.LevelMappingEntry)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLevelMappingEntry.ActivateOptions">
            <summary>Establecer el shim de LevelMappingEntry.ActivateOptions()</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimLevelMappingEntry.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLevelMappingEntry.AllInstances.ActivateOptions">
            <summary>Establecer el shim de LevelMappingEntry.ActivateOptions()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLevelMappingEntry.AllInstances.LevelGet">
            <summary>Establecer el shim de LevelMappingEntry.get_Level()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLevelMappingEntry.AllInstances.LevelSetLevel">
            <summary>Establecer el shim de LevelMappingEntry.set_Level(Level value)</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimLevelMappingEntry.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimLevelMappingEntry.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLevelMappingEntry.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimLevelMappingEntry.Bind(log4net.Core.IOptionHandler)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLevelMappingEntry.Constructor">
            <summary>Establecer el shim de LevelMappingEntry.LevelMappingEntry()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLevelMappingEntry.LevelGet">
            <summary>Establecer el shim de LevelMappingEntry.get_Level()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLevelMappingEntry.LevelSetLevel">
            <summary>Establecer el shim de LevelMappingEntry.set_Level(Level value)</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimLogLog">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Util.LogLog</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimLogLog.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimLogLog.#ctor(log4net.Util.LogLog)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimLogLog.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogLog.AllInstances.ExceptionGet">
            <summary>Establecer el shim de LogLog.get_Exception()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogLog.AllInstances.MessageGet">
            <summary>Establecer el shim de LogLog.get_Message()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogLog.AllInstances.PrefixGet">
            <summary>Establecer el shim de LogLog.get_Prefix()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogLog.AllInstances.SourceGet">
            <summary>Establecer el shim de LogLog.get_Source()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogLog.AllInstances.TimeStampGet">
            <summary>Establecer el shim de LogLog.get_TimeStamp()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogLog.AllInstances.TimeStampUtcGet">
            <summary>Establecer el shim de LogLog.get_TimeStampUtc()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogLog.AllInstances.ToString01">
            <summary>Establecer el shim de LogLog.ToString()</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimLogLog.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimLogLog.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogLog.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogLog.ConstructorTypeStringStringException">
            <summary>Establecer el shim de LogLog.LogLog(Type source, String prefix, String message, Exception exception)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogLog.DebugTypeString">
            <summary>Establecer el shim de LogLog.Debug(Type source, String message)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogLog.DebugTypeStringException">
            <summary>Establecer el shim de LogLog.Debug(Type source, String message, Exception exception)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogLog.EmitErrorLineString">
            <summary>Establecer el shim de LogLog.EmitErrorLine(String message)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogLog.EmitInternalMessagesGet">
            <summary>Establecer el shim de LogLog.get_EmitInternalMessages()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogLog.EmitInternalMessagesSetBoolean">
            <summary>Establecer el shim de LogLog.set_EmitInternalMessages(Boolean value)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogLog.EmitOutLineString">
            <summary>Establecer el shim de LogLog.EmitOutLine(String message)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogLog.ErrorTypeString">
            <summary>Establecer el shim de LogLog.Error(Type source, String message)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogLog.ErrorTypeStringException">
            <summary>Establecer el shim de LogLog.Error(Type source, String message, Exception exception)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogLog.ExceptionGet">
            <summary>Establecer el shim de LogLog.get_Exception()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogLog.InternalDebuggingGet">
            <summary>Establecer el shim de LogLog.get_InternalDebugging()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogLog.InternalDebuggingSetBoolean">
            <summary>Establecer el shim de LogLog.set_InternalDebugging(Boolean value)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogLog.IsDebugEnabledGet">
            <summary>Establecer el shim de LogLog.get_IsDebugEnabled()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogLog.IsErrorEnabledGet">
            <summary>Establecer el shim de LogLog.get_IsErrorEnabled()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogLog.IsWarnEnabledGet">
            <summary>Establecer el shim de LogLog.get_IsWarnEnabled()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogLog.LogReceivedAddLogReceivedEventHandler">
            <summary>Establecer el shim de LogLog.add_LogReceived(LogReceivedEventHandler value)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogLog.LogReceivedRemoveLogReceivedEventHandler">
            <summary>Establecer el shim de LogLog.remove_LogReceived(LogReceivedEventHandler value)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogLog.MessageGet">
            <summary>Establecer el shim de LogLog.get_Message()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogLog.OnLogReceivedTypeStringStringException">
            <summary>Establecer el shim de LogLog.OnLogReceived(Type source, String prefix, String message, Exception exception)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogLog.PrefixGet">
            <summary>Establecer el shim de LogLog.get_Prefix()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogLog.QuietModeGet">
            <summary>Establecer el shim de LogLog.get_QuietMode()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogLog.QuietModeSetBoolean">
            <summary>Establecer el shim de LogLog.set_QuietMode(Boolean value)</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimLogLog.ShimLogReceivedAdapter">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Util.LogLog+LogReceivedAdapter</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimLogLog.ShimLogReceivedAdapter.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimLogLog.ShimLogReceivedAdapter.#ctor(log4net.Util.LogLog.LogReceivedAdapter)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimLogLog.ShimLogReceivedAdapter.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogLog.ShimLogReceivedAdapter.AllInstances.Dispose">
            <summary>Establecer el shim de LogReceivedAdapter.Dispose()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogLog.ShimLogReceivedAdapter.AllInstances.ItemsGet">
            <summary>Establecer el shim de LogReceivedAdapter.get_Items()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogLog.ShimLogReceivedAdapter.AllInstances.LogLog_LogReceivedObjectLogReceivedEventArgs">
            <summary>Establecer el shim de LogReceivedAdapter.LogLog_LogReceived(Object source, LogReceivedEventArgs e)</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimLogLog.ShimLogReceivedAdapter.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimLogLog.ShimLogReceivedAdapter.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogLog.ShimLogReceivedAdapter.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimLogLog.ShimLogReceivedAdapter.Bind(System.IDisposable)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogLog.ShimLogReceivedAdapter.ConstructorIList">
            <summary>Establecer el shim de LogReceivedAdapter.LogReceivedAdapter(IList items)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogLog.ShimLogReceivedAdapter.Dispose">
            <summary>Establecer el shim de LogReceivedAdapter.Dispose()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogLog.ShimLogReceivedAdapter.ItemsGet">
            <summary>Establecer el shim de LogReceivedAdapter.get_Items()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogLog.ShimLogReceivedAdapter.LogLog_LogReceivedObjectLogReceivedEventArgs">
            <summary>Establecer el shim de LogReceivedAdapter.LogLog_LogReceived(Object source, LogReceivedEventArgs e)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogLog.SourceGet">
            <summary>Establecer el shim de LogLog.get_Source()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogLog.StaticConstructor">
            <summary>Establecer el shim de LogLog.LogLog()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogLog.TimeStampGet">
            <summary>Establecer el shim de LogLog.get_TimeStamp()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogLog.TimeStampUtcGet">
            <summary>Establecer el shim de LogLog.get_TimeStampUtc()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogLog.ToString">
            <summary>Establecer el shim de LogLog.ToString()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogLog.WarnTypeString">
            <summary>Establecer el shim de LogLog.Warn(Type source, String message)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogLog.WarnTypeStringException">
            <summary>Establecer el shim de LogLog.Warn(Type source, String message, Exception exception)</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimLogReceivedEventArgs">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Util.LogReceivedEventArgs</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimLogReceivedEventArgs.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimLogReceivedEventArgs.#ctor(log4net.Util.LogReceivedEventArgs)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimLogReceivedEventArgs.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogReceivedEventArgs.AllInstances.LogLogGet">
            <summary>Establecer el shim de LogReceivedEventArgs.get_LogLog()</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimLogReceivedEventArgs.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimLogReceivedEventArgs.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogReceivedEventArgs.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogReceivedEventArgs.ConstructorLogLog">
            <summary>Establecer el shim de LogReceivedEventArgs.LogReceivedEventArgs(LogLog loglog)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogReceivedEventArgs.LogLogGet">
            <summary>Establecer el shim de LogReceivedEventArgs.get_LogLog()</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimLogicalThreadContextProperties">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Util.LogicalThreadContextProperties</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimLogicalThreadContextProperties.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimLogicalThreadContextProperties.#ctor(log4net.Util.LogicalThreadContextProperties)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimLogicalThreadContextProperties.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogicalThreadContextProperties.AllInstances.Clear">
            <summary>Establecer el shim de LogicalThreadContextProperties.Clear()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogicalThreadContextProperties.AllInstances.GetPropertiesBoolean">
            <summary>Establecer el shim de LogicalThreadContextProperties.GetProperties(Boolean create)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogicalThreadContextProperties.AllInstances.ItemGetString">
            <summary>Establecer el shim de LogicalThreadContextProperties.get_Item(String key)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogicalThreadContextProperties.AllInstances.ItemSetStringObject">
            <summary>Establecer el shim de LogicalThreadContextProperties.set_Item(String key, Object value)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogicalThreadContextProperties.AllInstances.RemoveString">
            <summary>Establecer el shim de LogicalThreadContextProperties.Remove(String key)</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimLogicalThreadContextProperties.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimLogicalThreadContextProperties.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogicalThreadContextProperties.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogicalThreadContextProperties.Clear">
            <summary>Establecer el shim de LogicalThreadContextProperties.Clear()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogicalThreadContextProperties.Constructor">
            <summary>Establecer el shim de LogicalThreadContextProperties.LogicalThreadContextProperties()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogicalThreadContextProperties.GetLogicalProperties">
            <summary>Establecer el shim de LogicalThreadContextProperties.GetLogicalProperties()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogicalThreadContextProperties.GetPropertiesBoolean">
            <summary>Establecer el shim de LogicalThreadContextProperties.GetProperties(Boolean create)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogicalThreadContextProperties.ItemGetString">
            <summary>Establecer el shim de LogicalThreadContextProperties.get_Item(String key)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogicalThreadContextProperties.ItemSetStringObject">
            <summary>Establecer el shim de LogicalThreadContextProperties.set_Item(String key, Object value)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogicalThreadContextProperties.RemoveString">
            <summary>Establecer el shim de LogicalThreadContextProperties.Remove(String key)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogicalThreadContextProperties.SetLogicalPropertiesPropertiesDictionary">
            <summary>Establecer el shim de LogicalThreadContextProperties.SetLogicalProperties(PropertiesDictionary properties)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogicalThreadContextProperties.StaticConstructor">
            <summary>Establecer el shim de LogicalThreadContextProperties.LogicalThreadContextProperties()</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimLogicalThreadContextStack">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Util.LogicalThreadContextStack</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimLogicalThreadContextStack.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimLogicalThreadContextStack.#ctor(log4net.Util.LogicalThreadContextStack)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimLogicalThreadContextStack.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogicalThreadContextStack.AllInstances.Clear">
            <summary>Establecer el shim de LogicalThreadContextStack.Clear()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogicalThreadContextStack.AllInstances.CountGet">
            <summary>Establecer el shim de LogicalThreadContextStack.get_Count()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogicalThreadContextStack.AllInstances.GetFullMessage">
            <summary>Establecer el shim de LogicalThreadContextStack.GetFullMessage()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogicalThreadContextStack.AllInstances.InternalStackGet">
            <summary>Establecer el shim de LogicalThreadContextStack.get_InternalStack()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogicalThreadContextStack.AllInstances.InternalStackSetStack">
            <summary>Establecer el shim de LogicalThreadContextStack.set_InternalStack(Stack value)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogicalThreadContextStack.AllInstances.Pop">
            <summary>Establecer el shim de LogicalThreadContextStack.Pop()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogicalThreadContextStack.AllInstances.PushString">
            <summary>Establecer el shim de LogicalThreadContextStack.Push(String message)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogicalThreadContextStack.AllInstances.ToString01">
            <summary>Establecer el shim de LogicalThreadContextStack.ToString()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogicalThreadContextStack.AllInstances.log4netCoreIFixingRequiredGetFixedObject">
            <summary>Establecer el shim de LogicalThreadContextStack.log4net.Core.IFixingRequired.GetFixedObject()</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimLogicalThreadContextStack.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimLogicalThreadContextStack.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogicalThreadContextStack.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimLogicalThreadContextStack.Bind(log4net.Core.IFixingRequired)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogicalThreadContextStack.Clear">
            <summary>Establecer el shim de LogicalThreadContextStack.Clear()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogicalThreadContextStack.ConstructorStringTwoArgActionOfStringLogicalThreadContextStack">
            <summary>Establecer el shim de LogicalThreadContextStack.LogicalThreadContextStack(String propertyKey, TwoArgAction`2&lt;String,LogicalThreadContextStack&gt; registerNew)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogicalThreadContextStack.CountGet">
            <summary>Establecer el shim de LogicalThreadContextStack.get_Count()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogicalThreadContextStack.GetFullMessage">
            <summary>Establecer el shim de LogicalThreadContextStack.GetFullMessage()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogicalThreadContextStack.InternalStackGet">
            <summary>Establecer el shim de LogicalThreadContextStack.get_InternalStack()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogicalThreadContextStack.InternalStackSetStack">
            <summary>Establecer el shim de LogicalThreadContextStack.set_InternalStack(Stack value)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogicalThreadContextStack.Pop">
            <summary>Establecer el shim de LogicalThreadContextStack.Pop()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogicalThreadContextStack.PushString">
            <summary>Establecer el shim de LogicalThreadContextStack.Push(String message)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogicalThreadContextStack.ToString">
            <summary>Establecer el shim de LogicalThreadContextStack.ToString()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogicalThreadContextStack.log4netCoreIFixingRequiredGetFixedObject">
            <summary>Establecer el shim de LogicalThreadContextStack.log4net.Core.IFixingRequired.GetFixedObject()</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimLogicalThreadContextStacks">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Util.LogicalThreadContextStacks</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimLogicalThreadContextStacks.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimLogicalThreadContextStacks.#ctor(log4net.Util.LogicalThreadContextStacks)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimLogicalThreadContextStacks.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogicalThreadContextStacks.AllInstances.ItemGetString">
            <summary>Establecer el shim de LogicalThreadContextStacks.get_Item(String key)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogicalThreadContextStacks.AllInstances.registerNewStringLogicalThreadContextStack">
            <summary>Establecer el shim de LogicalThreadContextStacks.registerNew(String stackName, LogicalThreadContextStack stack)</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimLogicalThreadContextStacks.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimLogicalThreadContextStacks.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogicalThreadContextStacks.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogicalThreadContextStacks.ConstructorLogicalThreadContextProperties">
            <summary>Establecer el shim de LogicalThreadContextStacks.LogicalThreadContextStacks(LogicalThreadContextProperties properties)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogicalThreadContextStacks.ItemGetString">
            <summary>Establecer el shim de LogicalThreadContextStacks.get_Item(String key)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogicalThreadContextStacks.StaticConstructor">
            <summary>Establecer el shim de LogicalThreadContextStacks.LogicalThreadContextStacks()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimLogicalThreadContextStacks.registerNewStringLogicalThreadContextStack">
            <summary>Establecer el shim de LogicalThreadContextStacks.registerNew(String stackName, LogicalThreadContextStack stack)</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimNativeError">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Util.NativeError</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimNativeError.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimNativeError.#ctor(log4net.Util.NativeError)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimNativeError.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimNativeError.AllInstances.MessageGet">
            <summary>Establecer el shim de NativeError.get_Message()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimNativeError.AllInstances.NumberGet">
            <summary>Establecer el shim de NativeError.get_Number()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimNativeError.AllInstances.ToString01">
            <summary>Establecer el shim de NativeError.ToString()</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimNativeError.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimNativeError.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimNativeError.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimNativeError.ConstructorInt32String">
            <summary>Establecer el shim de NativeError.NativeError(Int32 number, String message)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimNativeError.GetErrorInt32">
            <summary>Establecer el shim de NativeError.GetError(Int32 number)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimNativeError.GetErrorMessageInt32">
            <summary>Establecer el shim de NativeError.GetErrorMessage(Int32 messageId)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimNativeError.GetLastError">
            <summary>Establecer el shim de NativeError.GetLastError()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimNativeError.MessageGet">
            <summary>Establecer el shim de NativeError.get_Message()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimNativeError.NumberGet">
            <summary>Establecer el shim de NativeError.get_Number()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimNativeError.ToString">
            <summary>Establecer el shim de NativeError.ToString()</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimNullDictionaryEnumerator">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Util.NullDictionaryEnumerator</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimNullDictionaryEnumerator.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimNullDictionaryEnumerator.#ctor(log4net.Util.NullDictionaryEnumerator)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimNullDictionaryEnumerator.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimNullDictionaryEnumerator.AllInstances.CurrentGet">
            <summary>Establecer el shim de NullDictionaryEnumerator.get_Current()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimNullDictionaryEnumerator.AllInstances.EntryGet">
            <summary>Establecer el shim de NullDictionaryEnumerator.get_Entry()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimNullDictionaryEnumerator.AllInstances.KeyGet">
            <summary>Establecer el shim de NullDictionaryEnumerator.get_Key()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimNullDictionaryEnumerator.AllInstances.MoveNext">
            <summary>Establecer el shim de NullDictionaryEnumerator.MoveNext()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimNullDictionaryEnumerator.AllInstances.Reset">
            <summary>Establecer el shim de NullDictionaryEnumerator.Reset()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimNullDictionaryEnumerator.AllInstances.ValueGet">
            <summary>Establecer el shim de NullDictionaryEnumerator.get_Value()</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimNullDictionaryEnumerator.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimNullDictionaryEnumerator.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimNullDictionaryEnumerator.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimNullDictionaryEnumerator.Bind(System.Collections.IDictionaryEnumerator)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimNullDictionaryEnumerator.Bind(System.Collections.IEnumerator)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimNullDictionaryEnumerator.Constructor">
            <summary>Establecer el shim de NullDictionaryEnumerator.NullDictionaryEnumerator()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimNullDictionaryEnumerator.CurrentGet">
            <summary>Establecer el shim de NullDictionaryEnumerator.get_Current()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimNullDictionaryEnumerator.EntryGet">
            <summary>Establecer el shim de NullDictionaryEnumerator.get_Entry()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimNullDictionaryEnumerator.InstanceGet">
            <summary>Establecer el shim de NullDictionaryEnumerator.get_Instance()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimNullDictionaryEnumerator.KeyGet">
            <summary>Establecer el shim de NullDictionaryEnumerator.get_Key()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimNullDictionaryEnumerator.MoveNext">
            <summary>Establecer el shim de NullDictionaryEnumerator.MoveNext()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimNullDictionaryEnumerator.Reset">
            <summary>Establecer el shim de NullDictionaryEnumerator.Reset()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimNullDictionaryEnumerator.StaticConstructor">
            <summary>Establecer el shim de NullDictionaryEnumerator.NullDictionaryEnumerator()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimNullDictionaryEnumerator.ValueGet">
            <summary>Establecer el shim de NullDictionaryEnumerator.get_Value()</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimNullEnumerator">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Util.NullEnumerator</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimNullEnumerator.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimNullEnumerator.#ctor(log4net.Util.NullEnumerator)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimNullEnumerator.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimNullEnumerator.AllInstances.CurrentGet">
            <summary>Establecer el shim de NullEnumerator.get_Current()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimNullEnumerator.AllInstances.MoveNext">
            <summary>Establecer el shim de NullEnumerator.MoveNext()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimNullEnumerator.AllInstances.Reset">
            <summary>Establecer el shim de NullEnumerator.Reset()</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimNullEnumerator.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimNullEnumerator.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimNullEnumerator.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimNullEnumerator.Bind(System.Collections.IEnumerator)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimNullEnumerator.Constructor">
            <summary>Establecer el shim de NullEnumerator.NullEnumerator()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimNullEnumerator.CurrentGet">
            <summary>Establecer el shim de NullEnumerator.get_Current()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimNullEnumerator.InstanceGet">
            <summary>Establecer el shim de NullEnumerator.get_Instance()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimNullEnumerator.MoveNext">
            <summary>Establecer el shim de NullEnumerator.MoveNext()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimNullEnumerator.Reset">
            <summary>Establecer el shim de NullEnumerator.Reset()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimNullEnumerator.StaticConstructor">
            <summary>Establecer el shim de NullEnumerator.NullEnumerator()</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimNullSecurityContext">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Util.NullSecurityContext</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimNullSecurityContext.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimNullSecurityContext.#ctor(log4net.Util.NullSecurityContext)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimNullSecurityContext.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimNullSecurityContext.AllInstances.ImpersonateObject">
            <summary>Establecer el shim de NullSecurityContext.Impersonate(Object state)</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimNullSecurityContext.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimNullSecurityContext.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimNullSecurityContext.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimNullSecurityContext.Constructor">
            <summary>Establecer el shim de NullSecurityContext.NullSecurityContext()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimNullSecurityContext.ImpersonateObject">
            <summary>Establecer el shim de NullSecurityContext.Impersonate(Object state)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimNullSecurityContext.StaticConstructor">
            <summary>Establecer el shim de NullSecurityContext.NullSecurityContext()</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimOnlyOnceErrorHandler">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Util.OnlyOnceErrorHandler</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimOnlyOnceErrorHandler.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimOnlyOnceErrorHandler.#ctor(log4net.Util.OnlyOnceErrorHandler)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimOnlyOnceErrorHandler.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimOnlyOnceErrorHandler.AllInstances.EnabledDateGet">
            <summary>Establecer el shim de OnlyOnceErrorHandler.get_EnabledDate()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimOnlyOnceErrorHandler.AllInstances.EnabledDateUtcGet">
            <summary>Establecer el shim de OnlyOnceErrorHandler.get_EnabledDateUtc()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimOnlyOnceErrorHandler.AllInstances.ErrorCodeGet">
            <summary>Establecer el shim de OnlyOnceErrorHandler.get_ErrorCode()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimOnlyOnceErrorHandler.AllInstances.ErrorMessageGet">
            <summary>Establecer el shim de OnlyOnceErrorHandler.get_ErrorMessage()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimOnlyOnceErrorHandler.AllInstances.ErrorString">
            <summary>Establecer el shim de OnlyOnceErrorHandler.Error(String message)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimOnlyOnceErrorHandler.AllInstances.ErrorStringException">
            <summary>Establecer el shim de OnlyOnceErrorHandler.Error(String message, Exception e)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimOnlyOnceErrorHandler.AllInstances.ErrorStringExceptionErrorCode">
            <summary>Establecer el shim de OnlyOnceErrorHandler.Error(String message, Exception e, ErrorCode errorCode)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimOnlyOnceErrorHandler.AllInstances.ExceptionGet">
            <summary>Establecer el shim de OnlyOnceErrorHandler.get_Exception()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimOnlyOnceErrorHandler.AllInstances.FirstErrorStringExceptionErrorCode">
            <summary>Establecer el shim de OnlyOnceErrorHandler.FirstError(String message, Exception e, ErrorCode errorCode)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimOnlyOnceErrorHandler.AllInstances.IsEnabledGet">
            <summary>Establecer el shim de OnlyOnceErrorHandler.get_IsEnabled()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimOnlyOnceErrorHandler.AllInstances.Reset">
            <summary>Establecer el shim de OnlyOnceErrorHandler.Reset()</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimOnlyOnceErrorHandler.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimOnlyOnceErrorHandler.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimOnlyOnceErrorHandler.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimOnlyOnceErrorHandler.Bind(log4net.Core.IErrorHandler)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimOnlyOnceErrorHandler.Constructor">
            <summary>Establecer el shim de OnlyOnceErrorHandler.OnlyOnceErrorHandler()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimOnlyOnceErrorHandler.ConstructorString">
            <summary>Establecer el shim de OnlyOnceErrorHandler.OnlyOnceErrorHandler(String prefix)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimOnlyOnceErrorHandler.EnabledDateGet">
            <summary>Establecer el shim de OnlyOnceErrorHandler.get_EnabledDate()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimOnlyOnceErrorHandler.EnabledDateUtcGet">
            <summary>Establecer el shim de OnlyOnceErrorHandler.get_EnabledDateUtc()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimOnlyOnceErrorHandler.ErrorCodeGet">
            <summary>Establecer el shim de OnlyOnceErrorHandler.get_ErrorCode()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimOnlyOnceErrorHandler.ErrorMessageGet">
            <summary>Establecer el shim de OnlyOnceErrorHandler.get_ErrorMessage()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimOnlyOnceErrorHandler.ErrorString">
            <summary>Establecer el shim de OnlyOnceErrorHandler.Error(String message)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimOnlyOnceErrorHandler.ErrorStringException">
            <summary>Establecer el shim de OnlyOnceErrorHandler.Error(String message, Exception e)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimOnlyOnceErrorHandler.ErrorStringExceptionErrorCode">
            <summary>Establecer el shim de OnlyOnceErrorHandler.Error(String message, Exception e, ErrorCode errorCode)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimOnlyOnceErrorHandler.ExceptionGet">
            <summary>Establecer el shim de OnlyOnceErrorHandler.get_Exception()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimOnlyOnceErrorHandler.FirstErrorStringExceptionErrorCode">
            <summary>Establecer el shim de OnlyOnceErrorHandler.FirstError(String message, Exception e, ErrorCode errorCode)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimOnlyOnceErrorHandler.IsEnabledGet">
            <summary>Establecer el shim de OnlyOnceErrorHandler.get_IsEnabled()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimOnlyOnceErrorHandler.Reset">
            <summary>Establecer el shim de OnlyOnceErrorHandler.Reset()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimOnlyOnceErrorHandler.StaticConstructor">
            <summary>Establecer el shim de OnlyOnceErrorHandler.OnlyOnceErrorHandler()</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimOptionConverter">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Util.OptionConverter</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimOptionConverter.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimOptionConverter.#ctor(log4net.Util.OptionConverter)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimOptionConverter.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimOptionConverter.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimOptionConverter.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimOptionConverter.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimOptionConverter.CanConvertTypeToTypeType">
            <summary>Establecer el shim de OptionConverter.CanConvertTypeTo(Type sourceType, Type targetType)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimOptionConverter.Constructor">
            <summary>Establecer el shim de OptionConverter.OptionConverter()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimOptionConverter.ConvertStringToTypeString">
            <summary>Establecer el shim de OptionConverter.ConvertStringTo(Type target, String txt)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimOptionConverter.ConvertTypeToObjectType">
            <summary>Establecer el shim de OptionConverter.ConvertTypeTo(Object sourceInstance, Type targetType)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimOptionConverter.InstantiateByClassNameStringTypeObject">
            <summary>Establecer el shim de OptionConverter.InstantiateByClassName(String className, Type superClass, Object defaultValue)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimOptionConverter.ParseEnumTypeStringBoolean">
            <summary>Establecer el shim de OptionConverter.ParseEnum(Type enumType, String value, Boolean ignoreCase)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimOptionConverter.StaticConstructor">
            <summary>Establecer el shim de OptionConverter.OptionConverter()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimOptionConverter.SubstituteVariablesStringIDictionary">
            <summary>Establecer el shim de OptionConverter.SubstituteVariables(String value, IDictionary props)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimOptionConverter.ToBooleanStringBoolean">
            <summary>Establecer el shim de OptionConverter.ToBoolean(String argValue, Boolean defaultValue)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimOptionConverter.ToFileSizeStringInt64">
            <summary>Establecer el shim de OptionConverter.ToFileSize(String argValue, Int64 defaultValue)</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimPatternConverter">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Util.PatternConverter</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimPatternConverter.#ctor(log4net.Util.PatternConverter)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimPatternConverter.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternConverter.AllInstances.FormatTextWriterObject">
            <summary>Establecer el shim de PatternConverter.Format(TextWriter writer, Object state)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternConverter.AllInstances.FormattingInfoGet">
            <summary>Establecer el shim de PatternConverter.get_FormattingInfo()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternConverter.AllInstances.FormattingInfoSetFormattingInfo">
            <summary>Establecer el shim de PatternConverter.set_FormattingInfo(FormattingInfo value)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternConverter.AllInstances.NextGet">
            <summary>Establecer el shim de PatternConverter.get_Next()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternConverter.AllInstances.OptionGet">
            <summary>Establecer el shim de PatternConverter.get_Option()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternConverter.AllInstances.OptionSetString">
            <summary>Establecer el shim de PatternConverter.set_Option(String value)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternConverter.AllInstances.PropertiesGet">
            <summary>Establecer el shim de PatternConverter.get_Properties()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternConverter.AllInstances.PropertiesSetPropertiesDictionary">
            <summary>Establecer el shim de PatternConverter.set_Properties(PropertiesDictionary value)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternConverter.AllInstances.SetNextPatternConverter">
            <summary>Establecer el shim de PatternConverter.SetNext(PatternConverter patternConverter)</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimPatternConverter.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimPatternConverter.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternConverter.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternConverter.Constructor">
            <summary>Establecer el shim de PatternConverter.PatternConverter()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternConverter.FormatTextWriterObject">
            <summary>Establecer el shim de PatternConverter.Format(TextWriter writer, Object state)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternConverter.FormattingInfoGet">
            <summary>Establecer el shim de PatternConverter.get_FormattingInfo()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternConverter.FormattingInfoSetFormattingInfo">
            <summary>Establecer el shim de PatternConverter.set_FormattingInfo(FormattingInfo value)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternConverter.NextGet">
            <summary>Establecer el shim de PatternConverter.get_Next()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternConverter.OptionGet">
            <summary>Establecer el shim de PatternConverter.get_Option()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternConverter.OptionSetString">
            <summary>Establecer el shim de PatternConverter.set_Option(String value)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternConverter.PropertiesGet">
            <summary>Establecer el shim de PatternConverter.get_Properties()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternConverter.PropertiesSetPropertiesDictionary">
            <summary>Establecer el shim de PatternConverter.set_Properties(PropertiesDictionary value)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternConverter.SetNextPatternConverter">
            <summary>Establecer el shim de PatternConverter.SetNext(PatternConverter patternConverter)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternConverter.SpacePadTextWriterInt32">
            <summary>Establecer el shim de PatternConverter.SpacePad(TextWriter writer, Int32 length)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternConverter.StaticConstructor">
            <summary>Establecer el shim de PatternConverter.PatternConverter()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternConverter.WriteDictionaryTextWriterILoggerRepositoryIDictionary">
            <summary>Establecer el shim de PatternConverter.WriteDictionary(TextWriter writer, ILoggerRepository repository, IDictionary value)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternConverter.WriteDictionaryTextWriterILoggerRepositoryIDictionaryEnumerator">
            <summary>Establecer el shim de PatternConverter.WriteDictionary(TextWriter writer, ILoggerRepository repository, IDictionaryEnumerator value)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternConverter.WriteObjectTextWriterILoggerRepositoryObject">
            <summary>Establecer el shim de PatternConverter.WriteObject(TextWriter writer, ILoggerRepository repository, Object value)</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimPatternParser">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Util.PatternParser</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimPatternParser.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimPatternParser.#ctor(log4net.Util.PatternParser)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternParser.AddConverterPatternConverter">
            <summary>Establecer el shim de PatternParser.AddConverter(PatternConverter pc)</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimPatternParser.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternParser.AllInstances.AddConverterPatternConverter">
            <summary>Establecer el shim de PatternParser.AddConverter(PatternConverter pc)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternParser.AllInstances.BuildCache">
            <summary>Establecer el shim de PatternParser.BuildCache()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternParser.AllInstances.Parse">
            <summary>Establecer el shim de PatternParser.Parse()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternParser.AllInstances.ParseInternalStringStringArray">
            <summary>Establecer el shim de PatternParser.ParseInternal(String pattern, String[] matches)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternParser.AllInstances.PatternConvertersGet">
            <summary>Establecer el shim de PatternParser.get_PatternConverters()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternParser.AllInstances.ProcessConverterStringStringFormattingInfo">
            <summary>Establecer el shim de PatternParser.ProcessConverter(String converterName, String option, FormattingInfo formattingInfo)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternParser.AllInstances.ProcessLiteralString">
            <summary>Establecer el shim de PatternParser.ProcessLiteral(String text)</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimPatternParser.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimPatternParser.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternParser.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternParser.BuildCache">
            <summary>Establecer el shim de PatternParser.BuildCache()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternParser.ConstructorString">
            <summary>Establecer el shim de PatternParser.PatternParser(String pattern)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternParser.Parse">
            <summary>Establecer el shim de PatternParser.Parse()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternParser.ParseInternalStringStringArray">
            <summary>Establecer el shim de PatternParser.ParseInternal(String pattern, String[] matches)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternParser.PatternConvertersGet">
            <summary>Establecer el shim de PatternParser.get_PatternConverters()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternParser.ProcessConverterStringStringFormattingInfo">
            <summary>Establecer el shim de PatternParser.ProcessConverter(String converterName, String option, FormattingInfo formattingInfo)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternParser.ProcessLiteralString">
            <summary>Establecer el shim de PatternParser.ProcessLiteral(String text)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternParser.StaticConstructor">
            <summary>Establecer el shim de PatternParser.PatternParser()</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimPatternString">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Util.PatternString</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimPatternString.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimPatternString.#ctor(log4net.Util.PatternString)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternString.ActivateOptions">
            <summary>Establecer el shim de PatternString.ActivateOptions()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternString.AddConverterConverterInfo">
            <summary>Establecer el shim de PatternString.AddConverter(ConverterInfo converterInfo)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternString.AddConverterStringType">
            <summary>Establecer el shim de PatternString.AddConverter(String name, Type type)</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimPatternString.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternString.AllInstances.ActivateOptions">
            <summary>Establecer el shim de PatternString.ActivateOptions()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternString.AllInstances.AddConverterConverterInfo">
            <summary>Establecer el shim de PatternString.AddConverter(ConverterInfo converterInfo)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternString.AllInstances.AddConverterStringType">
            <summary>Establecer el shim de PatternString.AddConverter(String name, Type type)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternString.AllInstances.ConversionPatternGet">
            <summary>Establecer el shim de PatternString.get_ConversionPattern()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternString.AllInstances.ConversionPatternSetString">
            <summary>Establecer el shim de PatternString.set_ConversionPattern(String value)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternString.AllInstances.CreatePatternParserString">
            <summary>Establecer el shim de PatternString.CreatePatternParser(String pattern)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternString.AllInstances.Format">
            <summary>Establecer el shim de PatternString.Format()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternString.AllInstances.FormatTextWriter">
            <summary>Establecer el shim de PatternString.Format(TextWriter writer)</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimPatternString.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimPatternString.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternString.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimPatternString.Bind(log4net.Core.IOptionHandler)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternString.Constructor">
            <summary>Establecer el shim de PatternString.PatternString()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternString.ConstructorString">
            <summary>Establecer el shim de PatternString.PatternString(String pattern)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternString.ConversionPatternGet">
            <summary>Establecer el shim de PatternString.get_ConversionPattern()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternString.ConversionPatternSetString">
            <summary>Establecer el shim de PatternString.set_ConversionPattern(String value)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternString.CreatePatternParserString">
            <summary>Establecer el shim de PatternString.CreatePatternParser(String pattern)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternString.Format">
            <summary>Establecer el shim de PatternString.Format()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternString.FormatTextWriter">
            <summary>Establecer el shim de PatternString.Format(TextWriter writer)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPatternString.StaticConstructor">
            <summary>Establecer el shim de PatternString.PatternString()</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimPropertiesDictionary">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Util.PropertiesDictionary</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimPropertiesDictionary.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimPropertiesDictionary.#ctor(log4net.Util.PropertiesDictionary)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimPropertiesDictionary.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertiesDictionary.AllInstances.Clear">
            <summary>Establecer el shim de PropertiesDictionary.Clear()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertiesDictionary.AllInstances.IsFixedSizeSystemCollectionsIDictionaryget">
            <summary>Establecer el shim de PropertiesDictionary.System.Collections.IDictionary.get_IsFixedSize()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertiesDictionary.AllInstances.IsReadOnlySystemCollectionsIDictionaryget">
            <summary>Establecer el shim de PropertiesDictionary.System.Collections.IDictionary.get_IsReadOnly()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertiesDictionary.AllInstances.IsSynchronizedSystemCollectionsICollectionget">
            <summary>Establecer el shim de PropertiesDictionary.System.Collections.ICollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertiesDictionary.AllInstances.ItemGetString">
            <summary>Establecer el shim de PropertiesDictionary.get_Item(String key)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertiesDictionary.AllInstances.ItemSetStringObject">
            <summary>Establecer el shim de PropertiesDictionary.set_Item(String key, Object value)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertiesDictionary.AllInstances.ItemSystemCollectionsIDictionarygetObject">
            <summary>Establecer el shim de PropertiesDictionary.System.Collections.IDictionary.get_Item(Object key)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertiesDictionary.AllInstances.ItemSystemCollectionsIDictionarysetObjectObject">
            <summary>Establecer el shim de PropertiesDictionary.System.Collections.IDictionary.set_Item(Object key, Object value)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertiesDictionary.AllInstances.KeysSystemCollectionsIDictionaryget">
            <summary>Establecer el shim de PropertiesDictionary.System.Collections.IDictionary.get_Keys()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertiesDictionary.AllInstances.RemoveString">
            <summary>Establecer el shim de PropertiesDictionary.Remove(String key)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertiesDictionary.AllInstances.SyncRootSystemCollectionsICollectionget">
            <summary>Establecer el shim de PropertiesDictionary.System.Collections.ICollection.get_SyncRoot()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertiesDictionary.AllInstances.SystemCollectionsICollectionCopyToArrayInt32">
            <summary>Establecer el shim de PropertiesDictionary.System.Collections.ICollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertiesDictionary.AllInstances.SystemCollectionsIDictionaryAddObjectObject">
            <summary>Establecer el shim de PropertiesDictionary.System.Collections.IDictionary.Add(Object key, Object value)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertiesDictionary.AllInstances.SystemCollectionsIDictionaryContainsObject">
            <summary>Establecer el shim de PropertiesDictionary.System.Collections.IDictionary.Contains(Object key)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertiesDictionary.AllInstances.SystemCollectionsIDictionaryGetEnumerator">
            <summary>Establecer el shim de PropertiesDictionary.System.Collections.IDictionary.GetEnumerator()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertiesDictionary.AllInstances.SystemCollectionsIDictionaryRemoveObject">
            <summary>Establecer el shim de PropertiesDictionary.System.Collections.IDictionary.Remove(Object key)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertiesDictionary.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Establecer el shim de PropertiesDictionary.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertiesDictionary.AllInstances.ValuesSystemCollectionsIDictionaryget">
            <summary>Establecer el shim de PropertiesDictionary.System.Collections.IDictionary.get_Values()</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimPropertiesDictionary.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimPropertiesDictionary.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertiesDictionary.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimPropertiesDictionary.Bind(System.Collections.ICollection)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimPropertiesDictionary.Bind(System.Collections.IDictionary)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimPropertiesDictionary.Bind(System.Collections.IEnumerable)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimPropertiesDictionary.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertiesDictionary.Clear">
            <summary>Establecer el shim de PropertiesDictionary.Clear()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertiesDictionary.Constructor">
            <summary>Establecer el shim de PropertiesDictionary.PropertiesDictionary()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertiesDictionary.ConstructorReadOnlyPropertiesDictionary">
            <summary>Establecer el shim de PropertiesDictionary.PropertiesDictionary(ReadOnlyPropertiesDictionary propertiesDictionary)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertiesDictionary.ConstructorSerializationInfoStreamingContext">
            <summary>Establecer el shim de PropertiesDictionary.PropertiesDictionary(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertiesDictionary.IsFixedSizeSystemCollectionsIDictionaryget">
            <summary>Establecer el shim de PropertiesDictionary.System.Collections.IDictionary.get_IsFixedSize()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertiesDictionary.IsReadOnlySystemCollectionsIDictionaryget">
            <summary>Establecer el shim de PropertiesDictionary.System.Collections.IDictionary.get_IsReadOnly()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertiesDictionary.IsSynchronizedSystemCollectionsICollectionget">
            <summary>Establecer el shim de PropertiesDictionary.System.Collections.ICollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertiesDictionary.ItemGetString">
            <summary>Establecer el shim de PropertiesDictionary.get_Item(String key)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertiesDictionary.ItemSetStringObject">
            <summary>Establecer el shim de PropertiesDictionary.set_Item(String key, Object value)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertiesDictionary.ItemSystemCollectionsIDictionarygetObject">
            <summary>Establecer el shim de PropertiesDictionary.System.Collections.IDictionary.get_Item(Object key)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertiesDictionary.ItemSystemCollectionsIDictionarysetObjectObject">
            <summary>Establecer el shim de PropertiesDictionary.System.Collections.IDictionary.set_Item(Object key, Object value)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertiesDictionary.KeysSystemCollectionsIDictionaryget">
            <summary>Establecer el shim de PropertiesDictionary.System.Collections.IDictionary.get_Keys()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertiesDictionary.RemoveString">
            <summary>Establecer el shim de PropertiesDictionary.Remove(String key)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertiesDictionary.SyncRootSystemCollectionsICollectionget">
            <summary>Establecer el shim de PropertiesDictionary.System.Collections.ICollection.get_SyncRoot()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertiesDictionary.SystemCollectionsICollectionCopyToArrayInt32">
            <summary>Establecer el shim de PropertiesDictionary.System.Collections.ICollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertiesDictionary.SystemCollectionsIDictionaryAddObjectObject">
            <summary>Establecer el shim de PropertiesDictionary.System.Collections.IDictionary.Add(Object key, Object value)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertiesDictionary.SystemCollectionsIDictionaryContainsObject">
            <summary>Establecer el shim de PropertiesDictionary.System.Collections.IDictionary.Contains(Object key)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertiesDictionary.SystemCollectionsIDictionaryGetEnumerator">
            <summary>Establecer el shim de PropertiesDictionary.System.Collections.IDictionary.GetEnumerator()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertiesDictionary.SystemCollectionsIDictionaryRemoveObject">
            <summary>Establecer el shim de PropertiesDictionary.System.Collections.IDictionary.Remove(Object key)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertiesDictionary.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Establecer el shim de PropertiesDictionary.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertiesDictionary.ValuesSystemCollectionsIDictionaryget">
            <summary>Establecer el shim de PropertiesDictionary.System.Collections.IDictionary.get_Values()</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimPropertyEntry">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Util.PropertyEntry</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimPropertyEntry.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimPropertyEntry.#ctor(log4net.Util.PropertyEntry)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimPropertyEntry.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertyEntry.AllInstances.KeyGet">
            <summary>Establecer el shim de PropertyEntry.get_Key()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertyEntry.AllInstances.KeySetString">
            <summary>Establecer el shim de PropertyEntry.set_Key(String value)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertyEntry.AllInstances.ToString01">
            <summary>Establecer el shim de PropertyEntry.ToString()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertyEntry.AllInstances.ValueGet">
            <summary>Establecer el shim de PropertyEntry.get_Value()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertyEntry.AllInstances.ValueSetObject">
            <summary>Establecer el shim de PropertyEntry.set_Value(Object value)</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimPropertyEntry.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimPropertyEntry.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertyEntry.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertyEntry.Constructor">
            <summary>Establecer el shim de PropertyEntry.PropertyEntry()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertyEntry.KeyGet">
            <summary>Establecer el shim de PropertyEntry.get_Key()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertyEntry.KeySetString">
            <summary>Establecer el shim de PropertyEntry.set_Key(String value)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertyEntry.ToString">
            <summary>Establecer el shim de PropertyEntry.ToString()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertyEntry.ValueGet">
            <summary>Establecer el shim de PropertyEntry.get_Value()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimPropertyEntry.ValueSetObject">
            <summary>Establecer el shim de PropertyEntry.set_Value(Object value)</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimProtectCloseTextWriter">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Util.ProtectCloseTextWriter</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimProtectCloseTextWriter.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimProtectCloseTextWriter.#ctor(log4net.Util.ProtectCloseTextWriter)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimProtectCloseTextWriter.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimProtectCloseTextWriter.AllInstances.AttachTextWriter">
            <summary>Establecer el shim de ProtectCloseTextWriter.Attach(TextWriter writer)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimProtectCloseTextWriter.AllInstances.Close">
            <summary>Establecer el shim de ProtectCloseTextWriter.Close()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimProtectCloseTextWriter.AttachTextWriter">
            <summary>Establecer el shim de ProtectCloseTextWriter.Attach(TextWriter writer)</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimProtectCloseTextWriter.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimProtectCloseTextWriter.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimProtectCloseTextWriter.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimProtectCloseTextWriter.Bind(System.IDisposable)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimProtectCloseTextWriter.Close">
            <summary>Establecer el shim de ProtectCloseTextWriter.Close()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimProtectCloseTextWriter.ConstructorTextWriter">
            <summary>Establecer el shim de ProtectCloseTextWriter.ProtectCloseTextWriter(TextWriter writer)</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimQuietTextWriter">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Util.QuietTextWriter</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimQuietTextWriter.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimQuietTextWriter.#ctor(log4net.Util.QuietTextWriter)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimQuietTextWriter.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimQuietTextWriter.AllInstances.Close">
            <summary>Establecer el shim de QuietTextWriter.Close()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimQuietTextWriter.AllInstances.ClosedGet">
            <summary>Establecer el shim de QuietTextWriter.get_Closed()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimQuietTextWriter.AllInstances.ErrorHandlerGet">
            <summary>Establecer el shim de QuietTextWriter.get_ErrorHandler()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimQuietTextWriter.AllInstances.ErrorHandlerSetIErrorHandler">
            <summary>Establecer el shim de QuietTextWriter.set_ErrorHandler(IErrorHandler value)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimQuietTextWriter.AllInstances.WriteChar">
            <summary>Establecer el shim de QuietTextWriter.Write(Char value)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimQuietTextWriter.AllInstances.WriteCharArrayInt32Int32">
            <summary>Establecer el shim de QuietTextWriter.Write(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimQuietTextWriter.AllInstances.WriteString">
            <summary>Establecer el shim de QuietTextWriter.Write(String value)</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimQuietTextWriter.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimQuietTextWriter.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimQuietTextWriter.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimQuietTextWriter.Bind(System.IDisposable)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimQuietTextWriter.Close">
            <summary>Establecer el shim de QuietTextWriter.Close()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimQuietTextWriter.ClosedGet">
            <summary>Establecer el shim de QuietTextWriter.get_Closed()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimQuietTextWriter.ConstructorTextWriterIErrorHandler">
            <summary>Establecer el shim de QuietTextWriter.QuietTextWriter(TextWriter writer, IErrorHandler errorHandler)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimQuietTextWriter.ErrorHandlerGet">
            <summary>Establecer el shim de QuietTextWriter.get_ErrorHandler()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimQuietTextWriter.ErrorHandlerSetIErrorHandler">
            <summary>Establecer el shim de QuietTextWriter.set_ErrorHandler(IErrorHandler value)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimQuietTextWriter.WriteChar">
            <summary>Establecer el shim de QuietTextWriter.Write(Char value)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimQuietTextWriter.WriteCharArrayInt32Int32">
            <summary>Establecer el shim de QuietTextWriter.Write(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimQuietTextWriter.WriteString">
            <summary>Establecer el shim de QuietTextWriter.Write(String value)</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Util.ReadOnlyPropertiesDictionary</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.#ctor(log4net.Util.ReadOnlyPropertiesDictionary)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.AllInstances.Clear">
            <summary>Establecer el shim de ReadOnlyPropertiesDictionary.Clear()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.AllInstances.ContainsString">
            <summary>Establecer el shim de ReadOnlyPropertiesDictionary.Contains(String key)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.AllInstances.CountGet">
            <summary>Establecer el shim de ReadOnlyPropertiesDictionary.get_Count()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.AllInstances.GetKeys">
            <summary>Establecer el shim de ReadOnlyPropertiesDictionary.GetKeys()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.AllInstances.GetObjectDataSerializationInfoStreamingContext">
            <summary>Establecer el shim de ReadOnlyPropertiesDictionary.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.AllInstances.InnerHashtableGet">
            <summary>Establecer el shim de ReadOnlyPropertiesDictionary.get_InnerHashtable()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.AllInstances.IsFixedSizeSystemCollectionsIDictionaryget">
            <summary>Establecer el shim de ReadOnlyPropertiesDictionary.System.Collections.IDictionary.get_IsFixedSize()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.AllInstances.IsReadOnlySystemCollectionsIDictionaryget">
            <summary>Establecer el shim de ReadOnlyPropertiesDictionary.System.Collections.IDictionary.get_IsReadOnly()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.AllInstances.IsSynchronizedSystemCollectionsICollectionget">
            <summary>Establecer el shim de ReadOnlyPropertiesDictionary.System.Collections.ICollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.AllInstances.ItemGetString">
            <summary>Establecer el shim de ReadOnlyPropertiesDictionary.get_Item(String key)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.AllInstances.ItemSetStringObject">
            <summary>Establecer el shim de ReadOnlyPropertiesDictionary.set_Item(String key, Object value)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.AllInstances.ItemSystemCollectionsIDictionarygetObject">
            <summary>Establecer el shim de ReadOnlyPropertiesDictionary.System.Collections.IDictionary.get_Item(Object key)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.AllInstances.ItemSystemCollectionsIDictionarysetObjectObject">
            <summary>Establecer el shim de ReadOnlyPropertiesDictionary.System.Collections.IDictionary.set_Item(Object key, Object value)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.AllInstances.KeysSystemCollectionsIDictionaryget">
            <summary>Establecer el shim de ReadOnlyPropertiesDictionary.System.Collections.IDictionary.get_Keys()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.AllInstances.SyncRootSystemCollectionsICollectionget">
            <summary>Establecer el shim de ReadOnlyPropertiesDictionary.System.Collections.ICollection.get_SyncRoot()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.AllInstances.SystemCollectionsICollectionCopyToArrayInt32">
            <summary>Establecer el shim de ReadOnlyPropertiesDictionary.System.Collections.ICollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.AllInstances.SystemCollectionsIDictionaryAddObjectObject">
            <summary>Establecer el shim de ReadOnlyPropertiesDictionary.System.Collections.IDictionary.Add(Object key, Object value)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.AllInstances.SystemCollectionsIDictionaryContainsObject">
            <summary>Establecer el shim de ReadOnlyPropertiesDictionary.System.Collections.IDictionary.Contains(Object key)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.AllInstances.SystemCollectionsIDictionaryGetEnumerator">
            <summary>Establecer el shim de ReadOnlyPropertiesDictionary.System.Collections.IDictionary.GetEnumerator()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.AllInstances.SystemCollectionsIDictionaryRemoveObject">
            <summary>Establecer el shim de ReadOnlyPropertiesDictionary.System.Collections.IDictionary.Remove(Object key)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Establecer el shim de ReadOnlyPropertiesDictionary.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.AllInstances.ValuesSystemCollectionsIDictionaryget">
            <summary>Establecer el shim de ReadOnlyPropertiesDictionary.System.Collections.IDictionary.get_Values()</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.Bind(System.Collections.ICollection)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.Bind(System.Collections.IDictionary)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.Bind(System.Collections.IEnumerable)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.Clear">
            <summary>Establecer el shim de ReadOnlyPropertiesDictionary.Clear()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.Constructor">
            <summary>Establecer el shim de ReadOnlyPropertiesDictionary.ReadOnlyPropertiesDictionary()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.ConstructorReadOnlyPropertiesDictionary">
            <summary>Establecer el shim de ReadOnlyPropertiesDictionary.ReadOnlyPropertiesDictionary(ReadOnlyPropertiesDictionary propertiesDictionary)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.ConstructorSerializationInfoStreamingContext">
            <summary>Establecer el shim de ReadOnlyPropertiesDictionary.ReadOnlyPropertiesDictionary(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.ContainsString">
            <summary>Establecer el shim de ReadOnlyPropertiesDictionary.Contains(String key)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.CountGet">
            <summary>Establecer el shim de ReadOnlyPropertiesDictionary.get_Count()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.GetKeys">
            <summary>Establecer el shim de ReadOnlyPropertiesDictionary.GetKeys()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.GetObjectDataSerializationInfoStreamingContext">
            <summary>Establecer el shim de ReadOnlyPropertiesDictionary.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.InnerHashtableGet">
            <summary>Establecer el shim de ReadOnlyPropertiesDictionary.get_InnerHashtable()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.IsFixedSizeSystemCollectionsIDictionaryget">
            <summary>Establecer el shim de ReadOnlyPropertiesDictionary.System.Collections.IDictionary.get_IsFixedSize()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.IsReadOnlySystemCollectionsIDictionaryget">
            <summary>Establecer el shim de ReadOnlyPropertiesDictionary.System.Collections.IDictionary.get_IsReadOnly()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.IsSynchronizedSystemCollectionsICollectionget">
            <summary>Establecer el shim de ReadOnlyPropertiesDictionary.System.Collections.ICollection.get_IsSynchronized()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.ItemGetString">
            <summary>Establecer el shim de ReadOnlyPropertiesDictionary.get_Item(String key)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.ItemSetStringObject">
            <summary>Establecer el shim de ReadOnlyPropertiesDictionary.set_Item(String key, Object value)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.ItemSystemCollectionsIDictionarygetObject">
            <summary>Establecer el shim de ReadOnlyPropertiesDictionary.System.Collections.IDictionary.get_Item(Object key)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.ItemSystemCollectionsIDictionarysetObjectObject">
            <summary>Establecer el shim de ReadOnlyPropertiesDictionary.System.Collections.IDictionary.set_Item(Object key, Object value)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.KeysSystemCollectionsIDictionaryget">
            <summary>Establecer el shim de ReadOnlyPropertiesDictionary.System.Collections.IDictionary.get_Keys()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.SyncRootSystemCollectionsICollectionget">
            <summary>Establecer el shim de ReadOnlyPropertiesDictionary.System.Collections.ICollection.get_SyncRoot()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.SystemCollectionsICollectionCopyToArrayInt32">
            <summary>Establecer el shim de ReadOnlyPropertiesDictionary.System.Collections.ICollection.CopyTo(Array array, Int32 index)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.SystemCollectionsIDictionaryAddObjectObject">
            <summary>Establecer el shim de ReadOnlyPropertiesDictionary.System.Collections.IDictionary.Add(Object key, Object value)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.SystemCollectionsIDictionaryContainsObject">
            <summary>Establecer el shim de ReadOnlyPropertiesDictionary.System.Collections.IDictionary.Contains(Object key)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.SystemCollectionsIDictionaryGetEnumerator">
            <summary>Establecer el shim de ReadOnlyPropertiesDictionary.System.Collections.IDictionary.GetEnumerator()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.SystemCollectionsIDictionaryRemoveObject">
            <summary>Establecer el shim de ReadOnlyPropertiesDictionary.System.Collections.IDictionary.Remove(Object key)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Establecer el shim de ReadOnlyPropertiesDictionary.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReadOnlyPropertiesDictionary.ValuesSystemCollectionsIDictionaryget">
            <summary>Establecer el shim de ReadOnlyPropertiesDictionary.System.Collections.IDictionary.get_Values()</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimReaderWriterLock">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Util.ReaderWriterLock</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimReaderWriterLock.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimReaderWriterLock.#ctor(log4net.Util.ReaderWriterLock)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReaderWriterLock.AcquireReaderLock">
            <summary>Establecer el shim de ReaderWriterLock.AcquireReaderLock()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReaderWriterLock.AcquireWriterLock">
            <summary>Establecer el shim de ReaderWriterLock.AcquireWriterLock()</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimReaderWriterLock.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReaderWriterLock.AllInstances.AcquireReaderLock">
            <summary>Establecer el shim de ReaderWriterLock.AcquireReaderLock()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReaderWriterLock.AllInstances.AcquireWriterLock">
            <summary>Establecer el shim de ReaderWriterLock.AcquireWriterLock()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReaderWriterLock.AllInstances.ReleaseReaderLock">
            <summary>Establecer el shim de ReaderWriterLock.ReleaseReaderLock()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReaderWriterLock.AllInstances.ReleaseWriterLock">
            <summary>Establecer el shim de ReaderWriterLock.ReleaseWriterLock()</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimReaderWriterLock.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimReaderWriterLock.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReaderWriterLock.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReaderWriterLock.Constructor">
            <summary>Establecer el shim de ReaderWriterLock.ReaderWriterLock()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReaderWriterLock.ReleaseReaderLock">
            <summary>Establecer el shim de ReaderWriterLock.ReleaseReaderLock()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReaderWriterLock.ReleaseWriterLock">
            <summary>Establecer el shim de ReaderWriterLock.ReleaseWriterLock()</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimReusableStringWriter">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Util.ReusableStringWriter</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimReusableStringWriter.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimReusableStringWriter.#ctor(log4net.Util.ReusableStringWriter)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimReusableStringWriter.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReusableStringWriter.AllInstances.DisposeBoolean">
            <summary>Establecer el shim de ReusableStringWriter.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReusableStringWriter.AllInstances.ResetInt32Int32">
            <summary>Establecer el shim de ReusableStringWriter.Reset(Int32 maxCapacity, Int32 defaultSize)</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimReusableStringWriter.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimReusableStringWriter.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReusableStringWriter.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimReusableStringWriter.Bind(System.IDisposable)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReusableStringWriter.ConstructorIFormatProvider">
            <summary>Establecer el shim de ReusableStringWriter.ReusableStringWriter(IFormatProvider formatProvider)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReusableStringWriter.DisposeBoolean">
            <summary>Establecer el shim de ReusableStringWriter.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimReusableStringWriter.ResetInt32Int32">
            <summary>Establecer el shim de ReusableStringWriter.Reset(Int32 maxCapacity, Int32 defaultSize)</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimSystemInfo">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Util.SystemInfo</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimSystemInfo.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimSystemInfo.#ctor(log4net.Util.SystemInfo)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimSystemInfo.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimSystemInfo.ApplicationBaseDirectoryGet">
            <summary>Establecer el shim de SystemInfo.get_ApplicationBaseDirectory()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimSystemInfo.ApplicationFriendlyNameGet">
            <summary>Establecer el shim de SystemInfo.get_ApplicationFriendlyName()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimSystemInfo.AssemblyFileNameAssembly">
            <summary>Establecer el shim de SystemInfo.AssemblyFileName(Assembly myAssembly)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimSystemInfo.AssemblyLocationInfoAssembly">
            <summary>Establecer el shim de SystemInfo.AssemblyLocationInfo(Assembly myAssembly)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimSystemInfo.AssemblyQualifiedNameType">
            <summary>Establecer el shim de SystemInfo.AssemblyQualifiedName(Type type)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimSystemInfo.AssemblyShortNameAssembly">
            <summary>Establecer el shim de SystemInfo.AssemblyShortName(Assembly myAssembly)</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimSystemInfo.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimSystemInfo.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimSystemInfo.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimSystemInfo.ConfigurationFileLocationGet">
            <summary>Establecer el shim de SystemInfo.get_ConfigurationFileLocation()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimSystemInfo.Constructor">
            <summary>Establecer el shim de SystemInfo.SystemInfo()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimSystemInfo.ConvertToFullPathString">
            <summary>Establecer el shim de SystemInfo.ConvertToFullPath(String path)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimSystemInfo.CreateArgumentOutOfRangeExceptionStringObjectString">
            <summary>Establecer el shim de SystemInfo.CreateArgumentOutOfRangeException(String parameterName, Object actualValue, String message)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimSystemInfo.CreateCaseInsensitiveHashtable">
            <summary>Establecer el shim de SystemInfo.CreateCaseInsensitiveHashtable()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimSystemInfo.CurrentThreadIdGet">
            <summary>Establecer el shim de SystemInfo.get_CurrentThreadId()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimSystemInfo.EntryAssemblyLocationGet">
            <summary>Establecer el shim de SystemInfo.get_EntryAssemblyLocation()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimSystemInfo.EqualsIgnoringCaseStringString">
            <summary>Establecer el shim de SystemInfo.EqualsIgnoringCase(String a, String b)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimSystemInfo.GetAppSettingString">
            <summary>Establecer el shim de SystemInfo.GetAppSetting(String key)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimSystemInfo.GetTypeFromStringAssemblyStringBooleanBoolean">
            <summary>Establecer el shim de SystemInfo.GetTypeFromString(Assembly relativeAssembly, String typeName, Boolean throwOnError, Boolean ignoreCase)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimSystemInfo.GetTypeFromStringStringBooleanBoolean">
            <summary>Establecer el shim de SystemInfo.GetTypeFromString(String typeName, Boolean throwOnError, Boolean ignoreCase)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimSystemInfo.GetTypeFromStringTypeStringBooleanBoolean">
            <summary>Establecer el shim de SystemInfo.GetTypeFromString(Type relativeType, String typeName, Boolean throwOnError, Boolean ignoreCase)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimSystemInfo.HostNameGet">
            <summary>Establecer el shim de SystemInfo.get_HostName()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimSystemInfo.NewGuid">
            <summary>Establecer el shim de SystemInfo.NewGuid()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimSystemInfo.NewLineGet">
            <summary>Establecer el shim de SystemInfo.get_NewLine()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimSystemInfo.NotAvailableTextGet">
            <summary>Establecer el shim de SystemInfo.get_NotAvailableText()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimSystemInfo.NotAvailableTextSetString">
            <summary>Establecer el shim de SystemInfo.set_NotAvailableText(String value)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimSystemInfo.NullTextGet">
            <summary>Establecer el shim de SystemInfo.get_NullText()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimSystemInfo.NullTextSetString">
            <summary>Establecer el shim de SystemInfo.set_NullText(String value)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimSystemInfo.ProcessStartTimeGet">
            <summary>Establecer el shim de SystemInfo.get_ProcessStartTime()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimSystemInfo.ProcessStartTimeUtcGet">
            <summary>Establecer el shim de SystemInfo.get_ProcessStartTimeUtc()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimSystemInfo.StaticConstructor">
            <summary>Establecer el shim de SystemInfo.SystemInfo()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimSystemInfo.TryParseStringInt16Out">
            <summary>Establecer el shim de SystemInfo.TryParse(String s, Int16&amp; val)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimSystemInfo.TryParseStringInt32Out">
            <summary>Establecer el shim de SystemInfo.TryParse(String s, Int32&amp; val)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimSystemInfo.TryParseStringInt64Out">
            <summary>Establecer el shim de SystemInfo.TryParse(String s, Int64&amp; val)</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimSystemStringFormat">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Util.SystemStringFormat</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimSystemStringFormat.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimSystemStringFormat.#ctor(log4net.Util.SystemStringFormat)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimSystemStringFormat.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimSystemStringFormat.AllInstances.ToString01">
            <summary>Establecer el shim de SystemStringFormat.ToString()</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimSystemStringFormat.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimSystemStringFormat.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimSystemStringFormat.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimSystemStringFormat.ConstructorIFormatProviderStringObjectArray">
            <summary>Establecer el shim de SystemStringFormat.SystemStringFormat(IFormatProvider provider, String format, Object[] args)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimSystemStringFormat.RenderArrayArrayStringBuilder">
            <summary>Establecer el shim de SystemStringFormat.RenderArray(Array array, StringBuilder buffer)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimSystemStringFormat.RenderObjectObjectStringBuilder">
            <summary>Establecer el shim de SystemStringFormat.RenderObject(Object obj, StringBuilder buffer)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimSystemStringFormat.StaticConstructor">
            <summary>Establecer el shim de SystemStringFormat.SystemStringFormat()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimSystemStringFormat.StringFormatErrorExceptionStringObjectArray">
            <summary>Establecer el shim de SystemStringFormat.StringFormatError(Exception formatException, String format, Object[] args)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimSystemStringFormat.StringFormatIFormatProviderStringObjectArray">
            <summary>Establecer el shim de SystemStringFormat.StringFormat(IFormatProvider provider, String format, Object[] args)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimSystemStringFormat.ToString">
            <summary>Establecer el shim de SystemStringFormat.ToString()</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimTextWriterAdapter">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Util.TextWriterAdapter</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimTextWriterAdapter.#ctor(log4net.Util.TextWriterAdapter)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimTextWriterAdapter.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimTextWriterAdapter.AllInstances.Close">
            <summary>Establecer el shim de TextWriterAdapter.Close()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimTextWriterAdapter.AllInstances.DisposeBoolean">
            <summary>Establecer el shim de TextWriterAdapter.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimTextWriterAdapter.AllInstances.Flush">
            <summary>Establecer el shim de TextWriterAdapter.Flush()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimTextWriterAdapter.AllInstances.FormatProviderGet">
            <summary>Establecer el shim de TextWriterAdapter.get_FormatProvider()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimTextWriterAdapter.AllInstances.NewLineGet">
            <summary>Establecer el shim de TextWriterAdapter.get_NewLine()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimTextWriterAdapter.AllInstances.NewLineSetString">
            <summary>Establecer el shim de TextWriterAdapter.set_NewLine(String value)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimTextWriterAdapter.AllInstances.WriteChar">
            <summary>Establecer el shim de TextWriterAdapter.Write(Char value)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimTextWriterAdapter.AllInstances.WriteCharArrayInt32Int32">
            <summary>Establecer el shim de TextWriterAdapter.Write(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimTextWriterAdapter.AllInstances.WriteString">
            <summary>Establecer el shim de TextWriterAdapter.Write(String value)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimTextWriterAdapter.AllInstances.WriterGet">
            <summary>Establecer el shim de TextWriterAdapter.get_Writer()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimTextWriterAdapter.AllInstances.WriterSetTextWriter">
            <summary>Establecer el shim de TextWriterAdapter.set_Writer(TextWriter value)</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimTextWriterAdapter.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimTextWriterAdapter.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimTextWriterAdapter.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimTextWriterAdapter.Bind(System.IDisposable)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimTextWriterAdapter.Close">
            <summary>Establecer el shim de TextWriterAdapter.Close()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimTextWriterAdapter.ConstructorTextWriter">
            <summary>Establecer el shim de TextWriterAdapter.TextWriterAdapter(TextWriter writer)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimTextWriterAdapter.DisposeBoolean">
            <summary>Establecer el shim de TextWriterAdapter.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimTextWriterAdapter.Flush">
            <summary>Establecer el shim de TextWriterAdapter.Flush()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimTextWriterAdapter.FormatProviderGet">
            <summary>Establecer el shim de TextWriterAdapter.get_FormatProvider()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimTextWriterAdapter.NewLineGet">
            <summary>Establecer el shim de TextWriterAdapter.get_NewLine()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimTextWriterAdapter.NewLineSetString">
            <summary>Establecer el shim de TextWriterAdapter.set_NewLine(String value)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimTextWriterAdapter.WriteChar">
            <summary>Establecer el shim de TextWriterAdapter.Write(Char value)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimTextWriterAdapter.WriteCharArrayInt32Int32">
            <summary>Establecer el shim de TextWriterAdapter.Write(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimTextWriterAdapter.WriteString">
            <summary>Establecer el shim de TextWriterAdapter.Write(String value)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimTextWriterAdapter.WriterGet">
            <summary>Establecer el shim de TextWriterAdapter.get_Writer()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimTextWriterAdapter.WriterSetTextWriter">
            <summary>Establecer el shim de TextWriterAdapter.set_Writer(TextWriter value)</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimThreadContextProperties">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Util.ThreadContextProperties</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimThreadContextProperties.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimThreadContextProperties.#ctor(log4net.Util.ThreadContextProperties)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimThreadContextProperties.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimThreadContextProperties.AllInstances.Clear">
            <summary>Establecer el shim de ThreadContextProperties.Clear()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimThreadContextProperties.AllInstances.GetKeys">
            <summary>Establecer el shim de ThreadContextProperties.GetKeys()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimThreadContextProperties.AllInstances.GetPropertiesBoolean">
            <summary>Establecer el shim de ThreadContextProperties.GetProperties(Boolean create)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimThreadContextProperties.AllInstances.ItemGetString">
            <summary>Establecer el shim de ThreadContextProperties.get_Item(String key)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimThreadContextProperties.AllInstances.ItemSetStringObject">
            <summary>Establecer el shim de ThreadContextProperties.set_Item(String key, Object value)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimThreadContextProperties.AllInstances.RemoveString">
            <summary>Establecer el shim de ThreadContextProperties.Remove(String key)</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimThreadContextProperties.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimThreadContextProperties.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimThreadContextProperties.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimThreadContextProperties.Clear">
            <summary>Establecer el shim de ThreadContextProperties.Clear()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimThreadContextProperties.Constructor">
            <summary>Establecer el shim de ThreadContextProperties.ThreadContextProperties()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimThreadContextProperties.GetKeys">
            <summary>Establecer el shim de ThreadContextProperties.GetKeys()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimThreadContextProperties.GetPropertiesBoolean">
            <summary>Establecer el shim de ThreadContextProperties.GetProperties(Boolean create)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimThreadContextProperties.ItemGetString">
            <summary>Establecer el shim de ThreadContextProperties.get_Item(String key)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimThreadContextProperties.ItemSetStringObject">
            <summary>Establecer el shim de ThreadContextProperties.set_Item(String key, Object value)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimThreadContextProperties.RemoveString">
            <summary>Establecer el shim de ThreadContextProperties.Remove(String key)</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimThreadContextStack">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Util.ThreadContextStack</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimThreadContextStack.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimThreadContextStack.#ctor(log4net.Util.ThreadContextStack)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimThreadContextStack.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimThreadContextStack.AllInstances.Clear">
            <summary>Establecer el shim de ThreadContextStack.Clear()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimThreadContextStack.AllInstances.CountGet">
            <summary>Establecer el shim de ThreadContextStack.get_Count()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimThreadContextStack.AllInstances.GetFullMessage">
            <summary>Establecer el shim de ThreadContextStack.GetFullMessage()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimThreadContextStack.AllInstances.InternalStackGet">
            <summary>Establecer el shim de ThreadContextStack.get_InternalStack()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimThreadContextStack.AllInstances.InternalStackSetStack">
            <summary>Establecer el shim de ThreadContextStack.set_InternalStack(Stack value)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimThreadContextStack.AllInstances.Pop">
            <summary>Establecer el shim de ThreadContextStack.Pop()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimThreadContextStack.AllInstances.PushString">
            <summary>Establecer el shim de ThreadContextStack.Push(String message)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimThreadContextStack.AllInstances.ToString01">
            <summary>Establecer el shim de ThreadContextStack.ToString()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimThreadContextStack.AllInstances.log4netCoreIFixingRequiredGetFixedObject">
            <summary>Establecer el shim de ThreadContextStack.log4net.Core.IFixingRequired.GetFixedObject()</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimThreadContextStack.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimThreadContextStack.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimThreadContextStack.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimThreadContextStack.Bind(log4net.Core.IFixingRequired)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimThreadContextStack.Clear">
            <summary>Establecer el shim de ThreadContextStack.Clear()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimThreadContextStack.Constructor">
            <summary>Establecer el shim de ThreadContextStack.ThreadContextStack()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimThreadContextStack.CountGet">
            <summary>Establecer el shim de ThreadContextStack.get_Count()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimThreadContextStack.GetFullMessage">
            <summary>Establecer el shim de ThreadContextStack.GetFullMessage()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimThreadContextStack.InternalStackGet">
            <summary>Establecer el shim de ThreadContextStack.get_InternalStack()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimThreadContextStack.InternalStackSetStack">
            <summary>Establecer el shim de ThreadContextStack.set_InternalStack(Stack value)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimThreadContextStack.Pop">
            <summary>Establecer el shim de ThreadContextStack.Pop()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimThreadContextStack.PushString">
            <summary>Establecer el shim de ThreadContextStack.Push(String message)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimThreadContextStack.ToString">
            <summary>Establecer el shim de ThreadContextStack.ToString()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimThreadContextStack.log4netCoreIFixingRequiredGetFixedObject">
            <summary>Establecer el shim de ThreadContextStack.log4net.Core.IFixingRequired.GetFixedObject()</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimThreadContextStacks">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Util.ThreadContextStacks</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimThreadContextStacks.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimThreadContextStacks.#ctor(log4net.Util.ThreadContextStacks)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimThreadContextStacks.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimThreadContextStacks.AllInstances.ItemGetString">
            <summary>Establecer el shim de ThreadContextStacks.get_Item(String key)</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimThreadContextStacks.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimThreadContextStacks.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimThreadContextStacks.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimThreadContextStacks.ConstructorContextPropertiesBase">
            <summary>Establecer el shim de ThreadContextStacks.ThreadContextStacks(ContextPropertiesBase properties)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimThreadContextStacks.ItemGetString">
            <summary>Establecer el shim de ThreadContextStacks.get_Item(String key)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimThreadContextStacks.StaticConstructor">
            <summary>Establecer el shim de ThreadContextStacks.ThreadContextStacks()</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimTransform">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Util.Transform</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimTransform.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimTransform.#ctor(log4net.Util.Transform)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimTransform.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimTransform.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimTransform.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimTransform.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimTransform.Constructor">
            <summary>Establecer el shim de Transform.Transform()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimTransform.CountSubstringsStringString">
            <summary>Establecer el shim de Transform.CountSubstrings(String text, String substring)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimTransform.MaskXmlInvalidCharactersStringString">
            <summary>Establecer el shim de Transform.MaskXmlInvalidCharacters(String textData, String mask)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimTransform.StaticConstructor">
            <summary>Establecer el shim de Transform.Transform()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimTransform.WriteEscapedXmlStringXmlWriterStringString">
            <summary>Establecer el shim de Transform.WriteEscapedXmlString(XmlWriter writer, String textData, String invalidCharReplacement)</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimWindowsSecurityContext">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Util.WindowsSecurityContext</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimWindowsSecurityContext.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimWindowsSecurityContext.#ctor(log4net.Util.WindowsSecurityContext)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimWindowsSecurityContext.ActivateOptions">
            <summary>Establecer el shim de WindowsSecurityContext.ActivateOptions()</summary>
        </member>
        <member name="T:log4net.Util.Fakes.ShimWindowsSecurityContext.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimWindowsSecurityContext.AllInstances.ActivateOptions">
            <summary>Establecer el shim de WindowsSecurityContext.ActivateOptions()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimWindowsSecurityContext.AllInstances.CredentialsGet">
            <summary>Establecer el shim de WindowsSecurityContext.get_Credentials()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimWindowsSecurityContext.AllInstances.CredentialsSetWindowsSecurityContextImpersonationMode">
            <summary>Establecer el shim de WindowsSecurityContext.set_Credentials(ImpersonationMode value)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimWindowsSecurityContext.AllInstances.DomainNameGet">
            <summary>Establecer el shim de WindowsSecurityContext.get_DomainName()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimWindowsSecurityContext.AllInstances.DomainNameSetString">
            <summary>Establecer el shim de WindowsSecurityContext.set_DomainName(String value)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimWindowsSecurityContext.AllInstances.ImpersonateObject">
            <summary>Establecer el shim de WindowsSecurityContext.Impersonate(Object state)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimWindowsSecurityContext.AllInstances.PasswordSetString">
            <summary>Establecer el shim de WindowsSecurityContext.set_Password(String value)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimWindowsSecurityContext.AllInstances.UserNameGet">
            <summary>Establecer el shim de WindowsSecurityContext.get_UserName()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimWindowsSecurityContext.AllInstances.UserNameSetString">
            <summary>Establecer el shim de WindowsSecurityContext.set_UserName(String value)</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimWindowsSecurityContext.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimWindowsSecurityContext.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimWindowsSecurityContext.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Util.Fakes.ShimWindowsSecurityContext.Bind(log4net.Core.IOptionHandler)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimWindowsSecurityContext.Constructor">
            <summary>Establecer el shim de WindowsSecurityContext.WindowsSecurityContext()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimWindowsSecurityContext.CredentialsGet">
            <summary>Establecer el shim de WindowsSecurityContext.get_Credentials()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimWindowsSecurityContext.CredentialsSetWindowsSecurityContextImpersonationMode">
            <summary>Establecer el shim de WindowsSecurityContext.set_Credentials(ImpersonationMode value)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimWindowsSecurityContext.DomainNameGet">
            <summary>Establecer el shim de WindowsSecurityContext.get_DomainName()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimWindowsSecurityContext.DomainNameSetString">
            <summary>Establecer el shim de WindowsSecurityContext.set_DomainName(String value)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimWindowsSecurityContext.ImpersonateObject">
            <summary>Establecer el shim de WindowsSecurityContext.Impersonate(Object state)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimWindowsSecurityContext.PasswordSetString">
            <summary>Establecer el shim de WindowsSecurityContext.set_Password(String value)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimWindowsSecurityContext.UserNameGet">
            <summary>Establecer el shim de WindowsSecurityContext.get_UserName()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.ShimWindowsSecurityContext.UserNameSetString">
            <summary>Establecer el shim de WindowsSecurityContext.set_UserName(String value)</summary>
        </member>
        <member name="T:log4net.Util.Fakes.StubAppenderAttachedImpl">
            <summary>Tipo stub de log4net.Util.AppenderAttachedImpl</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubAppenderAttachedImpl.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubAppenderAttachedImpl.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubAppenderAttachedImpl.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubAppenderAttachedImpl</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubAppenderAttachedImpl.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubAppenderAttachedImpl.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:log4net.Util.Fakes.StubContextPropertiesBase">
            <summary>Tipo stub de log4net.Util.ContextPropertiesBase</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubContextPropertiesBase.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubContextPropertiesBase.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubContextPropertiesBase.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubContextPropertiesBase</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubContextPropertiesBase.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubContextPropertiesBase.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubContextPropertiesBase.Item(System.String)">
            <summary>Establecer el stub de ContextPropertiesBase.get_Item(String key)</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubContextPropertiesBase.ItemGetString">
            <summary>Establecer el stub de ContextPropertiesBase.get_Item(String key)</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubContextPropertiesBase.ItemSetStringObject">
            <summary>Establecer el stub de ContextPropertiesBase.set_Item(String key, Object value)</summary>
        </member>
        <member name="T:log4net.Util.Fakes.StubCyclicBuffer">
            <summary>Tipo stub de log4net.Util.CyclicBuffer</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubCyclicBuffer.#ctor(System.Int32)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubCyclicBuffer.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubCyclicBuffer.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubCyclicBuffer</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubCyclicBuffer.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubCyclicBuffer.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:log4net.Util.Fakes.StubFormattingInfo">
            <summary>Tipo stub de log4net.Util.FormattingInfo</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubFormattingInfo.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubFormattingInfo.#ctor(System.Int32,System.Int32,System.Boolean)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubFormattingInfo.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubFormattingInfo.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubFormattingInfo</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubFormattingInfo.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubFormattingInfo.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:log4net.Util.Fakes.StubLevelMappingEntry">
            <summary>Tipo stub de log4net.Util.LevelMappingEntry</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubLevelMappingEntry.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubLevelMappingEntry.ActivateOptions">
            <summary>Establecer el stub de LevelMappingEntry.ActivateOptions()</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubLevelMappingEntry.ActivateOptions01">
            <summary>Establecer el stub de LevelMappingEntry.ActivateOptions()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubLevelMappingEntry.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubLevelMappingEntry.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubLevelMappingEntry</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubLevelMappingEntry.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubLevelMappingEntry.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:log4net.Util.Fakes.StubLogReceivedEventArgs">
            <summary>Tipo stub de log4net.Util.LogReceivedEventArgs</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubLogReceivedEventArgs.#ctor(log4net.Util.LogLog)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubLogReceivedEventArgs.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubLogReceivedEventArgs.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubLogReceivedEventArgs</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubLogReceivedEventArgs.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubLogReceivedEventArgs.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:log4net.Util.Fakes.StubOnlyOnceErrorHandler">
            <summary>Tipo stub de log4net.Util.OnlyOnceErrorHandler</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubOnlyOnceErrorHandler.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubOnlyOnceErrorHandler.#ctor(System.String)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubOnlyOnceErrorHandler.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubOnlyOnceErrorHandler.FirstError(System.String,System.Exception,log4net.Core.ErrorCode)">
            <summary>Establecer el stub de OnlyOnceErrorHandler.FirstError(String message, Exception e, ErrorCode errorCode)</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubOnlyOnceErrorHandler.FirstErrorStringExceptionErrorCode">
            <summary>Establecer el stub de OnlyOnceErrorHandler.FirstError(String message, Exception e, ErrorCode errorCode)</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubOnlyOnceErrorHandler.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubOnlyOnceErrorHandler</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubOnlyOnceErrorHandler.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubOnlyOnceErrorHandler.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:log4net.Util.Fakes.StubPatternConverter">
            <summary>Tipo stub de log4net.Util.PatternConverter</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubPatternConverter.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubPatternConverter.AttachBackingFieldToFormattingInfo">
            <summary>Asocia delegados para emular StubPatternConverter.FormattingInfo como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubPatternConverter.AttachBackingFieldToOption">
            <summary>Asocia delegados para emular StubPatternConverter.Option como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubPatternConverter.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubPatternConverter.Convert(System.IO.TextWriter,System.Object)">
            <summary>Establecer el stub de PatternConverter.Convert(TextWriter writer, Object state)</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubPatternConverter.ConvertTextWriterObject">
            <summary>Establecer el stub de PatternConverter.Convert(TextWriter writer, Object state)</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubPatternConverter.Format(System.IO.TextWriter,System.Object)">
            <summary>Establecer el stub de PatternConverter.Format(TextWriter writer, Object state)</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubPatternConverter.FormatTextWriterObject">
            <summary>Establecer el stub de PatternConverter.Format(TextWriter writer, Object state)</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubPatternConverter.FormattingInfo">
            <summary>Establecer el stub de PatternConverter.get_FormattingInfo()</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubPatternConverter.FormattingInfoGet">
            <summary>Establecer el stub de PatternConverter.get_FormattingInfo()</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubPatternConverter.FormattingInfoSetFormattingInfo">
            <summary>Establecer el stub de PatternConverter.set_FormattingInfo(FormattingInfo value)</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubPatternConverter.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubPatternConverter</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubPatternConverter.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubPatternConverter.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubPatternConverter.Next">
            <summary>Establecer el stub de PatternConverter.get_Next()</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubPatternConverter.NextGet">
            <summary>Establecer el stub de PatternConverter.get_Next()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubPatternConverter.Option">
            <summary>Establecer el stub de PatternConverter.get_Option()</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubPatternConverter.OptionGet">
            <summary>Establecer el stub de PatternConverter.get_Option()</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubPatternConverter.OptionSetString">
            <summary>Establecer el stub de PatternConverter.set_Option(String value)</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubPatternConverter.SetNext(log4net.Util.PatternConverter)">
            <summary>Establecer el stub de PatternConverter.SetNext(PatternConverter patternConverter)</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubPatternConverter.SetNextPatternConverter">
            <summary>Establecer el stub de PatternConverter.SetNext(PatternConverter patternConverter)</summary>
        </member>
        <member name="T:log4net.Util.Fakes.StubPatternString">
            <summary>Tipo stub de log4net.Util.PatternString</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubPatternString.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubPatternString.#ctor(System.String)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubPatternString.ActivateOptions">
            <summary>Establecer el stub de PatternString.ActivateOptions()</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubPatternString.ActivateOptions01">
            <summary>Establecer el stub de PatternString.ActivateOptions()</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubPatternString.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubPatternString.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubPatternString</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubPatternString.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubPatternString.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:log4net.Util.Fakes.StubPropertyEntry">
            <summary>Tipo stub de log4net.Util.PropertyEntry</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubPropertyEntry.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubPropertyEntry.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubPropertyEntry.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubPropertyEntry</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubPropertyEntry.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubPropertyEntry.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubPropertyEntry.ToString">
            <summary>Establecer el stub de PropertyEntry.ToString()</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubPropertyEntry.ToString01">
            <summary>Establecer el stub de PropertyEntry.ToString()</summary>
        </member>
        <member name="T:log4net.Util.Fakes.StubReadOnlyPropertiesDictionary">
            <summary>Tipo stub de log4net.Util.ReadOnlyPropertiesDictionary</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubReadOnlyPropertiesDictionary.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubReadOnlyPropertiesDictionary.#ctor(log4net.Util.ReadOnlyPropertiesDictionary)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubReadOnlyPropertiesDictionary.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubReadOnlyPropertiesDictionary.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubReadOnlyPropertiesDictionary.Clear">
            <summary>Establecer el stub de ReadOnlyPropertiesDictionary.Clear()</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubReadOnlyPropertiesDictionary.Clear01">
            <summary>Establecer el stub de ReadOnlyPropertiesDictionary.Clear()</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubReadOnlyPropertiesDictionary.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Establecer el stub de ReadOnlyPropertiesDictionary.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubReadOnlyPropertiesDictionary.GetObjectDataSerializationInfoStreamingContext">
            <summary>Establecer el stub de ReadOnlyPropertiesDictionary.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubReadOnlyPropertiesDictionary.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubReadOnlyPropertiesDictionary</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubReadOnlyPropertiesDictionary.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubReadOnlyPropertiesDictionary.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubReadOnlyPropertiesDictionary.Item(System.String)">
            <summary>Establecer el stub de ReadOnlyPropertiesDictionary.get_Item(String key)</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubReadOnlyPropertiesDictionary.ItemGetString">
            <summary>Establecer el stub de ReadOnlyPropertiesDictionary.get_Item(String key)</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubReadOnlyPropertiesDictionary.ItemSetStringObject">
            <summary>Establecer el stub de ReadOnlyPropertiesDictionary.set_Item(String key, Object value)</summary>
        </member>
        <member name="T:log4net.Util.Fakes.StubWindowsSecurityContext">
            <summary>Tipo stub de log4net.Util.WindowsSecurityContext</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubWindowsSecurityContext.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubWindowsSecurityContext.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubWindowsSecurityContext.Impersonate(System.Object)">
            <summary>Establecer el stub de WindowsSecurityContext.Impersonate(Object state)</summary>
        </member>
        <member name="F:log4net.Util.Fakes.StubWindowsSecurityContext.ImpersonateObject">
            <summary>Establecer el stub de WindowsSecurityContext.Impersonate(Object state)</summary>
        </member>
        <member name="M:log4net.Util.Fakes.StubWindowsSecurityContext.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubWindowsSecurityContext</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubWindowsSecurityContext.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Util.Fakes.StubWindowsSecurityContext.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="T:log4net.Util.TypeConverters.Fakes.ShimConversionNotSupportedException">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Util.TypeConverters.ConversionNotSupportedException</summary>
        </member>
        <member name="M:log4net.Util.TypeConverters.Fakes.ShimConversionNotSupportedException.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Util.TypeConverters.Fakes.ShimConversionNotSupportedException.#ctor(log4net.Util.TypeConverters.ConversionNotSupportedException)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Util.TypeConverters.Fakes.ShimConversionNotSupportedException.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="M:log4net.Util.TypeConverters.Fakes.ShimConversionNotSupportedException.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Util.TypeConverters.Fakes.ShimConversionNotSupportedException.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Util.TypeConverters.Fakes.ShimConversionNotSupportedException.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Util.TypeConverters.Fakes.ShimConversionNotSupportedException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Asocia los miembros de la interfaz a las correcciones de compatibilidad (shim).</summary>
        </member>
        <member name="P:log4net.Util.TypeConverters.Fakes.ShimConversionNotSupportedException.Constructor">
            <summary>Establecer el shim de ConversionNotSupportedException.ConversionNotSupportedException()</summary>
        </member>
        <member name="P:log4net.Util.TypeConverters.Fakes.ShimConversionNotSupportedException.ConstructorSerializationInfoStreamingContext">
            <summary>Establecer el shim de ConversionNotSupportedException.ConversionNotSupportedException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:log4net.Util.TypeConverters.Fakes.ShimConversionNotSupportedException.ConstructorString">
            <summary>Establecer el shim de ConversionNotSupportedException.ConversionNotSupportedException(String message)</summary>
        </member>
        <member name="P:log4net.Util.TypeConverters.Fakes.ShimConversionNotSupportedException.ConstructorStringException">
            <summary>Establecer el shim de ConversionNotSupportedException.ConversionNotSupportedException(String message, Exception innerException)</summary>
        </member>
        <member name="P:log4net.Util.TypeConverters.Fakes.ShimConversionNotSupportedException.CreateTypeObject">
            <summary>Establecer el shim de ConversionNotSupportedException.Create(Type destinationType, Object sourceValue)</summary>
        </member>
        <member name="P:log4net.Util.TypeConverters.Fakes.ShimConversionNotSupportedException.CreateTypeObjectException">
            <summary>Establecer el shim de ConversionNotSupportedException.Create(Type destinationType, Object sourceValue, Exception innerException)</summary>
        </member>
        <member name="T:log4net.Util.TypeConverters.Fakes.ShimConverterRegistry">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Util.TypeConverters.ConverterRegistry</summary>
        </member>
        <member name="M:log4net.Util.TypeConverters.Fakes.ShimConverterRegistry.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Util.TypeConverters.Fakes.ShimConverterRegistry.#ctor(log4net.Util.TypeConverters.ConverterRegistry)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="P:log4net.Util.TypeConverters.Fakes.ShimConverterRegistry.AddConverterTypeObject">
            <summary>Establecer el shim de ConverterRegistry.AddConverter(Type destinationType, Object converter)</summary>
        </member>
        <member name="P:log4net.Util.TypeConverters.Fakes.ShimConverterRegistry.AddConverterTypeType">
            <summary>Establecer el shim de ConverterRegistry.AddConverter(Type destinationType, Type converterType)</summary>
        </member>
        <member name="T:log4net.Util.TypeConverters.Fakes.ShimConverterRegistry.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="M:log4net.Util.TypeConverters.Fakes.ShimConverterRegistry.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Util.TypeConverters.Fakes.ShimConverterRegistry.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Util.TypeConverters.Fakes.ShimConverterRegistry.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Util.TypeConverters.Fakes.ShimConverterRegistry.Constructor">
            <summary>Establecer el shim de ConverterRegistry.ConverterRegistry()</summary>
        </member>
        <member name="P:log4net.Util.TypeConverters.Fakes.ShimConverterRegistry.CreateConverterInstanceType">
            <summary>Establecer el shim de ConverterRegistry.CreateConverterInstance(Type converterType)</summary>
        </member>
        <member name="P:log4net.Util.TypeConverters.Fakes.ShimConverterRegistry.GetConvertFromType">
            <summary>Establecer el shim de ConverterRegistry.GetConvertFrom(Type destinationType)</summary>
        </member>
        <member name="P:log4net.Util.TypeConverters.Fakes.ShimConverterRegistry.GetConvertToTypeType">
            <summary>Establecer el shim de ConverterRegistry.GetConvertTo(Type sourceType, Type destinationType)</summary>
        </member>
        <member name="P:log4net.Util.TypeConverters.Fakes.ShimConverterRegistry.GetConverterFromAttributeType">
            <summary>Establecer el shim de ConverterRegistry.GetConverterFromAttribute(Type destinationType)</summary>
        </member>
        <member name="P:log4net.Util.TypeConverters.Fakes.ShimConverterRegistry.StaticConstructor">
            <summary>Establecer el shim de ConverterRegistry.ConverterRegistry()</summary>
        </member>
        <member name="T:log4net.Util.TypeConverters.Fakes.ShimTypeConverterAttribute">
            <summary>Tipo de correcciones de compatibilidad (shim) de log4net.Util.TypeConverters.TypeConverterAttribute</summary>
        </member>
        <member name="M:log4net.Util.TypeConverters.Fakes.ShimTypeConverterAttribute.#ctor">
            <summary>Inicializa una nueva instancia de correcciones de compatibilidad (shim)</summary>
        </member>
        <member name="M:log4net.Util.TypeConverters.Fakes.ShimTypeConverterAttribute.#ctor(log4net.Util.TypeConverters.TypeConverterAttribute)">
            <summary>Inicializa nuevas correcciones de compatibilidad (shim) para la instancia especificada</summary>
        </member>
        <member name="T:log4net.Util.TypeConverters.Fakes.ShimTypeConverterAttribute.AllInstances">
            <summary>Definir correcciones de compatibilidad (shim) para todos los miembros de instancia</summary>
        </member>
        <member name="P:log4net.Util.TypeConverters.Fakes.ShimTypeConverterAttribute.AllInstances.ConverterTypeNameGet">
            <summary>Establecer el shim de TypeConverterAttribute.get_ConverterTypeName()</summary>
        </member>
        <member name="P:log4net.Util.TypeConverters.Fakes.ShimTypeConverterAttribute.AllInstances.ConverterTypeNameSetString">
            <summary>Establecer el shim de TypeConverterAttribute.set_ConverterTypeName(String value)</summary>
        </member>
        <member name="M:log4net.Util.TypeConverters.Fakes.ShimTypeConverterAttribute.BehaveAsCurrent">
            <summary>Asigna el comportamiento &apos;Current&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="M:log4net.Util.TypeConverters.Fakes.ShimTypeConverterAttribute.BehaveAsNotImplemented">
            <summary>Asigna el comportamiento &apos;NotImplemented&apos; a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Util.TypeConverters.Fakes.ShimTypeConverterAttribute.Behavior">
            <summary>Asigna el comportamiento a todos los métodos del tipo corregido para compatibilidad</summary>
        </member>
        <member name="P:log4net.Util.TypeConverters.Fakes.ShimTypeConverterAttribute.Constructor">
            <summary>Establecer el shim de TypeConverterAttribute.TypeConverterAttribute()</summary>
        </member>
        <member name="P:log4net.Util.TypeConverters.Fakes.ShimTypeConverterAttribute.ConstructorString">
            <summary>Establecer el shim de TypeConverterAttribute.TypeConverterAttribute(String typeName)</summary>
        </member>
        <member name="P:log4net.Util.TypeConverters.Fakes.ShimTypeConverterAttribute.ConstructorType">
            <summary>Establecer el shim de TypeConverterAttribute.TypeConverterAttribute(Type converterType)</summary>
        </member>
        <member name="P:log4net.Util.TypeConverters.Fakes.ShimTypeConverterAttribute.ConverterTypeNameGet">
            <summary>Establecer el shim de TypeConverterAttribute.get_ConverterTypeName()</summary>
        </member>
        <member name="P:log4net.Util.TypeConverters.Fakes.ShimTypeConverterAttribute.ConverterTypeNameSetString">
            <summary>Establecer el shim de TypeConverterAttribute.set_ConverterTypeName(String value)</summary>
        </member>
        <member name="T:log4net.Util.TypeConverters.Fakes.StubConversionNotSupportedException">
            <summary>Tipo stub de log4net.Util.TypeConverters.ConversionNotSupportedException</summary>
        </member>
        <member name="M:log4net.Util.TypeConverters.Fakes.StubConversionNotSupportedException.#ctor">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Util.TypeConverters.Fakes.StubConversionNotSupportedException.#ctor(System.String)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Util.TypeConverters.Fakes.StubConversionNotSupportedException.#ctor(System.String,System.Exception)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Util.TypeConverters.Fakes.StubConversionNotSupportedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Inicializa una nueva instancia</summary>
        </member>
        <member name="M:log4net.Util.TypeConverters.Fakes.StubConversionNotSupportedException.AttachBackingFieldToHelpLink">
            <summary>Asocia delegados para emular StubConversionNotSupportedException.HelpLink como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="M:log4net.Util.TypeConverters.Fakes.StubConversionNotSupportedException.AttachBackingFieldToSource">
            <summary>Asocia delegados para emular StubConversionNotSupportedException.Source como una propiedad con un campo de respaldo.</summary>
        </member>
        <member name="P:log4net.Util.TypeConverters.Fakes.StubConversionNotSupportedException.CallBase">
            <summary>Obtiene o establece un valor que indica si debe llamarse al método base en lugar del comportamiento de reserva</summary>
        </member>
        <member name="P:log4net.Util.TypeConverters.Fakes.StubConversionNotSupportedException.Data">
            <summary>Establecer el stub de Exception.get_Data()</summary>
        </member>
        <member name="F:log4net.Util.TypeConverters.Fakes.StubConversionNotSupportedException.DataGet">
            <summary>Establecer el stub de Exception.get_Data()</summary>
        </member>
        <member name="M:log4net.Util.TypeConverters.Fakes.StubConversionNotSupportedException.GetBaseException">
            <summary>Establecer el stub de Exception.GetBaseException()</summary>
        </member>
        <member name="F:log4net.Util.TypeConverters.Fakes.StubConversionNotSupportedException.GetBaseException01">
            <summary>Establecer el stub de Exception.GetBaseException()</summary>
        </member>
        <member name="M:log4net.Util.TypeConverters.Fakes.StubConversionNotSupportedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Establecer el stub de Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:log4net.Util.TypeConverters.Fakes.StubConversionNotSupportedException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Establecer el stub de Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:log4net.Util.TypeConverters.Fakes.StubConversionNotSupportedException.HelpLink">
            <summary>Establecer el stub de Exception.get_HelpLink()</summary>
        </member>
        <member name="F:log4net.Util.TypeConverters.Fakes.StubConversionNotSupportedException.HelpLinkGet">
            <summary>Establecer el stub de Exception.get_HelpLink()</summary>
        </member>
        <member name="F:log4net.Util.TypeConverters.Fakes.StubConversionNotSupportedException.HelpLinkSetString">
            <summary>Establecer el stub de Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:log4net.Util.TypeConverters.Fakes.StubConversionNotSupportedException.InitializeStub">
            <summary>Inicializa una nueva instancia de type StubConversionNotSupportedException</summary>
        </member>
        <member name="P:log4net.Util.TypeConverters.Fakes.StubConversionNotSupportedException.InstanceBehavior">
            <summary>Obtiene o establece el comportamiento de instancia.</summary>
        </member>
        <member name="P:log4net.Util.TypeConverters.Fakes.StubConversionNotSupportedException.InstanceObserver">
            <summary>Obtiene o establece el observador de la instancia.</summary>
        </member>
        <member name="P:log4net.Util.TypeConverters.Fakes.StubConversionNotSupportedException.Message">
            <summary>Establecer el stub de Exception.get_Message()</summary>
        </member>
        <member name="F:log4net.Util.TypeConverters.Fakes.StubConversionNotSupportedException.MessageGet">
            <summary>Establecer el stub de Exception.get_Message()</summary>
        </member>
        <member name="P:log4net.Util.TypeConverters.Fakes.StubConversionNotSupportedException.Source">
            <summary>Establecer el stub de Exception.get_Source()</summary>
        </member>
        <member name="F:log4net.Util.TypeConverters.Fakes.StubConversionNotSupportedException.SourceGet">
            <summary>Establecer el stub de Exception.get_Source()</summary>
        </member>
        <member name="F:log4net.Util.TypeConverters.Fakes.StubConversionNotSupportedException.SourceSetString">
            <summary>Establecer el stub de Exception.set_Source(String value)</summary>
        </member>
        <member name="P:log4net.Util.TypeConverters.Fakes.StubConversionNotSupportedException.StackTrace">
            <summary>Establecer el stub de Exception.get_StackTrace()</summary>
        </member>
        <member name="F:log4net.Util.TypeConverters.Fakes.StubConversionNotSupportedException.StackTraceGet">
            <summary>Establecer el stub de Exception.get_StackTrace()</summary>
        </member>
        <member name="M:log4net.Util.TypeConverters.Fakes.StubConversionNotSupportedException.ToString">
            <summary>Establecer el stub de Exception.ToString()</summary>
        </member>
        <member name="F:log4net.Util.TypeConverters.Fakes.StubConversionNotSupportedException.ToString01">
            <summary>Establecer el stub de Exception.ToString()</summary>
        </member>
        <member name="T:log4net.Util.TypeConverters.Fakes.StubIConvertFrom">
            <summary>Tipo stub de log4net.Util.TypeConverters.IConvertFrom</summary>
        </member>
        <member name="M:log4net.Util.TypeConverters.Fakes.StubIConvertFrom.#ctor">
            <summary>Inicializa una nueva instancia de type StubIConvertFrom</summary>
        </member>
        <member name="F:log4net.Util.TypeConverters.Fakes.StubIConvertFrom.CanConvertFromType">
            <summary>Establecer el stub de IConvertFrom.CanConvertFrom(Type sourceType)</summary>
        </member>
        <member name="F:log4net.Util.TypeConverters.Fakes.StubIConvertFrom.ConvertFromObject">
            <summary>Establecer el stub de IConvertFrom.ConvertFrom(Object source)</summary>
        </member>
        <member name="M:log4net.Util.TypeConverters.Fakes.StubIConvertFrom.log4net#Util#TypeConverters#IConvertFrom#CanConvertFrom(System.Type)">
            <summary>Establecer el stub de IConvertFrom.CanConvertFrom(Type sourceType)</summary>
        </member>
        <member name="M:log4net.Util.TypeConverters.Fakes.StubIConvertFrom.log4net#Util#TypeConverters#IConvertFrom#ConvertFrom(System.Object)">
            <summary>Establecer el stub de IConvertFrom.ConvertFrom(Object source)</summary>
        </member>
        <member name="T:log4net.Util.TypeConverters.Fakes.StubIConvertTo">
            <summary>Tipo stub de log4net.Util.TypeConverters.IConvertTo</summary>
        </member>
        <member name="M:log4net.Util.TypeConverters.Fakes.StubIConvertTo.#ctor">
            <summary>Inicializa una nueva instancia de type StubIConvertTo</summary>
        </member>
        <member name="F:log4net.Util.TypeConverters.Fakes.StubIConvertTo.CanConvertToType">
            <summary>Establecer el stub de IConvertTo.CanConvertTo(Type targetType)</summary>
        </member>
        <member name="F:log4net.Util.TypeConverters.Fakes.StubIConvertTo.ConvertToObjectType">
            <summary>Establecer el stub de IConvertTo.ConvertTo(Object source, Type targetType)</summary>
        </member>
        <member name="M:log4net.Util.TypeConverters.Fakes.StubIConvertTo.log4net#Util#TypeConverters#IConvertTo#CanConvertTo(System.Type)">
            <summary>Establecer el stub de IConvertTo.CanConvertTo(Type targetType)</summary>
        </member>
        <member name="M:log4net.Util.TypeConverters.Fakes.StubIConvertTo.log4net#Util#TypeConverters#IConvertTo#ConvertTo(System.Object,System.Type)">
            <summary>Establecer el stub de IConvertTo.ConvertTo(Object source, Type targetType)</summary>
        </member>
    </members>
</doc>
